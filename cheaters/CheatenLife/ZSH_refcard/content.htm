<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-gb" lang="en-gb"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>ZSH_refcard</title><style type="text/css"> * {margin:0; padding:0; text-indent:0; }
 .s1 { color: black; font-family:"Times New Roman", serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 .p, p { color: black; font-family:"Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; margin:0pt; }
 .s2 { color: black; font-family:"Times New Roman", serif; font-style: italic; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .h1, h1 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 .s3 { color: black; font-family:Arial, sans-serif; font-style: italic; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s4 { color: black; font-family:"Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s5 { color: black; font-family:Arial-BoldItalicMT, sans-serif; font-style: italic; font-weight: bold; text-decoration: none; font-size: 9pt; }
 .s6 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; vertical-align: -5pt; }
 .s7 { color: black; font-family:Arial, sans-serif; font-style: italic; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s8 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 .s9 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 .s10 { color: black; font-family:"Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s11 { color: black; font-family:Arial, sans-serif; font-style: italic; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s12 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; vertical-align: -3pt; }
 .s13 { color: black; font-family:"Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; vertical-align: -2pt; }
 .s14 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; vertical-align: 3pt; }
 .s15 { color: black; font-family:"Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s16 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 .s17 { color: black; font-family:Arial, sans-serif; font-style: italic; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s18 { color: black; font-family:"Times New Roman", serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 .s19 { color: black; font-family:"Times New Roman", serif; font-style: italic; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s20 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s21 { color: black; font-family:Symbol; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s22 { color: black; font-family:"Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; vertical-align: 4pt; }
 .s23 { color: black; font-family:"Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; vertical-align: 2pt; }
 .s25 { color: #00007F; font-family:Arial, sans-serif; font-style: italic; font-weight: normal; text-decoration: underline; font-size: 9pt; }
 .s26 { color: #00007F; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: underline; font-size: 9pt; }
 .s27 { color: #00007F; font-family:Arial, sans-serif; font-style: italic; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s28 { color: black; font-family:"Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; vertical-align: 1pt; }
 .s29 { color: black; font-family:"Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 5pt; vertical-align: 4pt; }
 li {display: block; }
 #l1 {padding-left: 0pt;counter-reset: c1 1; }
 #l1> li:before {counter-increment: c1; content: counter(c1, decimal)" "; color: black; font-family:"Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l1> li:first-child:before {counter-increment: c1 0;  }
 li {display: block; }
 #l2 {padding-left: 0pt;counter-reset: d1 1; }
 #l2> li:before {counter-increment: d1; content: counter(d1, decimal)" "; color: black; font-family:"Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l2> li:first-child:before {counter-increment: d1 0;  }
 #l3 {padding-left: 0pt;counter-reset: e1 20; }
 #l3> li:before {counter-increment: e1; content: counter(e1, lower-latin)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l3> li:first-child:before {counter-increment: e1 0;  }
 #l4 {padding-left: 0pt;counter-reset: f1 23; }
 #l4> li:before {counter-increment: f1; content: counter(f1, upper-latin)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l4> li:first-child:before {counter-increment: f1 0;  }
 #l5 {padding-left: 0pt;counter-reset: g1 13; }
 #l5> li:before {counter-increment: g1; content: counter(g1, upper-latin)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l5> li:first-child:before {counter-increment: g1 0;  }
 #l6 {padding-left: 0pt;counter-reset: h1 1; }
 #l6> li:before {counter-increment: h1; content: counter(h1, decimal)". "; color: black; font-family:"Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l6> li:first-child:before {counter-increment: h1 0;  }
 #l7 {padding-left: 0pt; }
 #l7> li:before {content: "• "; color: black; font-family:Symbol; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 li {display: block; }
 #l8 {padding-left: 0pt; }
 #l8> li:before {content: "• "; color: black; font-family:Symbol; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
</style></head><body><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1" style="padding-top: 5pt;padding-left: 333pt;text-indent: 0pt;text-align: center;"><a name="a0">Contents</a></p><ol id="l1"><li style="padding-left: 41pt;text-indent: -35pt;text-align: left;"><p style="display: inline;">General information, references</p></li><li style="padding-top: 1pt;padding-left: 41pt;text-indent: -35pt;text-align: left;"><p style="display: inline;">Grammar (shell syntax)</p></li><li style="padding-left: 41pt;text-indent: -35pt;text-align: left;"><p style="display: inline;">Patterns: globbing and qualifiers</p></li><li style="padding-top: 1pt;padding-left: 41pt;text-indent: -35pt;text-align: left;"><p style="display: inline;">Options</p></li><li style="padding-left: 41pt;text-indent: -35pt;text-align: left;"><p style="display: inline;">Options cont.; option aliases, single letter options</p></li><li style="padding-top: 1pt;padding-left: 41pt;text-indent: -35pt;text-align: left;"><p style="display: inline;">Expansion: basic forms, history, prompts</p></li><li style="padding-left: 41pt;text-indent: -35pt;text-align: left;"><p style="display: inline;">Expansion: variables: forms and flags</p></li><li style="padding-top: 1pt;padding-left: 41pt;text-indent: -35pt;text-align: left;"><p style="display: inline;">Shell variables: set by shell, used by shell</p></li><li style="padding-left: 41pt;text-indent: -35pt;text-align: left;"><p style="display: inline;">Test operators; numeric expressions</p></li><li style="padding-top: 1pt;padding-left: 41pt;text-indent: -35pt;text-align: left;"><p style="display: inline;">Completion: contexts, completers, tags</p></li><li style="padding-left: 41pt;text-indent: -35pt;text-align: left;"><p style="display: inline;">Completion cont.: tags cont, styles</p></li><li style="padding-top: 1pt;padding-left: 41pt;text-indent: -35pt;text-align: left;"><p style="display: inline;">Completion cont.: styles cont, utility functions</p></li><li style="padding-left: 41pt;text-indent: -35pt;text-align: left;"><p style="display: inline;">Zsh line editor (zle)</p></li></ol><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1" style="padding-left: 333pt;text-indent: 0pt;text-align: center;"><a name="a1">Notes</a></p><p style="padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;line-height: 110%;text-align: left;">The descriptions here are <i>very </i>brief. You will not be able to learn shell syntax from them; see the various references below. In particular the completion system is extremely rich and the descriptions of its utility functions are the barest memory joggers.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 110%;text-align: left;">The start and end of each section is aligned with page boundaries, so you can print out only the parts you want to refer to.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1" style="padding-left: 333pt;text-indent: 0pt;text-align: center;"><a name="a2">References</a></p><p class="s1" style="padding-left: 5pt;text-indent: 0pt;line-height: 110%;text-align: left;">Zsh manual<span class="p">: Supplied with the shell: should be installed in Unix manual page and info formats. Texinfo generates PS or PDF; available as separate doc bundle from same place as the shell.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s26" style="padding-left: 5pt;text-indent: 0pt;line-height: 110%;text-align: left;">http://zsh.sourceforge.net<span class="h1">/</span><span class="p">:  Site with much information about zsh, including HTML manual and a more user­ friendly guide to the shell, as well as the FAQ.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s26" style="padding-left: 5pt;text-indent: 0pt;line-height: 110%;text-align: left;"><a href="http://www.zshwiki.org/" style=" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt;" target="_blank">Zsh wiki: </a>http://www.zshwiki.org/<span class="p">: Extensible zsh web pages written by users.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1" style="padding-left: 5pt;text-indent: 0pt;line-height: 110%;text-align: left;">From Bash to Z Shell: Conquering the Command Line<span class="p">, by Oliver Kiddle, Jerry Peek and Peter Stephenson, Apress, ISBN 1 59059 376 6. Introduction to interactive use of Unix shells in</span></p><p style="padding-top: 5pt;padding-left: 4pt;text-indent: 0pt;line-height: 110%;text-align: left;">general in part 1, concentrating on bash and zsh in parts 2 and 3. The contents of the book are as follows; where noted with page references to this card they expand on the brief hints here.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 4pt;text-indent: 0pt;text-align: left;">Part 1 (Introducing the Shell) contains the following chapters:</p><ol id="l2"><li style="padding-left: 39pt;text-indent: -35pt;text-align: left;"><p style="display: inline;">Introduction to Shells</p></li><li style="padding-top: 1pt;padding-left: 39pt;text-indent: -35pt;text-align: left;"><p style="display: inline;">Using Shell Features Together</p></li><li style="padding-left: 39pt;text-indent: -35pt;line-height: 110%;text-align: left;"><p style="display: inline;">More Shell Features (c.f. page 2)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 4pt;text-indent: 0pt;text-align: left;">Part 2 (Using bash and zsh) contains the following chapters:</p></li><li style="padding-left: 39pt;text-indent: -35pt;line-height: 110%;text-align: left;"><p style="display: inline;">Entering and Editing the Command Line (c.f. pages 6 and 13)</p></li><li style="padding-left: 39pt;text-indent: -35pt;line-height: 110%;text-align: left;"><p style="display: inline;">Starting the Shell (c.f. pages 4 and 5)</p></li><li style="padding-left: 39pt;text-indent: -35pt;line-height: 110%;text-align: left;"><p style="display: inline;">More About Shell History (c.f. pages 6 and 8)</p></li><li style="padding-left: 39pt;text-indent: -35pt;line-height: 110%;text-align: left;"><p style="display: inline;">Prompts (c.f. page 6)</p></li><li style="padding-left: 39pt;text-indent: -35pt;line-height: 110%;text-align: left;"><p style="display: inline;">Files and Directories (c.f. page 9)</p></li><li style="padding-left: 39pt;text-indent: -35pt;line-height: 110%;text-align: left;"><p style="display: inline;">Pattern Matching (c.f. page 3)</p></li><li style="padding-left: 39pt;text-indent: -35pt;line-height: 10pt;text-align: left;"><p style="display: inline;">Completion</p><p style="padding-left: 39pt;text-indent: 0pt;text-align: left;">(c.f pages 10 through 12)</p></li><li style="padding-left: 39pt;text-indent: -35pt;line-height: 110%;text-align: left;"><p style="display: inline;">Jobs and Processes (c.f. page 6)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 4pt;text-indent: 0pt;text-align: left;">Part3 (Extending the Shell) contains the following chapters:</p></li><li style="padding-left: 39pt;text-indent: -35pt;text-align: left;"><p style="display: inline;">Variables</p><p style="padding-top: 1pt;padding-left: 39pt;text-indent: 0pt;text-align: left;">(c.f. pages 7 and 8)</p></li><li style="padding-left: 39pt;text-indent: -35pt;line-height: 110%;text-align: left;"><p style="display: inline;">Scripting and Functions (c.f. page 2)</p></li><li style="padding-left: 39pt;text-indent: -35pt;line-height: 110%;text-align: left;"><p style="display: inline;">Writing Editor Commands (c.f page 13)</p></li><li style="padding-left: 39pt;text-indent: -35pt;line-height: 110%;text-align: left;"><p style="display: inline;">Writing Completion Functions (c.f. pages 10 through 12)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 4pt;text-indent: 0pt;text-align: left;">The three appendices contain short descriptions of standard Unix</p><p style="padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">programs, links to external resources, and a glossary.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1" style="padding-left: 333pt;text-indent: 0pt;text-align: center;"><a name="a3">Zsh manual pages</a></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">To access documentation from within the shell, use the <span class="h1">man</span></p><p style="padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">command with one of the following arguments:</p><h1 style="text-indent: 0pt;text-align: left;">zsh zshmisc zshexpn zshparam zshoptions</h1><h1 style="text-indent: 0pt;text-align: left;">zshbuiltins zshzle zshcompwid zshcompsys zshcompctl zshmodules zshtcpsys zshzftpsys zshcontrib zshall</h1><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">Introduction, startup and shutdown Syntax, redirection, functions, jobs, tests Expansion and substitution</p><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">Parameters (variables) Options to the shell Shell builtin commands</p><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">The line editor, excluding completion The low­level completion facitilities</p><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">The new completion system (more readable) The old completion system (deprecated) Modules loadable with <span class="h1">zmodload </span>Functions for using raw TCP via builtins Functions for using FTP via builtins Contributed functions for zle etc.</p><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">Everything in one large manual page</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1" style="padding-left: 333pt;text-indent: 0pt;text-align: center;"><a name="a4">Mailing lists</a></p><p class="s26" style="padding-left: 5pt;text-indent: 0pt;line-height: 110%;text-align: left;">zsh-users@zsh.org<span class="p">: users&#39; mailing list for general questions and tips; to join, mail</span></p><p class="s26" style="padding-left: 5pt;text-indent: 0pt;line-height: 10pt;text-align: left;"><a name="a5">zsh-users-subscribe@zsh.org</a><span class="p">.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s26" style="padding-left: 5pt;text-indent: 0pt;line-height: 110%;text-align: left;">zsh-workers@zsh.org<span class="p">: mailing list for bug reports, patches and developers&#39; discussions; to join, mail</span></p><p class="s26" style="padding-left: 5pt;text-indent: 0pt;line-height: 110%;text-align: left;">zsh-workers-subscribe@zsh.org<span class="p">. New developers with some Unix/Linux experience are welcome.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1" style="padding-top: 6pt;padding-left: 333pt;text-indent: 0pt;text-align: center;"><a name="a6">Grammar</a></p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 109%;text-align: justify;"><span class="s3">List </span>is any sequence of <span class="s3">sublists </span>(including just one) separated by <span class="h1">; </span>or <span class="h1">newline</span>. <b>; </b>and <span class="h1">newline </span>are always interchangeable except in <b>;;</b>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 110%;text-align: left;"><span class="s3">Sublist </span>is any sequence of <i>pipelines </i>(including just one) connected by <span class="h1">&amp;&amp; </span>or <span class="h1">||</span>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><span class="s3">Pipeline </span>is any sequence of simple commands connected by <span class="h1">|</span>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s3" style="padding-left: 5pt;text-indent: 0pt;line-height: 109%;text-align: left;">Command <span class="p">is either a simple command (a command </span>word) <span class="p">followed optionally by </span>word <span class="s2">… </span><span class="p">or one of the special commands below.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s3" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Word <span class="p">is any text that produces a single word when expanded;</span></p><p class="s3" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">word <span class="s2">… </span><span class="p">is any number of these separated by whitespace.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s3" style="padding-left: 5pt;text-indent: 0pt;line-height: 110%;text-align: left;">Name <span class="p">is a shell identifier: an alphabetic character or _ followed by any sequence of alphanumeric characters or _.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 8pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Non­portable alternative forms.</p><p style="padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><span class="s4" style=" background-color: #E5E5E5;">}                                                                                                         </span></p><h1 style="text-indent: 0pt;text-align: left;">if <i>listi1</i>; then<span class="p">[</span>;<span class="p">] </span><i>listt1</i><span class="s5">;</span></h1><h1 style="text-indent: 0pt;text-align: left;"><span class="p">[ </span>elif <i>listi2</i><span class="s5">; </span>then <i>listt2</i><span class="s5">; </span><span class="p">]</span></h1><p style="text-indent: 0pt;text-align: left;">…</p><p style="text-indent: 0pt;text-align: left;">[ <span class="h1">else </span><span class="s3">listt3</span><span class="s5">; </span>] fi</p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Non­portable alternative.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><h1 style="text-indent: 0pt;line-height: 106%;text-align: left;">select <i>name </i><span class="p">[ </span>in <i>word </i><span class="s2">…</span><span class="p">]</span>; do <i>list</i>;</h1><p style="text-indent: 0pt;line-height: 10pt;text-align: left;">done</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;"/><h1 style="text-indent: 0pt;line-height: 8pt;text-align: left;">for <i>name </i><span class="p">[ </span>in <i>word </i><span class="s2">… </span><span class="p">]</span></h1><h1 style="text-indent: 0pt;text-align: left;">do <i>list</i>; done</h1><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;line-height: 10pt;text-align: left;">If <span class="s3">list</span>i1 is true, execute <span class="s3">listt1</span>; else if <span class="s3">listi2 </span>is true</p><p style="text-indent: 0pt;text-align: left;">execute <span class="s3">listt2</span>; else execute <span class="s3">listt3</span>.</p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 5pt;text-indent: 0pt;line-height: 110%;text-align: left;">Print menu of <span class="s3">words</span>, read a number, set <span class="s3">name </span>to selected word, execute <span class="s3">list </span>until end of input. Portable but rare.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;line-height: 10pt;text-align: left;"><span class="h1">(</span><span class="s3">list</span>[<span class="s5">;</span>]<span class="h1">)</span></p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;"/><p style="text-indent: 0pt;line-height: 109%;text-align: left;">Execute <span class="s3">list </span>with variable <span class="s3">name </span>set to each of <span class="s3">word </span><i>… </i>in turn If <span class="h1">in </span><b>… </b>is omitted the positional parameters are used.</p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 5pt;text-indent: 0pt;line-height: 110%;text-align: left;">Execute <span class="s3">list </span>in a subshell (a new process where nothing that happens affects the current shell).</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;line-height: 10pt;text-align: left;"><span class="h1">{</span><span class="s3">list</span>[<span class="s5">;</span>]<span class="h1">}</span></p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;"/><h1 style="text-indent: 0pt;line-height: 106%;text-align: left;">for <i>name </i>in <i>word </i><span class="s2">…</span>; { <i>list </i>} foreach <i>name </i>( <i>word </i><span class="s2">… </span>) <span class="p">[</span>;<span class="p">] </span><i>list</i>;</h1><p style="text-indent: 0pt;line-height: 10pt;text-align: left;">end</p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 5pt;text-indent: 0pt;line-height: 110%;text-align: left;">Execute <span class="s3">list </span>(no new process: simply separates list from what’s around and can take redirections).</p><p style="text-indent: 0pt;text-align: left;"><br/></p><h1 style="text-indent: 0pt;text-align: left;">function <i>nameword </i>{<span class="p">[</span>;<span class="p">] </span><i>list</i><span class="p">[</span>;<span class="p">] </span>}</h1><h1 style="text-indent: 0pt;line-height: 10pt;text-align: left;"><i>nameword </i>() {[;] <i>list</i><span class="p">[</span>;<span class="p">] </span>}</h1><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;"/><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Define function named <span class="s3">nameword</span>; executes list when run;</p><p style="padding-top: 7pt;padding-left: 5pt;text-indent: 0pt;line-height: 4pt;text-align: left;">[ … ] indicates optional; dots on their own line mean any</p><p style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 33%;text-align: left;"><span class="s6" style=" background-color: #E5E5E5;">while </span><span class="s7" style=" background-color: #E5E5E5;">listw</span><span class="s8" style=" background-color: #E5E5E5;">; do </span><span class="s7" style=" background-color: #E5E5E5;">listd</span><span class="s8" style=" background-color: #E5E5E5;">; done</span><span class="s9"> </span><span class="s10">running </span><span class="s11">nameword word1 </span><span class="s10">… makes </span><span class="s11">word1 </span><span class="s10">… available as </span><span class="s9">$1</span></p><p style="padding-top: 7pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">number of repetitions of the line just above.</p><p style="padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">While <span class="s3">listw </span>is true execute <span class="s3">listd</span>.</p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 109%;text-align: left;">etc. in function body. <span class="s3">list </span>must end with [;] or newline for portability. <span class="s3">nameword </span>can be repeated to define multiple</p><p style="padding-top: 6pt;padding-left: 8pt;text-indent: 0pt;line-height: 7pt;text-align: left;">Bold text is to be typed literally.</p><p style="padding-left: 8pt;text-indent: 0pt;text-align: left;"><span class="s12" style=" background-color: #E5E5E5;">until </span><span class="s7" style=" background-color: #E5E5E5;">listu</span><span class="s8" style=" background-color: #E5E5E5;">; do </span><span class="s7" style=" background-color: #E5E5E5;">listd</span><span class="s8" style=" background-color: #E5E5E5;">; done</span><span class="s9"> </span><span class="s10">functions (rare, non­portable).</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 110%;text-align: left;">Status “true” or “false” is determined by: for commands, the return status; for pipelines the last command; for sublists the last pipeline; for lists the last sublist that was executed.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><span class="s7" style=" background-color: #E5E5E5;">sublist1 </span><span class="s8" style=" background-color: #E5E5E5;">&amp;&amp; </span><span class="s7" style=" background-color: #E5E5E5;">sublist2 </span><span class="s4" style=" background-color: #E5E5E5;">[ </span><span class="s8" style=" background-color: #E5E5E5;">&amp;&amp; </span><span class="s7" style=" background-color: #E5E5E5;">sublist3 </span><span class="s4" style=" background-color: #E5E5E5;">… ]                </span></p><p style="padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">Execute <span class="s3">sublists </span>until one is false<i>.</i></p><p style="text-indent: 0pt;text-align: left;">Non­portable: while <span class="s3">listu </span>is not true execute <span class="s3">listd</span>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><h1 style="text-indent: 0pt;text-align: left;">repeat <i>numexp</i>; do <i>list</i>; done repeat <i>numexp sublist</i></h1><p style="text-indent: 0pt;text-align: left;"/><p style="padding-top: 7pt;text-indent: 0pt;text-align: left;">Non­portable: repeat <span class="s3">list </span>or <span class="s3">sublist numexp </span>times.</p><p style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><span class="s8" style=" background-color: #E5E5E5;">time </span><span class="s4" style=" background-color: #E5E5E5;">[ </span><span class="s7" style=" background-color: #E5E5E5;">pipeline </span><span class="s4" style=" background-color: #E5E5E5;">]                                                                  </span></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Report time for <span class="s3">pipeline </span>if given else totals for current shell.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="a7"><span class="s8" style=" background-color: #E5E5E5;">[[ </span></a><span class="s7" style=" background-color: #E5E5E5;">condition </span><span class="s8" style=" background-color: #E5E5E5;">]]                                                                </span></p><h1 style="text-indent: 0pt;text-align: left;">case <i>word </i>in</h1><p style="text-indent: 0pt;text-align: left;">[<span class="h1">(</span>] <span class="s3">pattern1</span>[<span class="h1">|</span><span class="s3">pattern2</span>..<span class="s3">.</span>]<span class="h1">) </span>[<span class="h1">;</span>] <span class="s3">list </span><span class="h1">;;</span></p><p style="text-indent: 0pt;text-align: left;">… esac</p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Evaluate <span class="s3">condition </span>(see below), gives status true or false.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s3" style="text-indent: 0pt;text-align: left;">sublist1 <b>|| </b>sublist2 <span class="p">[ </span><b>|| </b>sublist2 <span class="p">… ]</span></p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Execute <span class="s3">sublists </span>until one is true<i>. </i>Note strings of</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 9pt;text-align: left;">Try matching word against every pattern in turn until success.</p><h1 style="padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;">&amp;&amp; <span class="p">sublists can contain </span>|| <span class="p">sublists and vice versa; they are parsed </span><span class="s13">Execute the corresponding list. </span>;&amp; <span class="p">instead of </span>&amp;&amp; <span class="p">means fall</span></h1><p style="padding-left: 5pt;text-indent: 0pt;line-height: 10pt;text-align: left;">left to right.</p><p style="padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">through to next <span class="s3">list</span>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;line-height: 9pt;text-align: left;">command1 <span class="h1">| </span>command2 [ <span class="h1">| </span>command3 … ]</p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 9pt;text-align: left;"/><h1 style="text-indent: 0pt;text-align: left;">case <i>word </i>{</h1><p style="text-indent: 0pt;text-align: left;">[<span class="h1">(</span>] <span class="s3">pattern1</span>[<span class="h1">|</span><span class="s3">pattern2</span>..<span class="s3">.</span>]<span class="h1">) </span>[<span class="h1">;</span>] <span class="s3">list </span><span class="h1">;;</span></p><p style="text-indent: 0pt;line-height: 10pt;text-align: left;">…</p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Execute <span class="s3">command1</span>, sending its output to the input of</p><p class="s3" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">command2<span class="p">, and so on (a </span>pipeline<span class="p">).</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Basic patterns:</p><p class="s1" style="padding-top: 6pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="a8">Pattern matching (globbing)</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><h1 style="text-indent: 0pt;text-align: left;">*</h1><h1 style="text-indent: 0pt;text-align: left;">?</h1><h1 style="text-indent: 0pt;line-height: 106%;text-align: left;">[<i>class</i>] [^<i>class</i>]</h1><h1 style="text-indent: 0pt;text-align: left;">&lt;<i>num1</i>-<i>num2</i>&gt;</h1><p style="text-indent: 0pt;text-align: left;"><br/></p><h1 style="text-indent: 0pt;text-align: left;">**/ (<i>pat1</i>)</h1><h1 style="text-indent: 0pt;line-height: 10pt;text-align: left;">(<i>pat1</i>|<i>pat2</i>)</h1><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 18pt;text-indent: 0pt;text-align: left;">Any string Any character</p><p style="padding-left: 18pt;text-indent: 0pt;line-height: 107%;text-align: left;">Any single character from <span class="s3">class </span>Any single character not from class Any number between <span class="s3">num1 </span>and <span class="s3">num2</span></p><h1 style="padding-left: 18pt;text-indent: 0pt;text-align: left;">&lt;-<i>num2</i>&gt; <span class="p">from 0; </span>&lt;<i>num1</i>-&gt; <span class="p">to infinity. Directories to any level</span></h1><p style="padding-left: 18pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Group patterns</p><p style="padding-left: 18pt;text-indent: 0pt;text-align: left;"><span class="s3">pat1 </span>or <span class="s3">pat2  </span>(any number of <span class="h1">|</span>’s)</p><h1 style="padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">KSH_GLOB <span class="p">operators (patterns may contain </span>| <span class="p">for alternatives):</span></h1><h1 style="text-indent: 0pt;text-align: left;">@(<i>pat</i>)</h1><h1 style="text-indent: 0pt;text-align: left;">*(<i>pat</i>)</h1><h1 style="text-indent: 0pt;text-align: left;">+(<i>pat</i>)</h1><h1 style="text-indent: 0pt;text-align: left;">?(<i>pat</i>)</h1><h1 style="text-indent: 0pt;text-align: left;">!(<i>pat</i>)</h1><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">Group patterns</p><p style="padding-left: 84pt;text-indent: 0pt;line-height: 106%;text-align: left;">Zero or more occurrences of <span class="s3">pat </span>One or more occurrences of <span class="s3">pat </span>Zero or one occurrences of <span class="s3">pat </span>Anything but the pattern <span class="s3">pat</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Globbing flags with <span class="h1">EXTENDED_GLOB</span>:</p><h1 style="text-indent: 0pt;text-align: left;">(#i)</h1><h1 style="text-indent: 0pt;text-align: left;">(#l)</h1><h1 style="text-indent: 0pt;text-align: left;">(#I)</h1><h1 style="text-indent: 0pt;text-align: left;">(#b)</h1><h1 style="text-indent: 0pt;text-align: left;">(#B)</h1><h1 style="text-indent: 0pt;text-align: left;">(#m)</h1><h1 style="text-indent: 0pt;text-align: left;">(#M)</h1><h1 style="text-indent: 0pt;line-height: 106%;text-align: left;">(#a<i>num</i>) (#s)</h1><h1 style="text-indent: 0pt;line-height: 10pt;text-align: left;">(#e)</h1><h1 style="text-indent: 0pt;text-align: left;">(#q<i>expr</i>)</h1><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">Match case insensitively Lower case matches upper case Match case sensitively</p><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">Parentheses set <span class="h1">match</span>, <span class="h1">mbegin</span>, <span class="h1">mend</span></p><p style="padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">Setgid Sticky bit</p><h1 style="text-indent: 0pt;text-align: left;">S</h1><h1 style="text-indent: 0pt;line-height: 106%;text-align: left;">t f<i>spec </i>e<i>string</i></h1><h1 style="text-indent: 0pt;line-height: 107%;text-align: left;">+<i>cmd </i>d<i>dev</i></h1><h1 style="text-indent: 0pt;line-height: 107%;text-align: left;">l[-+]<i>num </i>U</h1><h1 style="text-indent: 0pt;line-height: 10pt;text-align: left;">G</h1><h1 style="text-indent: 0pt;line-height: 107%;text-align: left;">u<i>uid </i>g<i>gid</i></h1><h1 style="text-indent: 0pt;text-align: left;">a<span class="p">[</span>Mwhms<span class="p">][</span>-+<span class="p">]</span>n</h1><h1 style="text-indent: 0pt;text-align: left;">m<span class="p">[</span>Mwhms<span class="p">][</span>-+<span class="p">]</span>n</h1><h1 style="text-indent: 0pt;text-align: left;">c<span class="p">[</span>Mwhms<span class="p">][</span>-+<span class="p">]</span>n</h1><h1 style="text-indent: 0pt;text-align: left;">L<span class="p">[</span>kmp<span class="p">][</span>-+<span class="p">]</span>n</h1><h1 style="text-indent: 0pt;text-align: left;">^</h1><h1 style="text-indent: 0pt;text-align: justify;">- M T N D</h1><h1 style="text-indent: 0pt;text-align: left;">n o<span class="p">[</span>nLlamcd<span class="p">] </span>O<span class="p">[</span>nLlamcd<span class="p">] </span>[<i>num</i>] [<i>num1</i>,<i>num2</i>]</h1><h1 style="text-indent: 0pt;text-align: left;">:<i>X</i></h1><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 5pt;text-indent: 0pt;line-height: 106%;text-align: left;">Has <span class="h1">chmod</span>­style permissions <span class="s3">spec </span>Evaluation <span class="s3">string </span>returns true status Same but <span class="s3">cmd </span>must be alphanumeric or <span class="s3">_ </span>Device number <span class="s3">dev </span>(major*256 + minor) Link count is (less than, greater than) <span class="s3">num </span>Owned by current effective UID</p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Owned by current effective GID</p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 106%;text-align: justify;">Owned by given <span class="s3">uid </span>(may be <span class="h1">&lt;</span><span class="s3">name</span><span class="h1">&gt;</span>) Owned by given <span class="s3">gid </span>(may be <span class="h1">&lt;</span><span class="s3">name</span><span class="h1">&gt;</span>) Access time in given units (see below)</p><p class="s3" style="text-indent: 0pt;text-align: left;">a<b>-</b>b</p><h1 style="text-indent: 0pt;text-align: left;">[:alnum:]</h1><h1 style="text-indent: 0pt;text-align: left;">[:alpha:]</h1><h1 style="text-indent: 0pt;text-align: left;">[:ascii:]</h1><h1 style="text-indent: 0pt;text-align: left;">[:blank:]</h1><h1 style="text-indent: 0pt;text-align: left;">[:cntrl:]</h1><h1 style="text-indent: 0pt;text-align: left;">[:digit:]</h1><h1 style="text-indent: 0pt;text-align: left;">[:graph:]</h1><h1 style="text-indent: 0pt;text-align: left;">[:lower:]</h1><h1 style="text-indent: 0pt;text-align: left;">[:print:]</h1><h1 style="text-indent: 0pt;text-align: left;">[:punct:]</h1><h1 style="text-indent: 0pt;text-align: left;">[:space:]</h1><h1 style="text-indent: 0pt;text-align: left;">[:upper:]</h1><h1 style="text-indent: 0pt;text-align: left;">[:xdigit:]</h1><p style="text-indent: 0pt;text-align: left;"/><p style="padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;line-height: 110%;text-align: left;">Character classes may contain any character or the following special patterns in any mix; literal – must be first; literal ^ must not be first:</p><p style="padding-left: 84pt;text-indent: 0pt;line-height: 10pt;text-align: left;">A character in the range <span class="s3">a </span>to <span class="s3">b</span></p><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">An alphanumeric character An alphabetic character</p><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">A character in the ASCII character set A space or tab</p><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">A control character A decimal digit</p><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">A printable character other than whitespace A lower case letter</p><p style="padding-left: 84pt;text-indent: 0pt;line-height: 10pt;text-align: left;">A printable character</p><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">A punctuation character Any whitespace character An upper case letter</p><p style="padding-left: 84pt;text-indent: 0pt;line-height: 10pt;text-align: left;">A hexadecimal digit</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Extended patterns (option <span class="h1">EXTENDED_GLOB </span>must be set):</p><h1 style="text-indent: 0pt;line-height: 107%;text-align: left;">^<i>pat pat1</i>^<i>pat2 pat1</i>~<i>pat2 X</i>#</h1><p class="s3" style="text-indent: 0pt;line-height: 10pt;text-align: left;">X<b>##</b></p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">Anything that doesn’t match <span class="s3">pat</span></p><p style="padding-left: 84pt;text-indent: 0pt;line-height: 106%;text-align: left;">Match <span class="s3">pat1 </span>then anything other than <span class="s3">pat2 </span>Anything matching <span class="s3">pat1 </span>but not <span class="s3">pat2 </span>Zero or more occurrences of element <span class="s3">X </span>One or more occurrences of element <span class="s3">X</span></p><p style="padding-left: 80pt;text-indent: 0pt;line-height: 107%;text-align: left;">Parentheses no longer set arrays Match in <span class="h1">MATCH</span>, <span class="h1">MBEGIN</span>, <span class="h1">MEND</span></p><p style="padding-left: 80pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Don’t use <span class="h1">MATCH </span>etc.</p><p style="padding-left: 80pt;text-indent: 0pt;text-align: left;">Match with <span class="s3">num </span>approximations Match only at start of test string Match only at end of test string</p><p class="s3" style="padding-left: 80pt;text-indent: 0pt;text-align: left;">expr <span class="p">is a a set of glob qualifiers (below)</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><h1 style="text-indent: 0pt;text-align: left;">/ F</h1><h1 style="text-indent: 0pt;text-align: left;">.</h1><h1 style="text-indent: 0pt;text-align: left;">@</h1><h1 style="text-indent: 0pt;text-align: left;">=</h1><h1 style="text-indent: 0pt;text-align: left;">p</h1><h1 style="text-indent: 0pt;text-align: left;">*</h1><h1 style="text-indent: 0pt;text-align: left;">%</h1><h1 style="text-indent: 0pt;text-align: left;">%b</h1><h1 style="text-indent: 0pt;text-align: left;">%c r w x A I E R W X</h1><h1 style="text-indent: 0pt;line-height: 10pt;text-align: left;">s</h1><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 80pt;text-indent: -78pt;text-align: left;">Glob qualifiers (in parentheses after file name pattern): Directory</p><p style="padding-left: 80pt;text-indent: 0pt;text-align: left;">Non­empty directory; for empty use <span class="h1">(/^F)</span></p><p style="padding-left: 80pt;text-indent: 0pt;text-align: left;">Plain file Symbolic link Socket</p><p style="padding-left: 80pt;text-indent: 0pt;text-align: left;">Name pipe (FIFO) Executable plain file Special file</p><p style="padding-left: 80pt;text-indent: 0pt;text-align: left;">Block special file Character special file</p><p style="padding-left: 80pt;text-indent: 0pt;text-align: left;">Readable by owner (N.B. not current user) Writeable by owner</p><p style="padding-left: 80pt;text-indent: 0pt;text-align: left;">Executable by owner</p><p style="padding-left: 80pt;text-indent: 0pt;text-align: left;">Readable by members of file’s group Writeable by members of file’s group Executable by members of file’s group World readable</p><p style="padding-left: 80pt;text-indent: 0pt;text-align: left;">World writeable World executable Setuid</p><p style="padding-left: 82pt;text-indent: 0pt;text-align: left;">Modification time in given units Inode change time in given units Size in given units (see below) Negate following qualifiers</p><p style="padding-left: 82pt;text-indent: 0pt;text-align: left;">Toggle following links (first one turns on) Mark directories</p><p style="padding-left: 82pt;text-indent: 0pt;text-align: left;">Mark directories, links, special files</p><p style="padding-left: 82pt;text-indent: 0pt;text-align: left;">Whole pattern expands to empty if no match Leading dots may be matched</p><p style="padding-left: 82pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Sort numbers numerically</p><p style="padding-left: 82pt;text-indent: 0pt;text-align: left;">Order by given code (as below; may repeat) Order by reverse of given code</p><p style="padding-left: 82pt;text-indent: 0pt;text-align: left;">Select <span class="s3">num</span>th file in current order</p><p style="padding-left: 82pt;text-indent: 0pt;line-height: 107%;text-align: left;">Select <span class="s3">num1</span>th to <span class="s3">num2</span>th file (as arrays) History modifier <span class="s3">X</span>; may have more</p><p style="padding-left: 3pt;text-indent: 0pt;line-height: 110%;text-align: justify;">Time units are Month, week, hour, minute, second; default is day. Size units are kilobytes, megabytes or 512­byte blocks (<b>p</b>); default is bytes; upper case means the same as lower case.</p><p style="padding-left: 3pt;text-indent: 0pt;line-height: 110%;text-align: left;">Order codes are name (default), size, link count, access time, modification time, inode change time, directory depth.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1" style="padding-top: 6pt;padding-left: 111pt;text-indent: 0pt;text-align: left;"><a name="a9">Options</a></p><p style="text-indent: 0pt;text-align: left;">*<span class="h1">ALIASES ALL_EXPORT</span></p><p style="text-indent: 0pt;text-align: left;">*<span class="h1">ALWAYS_LAST_PROMPT ALWAYS_TO_END</span></p><p style="text-indent: 0pt;line-height: 106%;text-align: left;">*<span class="h1">APPEND_HISTORY AUTO_CD AUTO_CONTINUE</span></p><p style="text-indent: 0pt;text-align: left;">*<span class="h1">AUTO_LIST</span></p><p style="text-indent: 0pt;text-align: left;">*<span class="h1">AUTO_MENU AUTO_NAME_DIRS</span></p><p style="text-indent: 0pt;line-height: 10pt;text-align: left;">*<span class="h1">AUTO_PARAM_KEYS</span></p><p style="text-indent: 0pt;line-height: 107%;text-align: left;">*<span class="h1">AUTO_PARAM_SLASH AUTO_PUSHD</span></p><p style="text-indent: 0pt;line-height: 107%;text-align: left;">*<span class="h1">AUTO_REMOVE_SLASH AUTO_RESUME</span></p><p style="text-indent: 0pt;text-align: left;">*<span class="h1">BAD_PATTERN</span></p><p style="text-indent: 0pt;text-align: left;">*<span class="h1">BANG_HIST</span></p><p style="text-indent: 0pt;text-align: left;">*<span class="h1">BARE_GLOB_QUAL BASH_AUTO_LIST</span></p><p style="text-indent: 0pt;line-height: 10pt;text-align: left;">*<span class="h1">BEEP</span></p><p style="text-indent: 0pt;line-height: 106%;text-align: left;">*<span class="h1">BG_NICE BRACE_CCL BSD_ECHO</span></p><p style="text-indent: 0pt;line-height: 107%;text-align: left;">*<span class="h1">CASE_GLOB C_BASES CDABLE_VARS CHASE_DOTS CHASE_LINKS</span></p><p style="text-indent: 0pt;line-height: 10pt;text-align: left;">*<span class="h1">CHECK_JOBS</span></p><p style="text-indent: 0pt;text-align: left;">*<span class="h1">CLOBBER COMPLETE_ALIASES COMPLETE_IN_WORD CORRECT CORRECT_ALL CSH_JUNKIE_HISTORY CSH_JUNKIE_LOOPS CSH_JUNKIE_QUOTES CSH_NULLCMD</span></p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 5pt;text-indent: 0pt;line-height: 110%;text-align: left;">Set options with <span class="h1">setopt</span>, unset with <span class="h1">unsetopt</span>. Asterisk indicates on by default for native zsh.</p><p style="padding-left: 112pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Expand aliases</p><p style="padding-left: 112pt;text-indent: 0pt;text-align: left;">Export all variables to environment Completion lists after prompt</p><p style="padding-left: 112pt;text-indent: 0pt;line-height: 106%;text-align: left;">On completion go to end of word History appends to existing file Directory as command does <span class="h1">cd </span>Jobs are continued when <span class="h1">disown</span>ed List ambiguous completions</p><p style="padding-left: 112pt;text-indent: 0pt;text-align: left;">Menu complete after two tabs Variables always can be %~ abbrevs Magic completion for parameters</p><p style="padding-left: 112pt;text-indent: 0pt;line-height: 107%;text-align: left;"><span class="h1">$</span><span class="s3">dirname </span>completes with <span class="h1">/ cd </span>uses directory stack too Trailing <span class="h1">/ </span>in completion removed <span class="s3">cmd </span>can resume job <span class="h1">%</span><span class="s3">cmd</span></p><p style="padding-left: 112pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Errors on pattern syntax; else literal</p><h1 style="padding-left: 112pt;text-indent: 0pt;text-align: left;">! <span class="p">style history allowed</span></h1><p style="padding-left: 112pt;text-indent: 0pt;text-align: left;">Glob qualifiers with bare parens List completions on second tab Beep on all errors</p><p style="padding-left: 112pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Background jobs at lower priority</p><h1 style="padding-left: 112pt;text-indent: 0pt;text-align: left;">X{ab} <span class="p">expands to </span>Xa Xb</h1><p style="padding-left: 112pt;text-indent: 0pt;text-align: left;">No echo escapes unles <span class="h1">-e </span>given Glob case sensitively</p><p style="padding-left: 112pt;text-indent: 0pt;text-align: left;">Output hexadecimal with <span class="h1">0x</span></p><h1 style="padding-left: 112pt;text-indent: 0pt;line-height: 107%;text-align: left;">cd <i>var </i><span class="p">works if </span>$<i>var </i><span class="p">is directory Resolve </span>.. <span class="p">in </span>cd</h1><h1 style="padding-left: 112pt;text-indent: 0pt;text-align: left;"><span class="p">Resolve symbolic links in </span>cd <span class="p"> Check jobs before exiting shell Allow redirections to overwrite Completion uses unexpanded aliases Completion works inside words Correct spelling of commands Correct spelling of all arguments Single </span>! <span class="p">for previous command </span><i>list</i>;  end <span class="p">for </span>do<i>...</i>done</h1><p style="padding-left: 112pt;text-indent: 0pt;text-align: left;">No newlines in quotes</p><p style="padding-left: 112pt;text-indent: 0pt;text-align: left;">Redirections with no commands fail</p><p style="padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;line-height: 106%;text-align: left;">One glob must succeed, failures go Dvorak keyboard for correction Same as <span class="h1">bindkey -e</span></p><h1 style="text-indent: 0pt;text-align: left;">CSH_NULL_GLOB DVORAK</h1><h1 style="text-indent: 0pt;text-align: left;">EMACS</h1><p style="text-indent: 0pt;line-height: 106%;text-align: left;">*<span class="h1">EQUALS ERR_EXIT ERR_RETURN</span></p><p style="text-indent: 0pt;line-height: 10pt;text-align: left;">*<span class="h1">EVAL_LINE_NO</span></p><p style="text-indent: 0pt;text-align: left;">*<span class="h1">EXEC EXTENDED_GLOB EXTENDED_HISTORY</span></p><p style="text-indent: 0pt;line-height: 10pt;text-align: left;">*<span class="h1">FLOW_CONTROL</span></p><p style="text-indent: 0pt;text-align: left;">*<span class="h1">FUNCTION_ARGZER0</span></p><p style="text-indent: 0pt;text-align: left;">*<span class="h1">GLOB</span></p><p style="text-indent: 0pt;text-align: left;">*<span class="h1">GLOBAL_EXPORT</span></p><p style="text-indent: 0pt;line-height: 106%;text-align: left;">*<span class="h1">GLOBAL_RCS GLOB_ASSIGN GLOB_COMPLETE GLOB_DOTS GLOB_SUBST</span></p><p style="text-indent: 0pt;line-height: 10pt;text-align: left;">*<span class="h1">HASH_CMDS</span></p><p style="text-indent: 0pt;text-align: left;">*<span class="h1">HASH_DIRS</span></p><p style="text-indent: 0pt;text-align: left;">*<span class="h1">HASH_LIST_ALL HIST_ALLOW_CLOBBER</span></p><p style="text-indent: 0pt;text-align: left;">*<span class="h1">HIST_BEEP HIST_EXPIRE_DUPS_ FIRST HIST_FIND_NO_DUPS HIST_IGNORE_ALL_ DUPS HIST_IGNORE_DUPS HIST_IGNORE_SPACE HIST_NO_FUNCTIONS HIST_NO_STORE HIST_REDUCE_BLANKS HIST_SAVE_NO_DUPS HIST_VERIFY</span></p><p style="text-indent: 0pt;line-height: 107%;text-align: left;">*<span class="h1">HUP IGNORE_BRACES IGNORE_EOF</span></p><h1 style="text-indent: 0pt;text-align: left;">INC_APPEND_HISTORY INTERACTIVE</h1><p style="text-indent: 0pt;text-align: left;"/><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><span class="p">Expand </span>=<i>cmd </i><span class="p">to </span>/<i>path</i>/<i>to</i>/<i>cmd </i><span class="p">Exit shell on non­zero status Return from function instead</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">$LINENO <span class="p">counts inside </span>eval <span class="p">code Execute commands</span></h1><p style="padding-left: 5pt;text-indent: 0pt;line-height: 106%;text-align: left;">See globbing section above Timestamps saved to history file Use <span class="h1">^S</span>/<span class="h1">^Q </span>style flow control</p><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">$0 <span class="p">in function is its name</span></h1><p style="padding-left: 5pt;text-indent: 0pt;line-height: 106%;text-align: left;">Use globbing as described above Exported variables not made local Execute <span class="h1">/etc/z* </span>files</p><p class="s3" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">var<b>=* </b><span class="p">expands, assigns array Patterns are active in completion Patterns may match leading dots Substituted characters may glob Store command location for speed Store for all commands in dir Store all on first completion</span></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">On clobber error, up arrow to retry Beep when going beyond history Duplicate history entries lost first</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">History search finds once only Remove all earlier duplicate lines</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Remove duplicate of previous line Don’t store lines starting with space Don’t store shell functions</p><h1 style="padding-left: 5pt;text-indent: 0pt;line-height: 106%;text-align: left;"><span class="p">Don’t store </span>history <span class="p">and </span>fc <span class="p">Trim multiple insgnificant blanks Remove duplicates when saving Show </span>! <span class="p">history line for editing Send </span>SIGHUP <span class="p">to proceses on exit Don’t use </span>{<i>a</i>,<i>b</i>} <span class="p">expansions Ignore ^D (</span>stty  eof <span class="p">char) Save history line by line</span></h1><p style="padding-left: 5pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Shell is interactive</p><h1 style="padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"># <span class="p">on interactive line for comment</span></h1><p style="text-indent: 0pt;text-align: left;"><br/></p><h1 style="text-indent: 0pt;text-align: left;">INTERACTIVE_ COMMENTS KSH_ARRAYS KSH_AUTOLOAD KSH_GLOB KSH_OPTION_PRINT KSH_TYPESET</h1><p style="text-indent: 0pt;text-align: left;">*<span class="h1">LIST_AMBIGUOUS</span></p><p style="text-indent: 0pt;text-align: left;">*<span class="h1">LIST_BEEP LIST_PACKED LIST_ROWS_FIRST</span></p><p style="text-indent: 0pt;text-align: left;">*<span class="h1">LIST_TYPES LOCAL_OPTIONS LOCAL_TRAPS LOGIN LONG_LIST_JOBS</span></p><h1 style="text-indent: 0pt;line-height: 106%;text-align: left;">MAGIC_EQUAL_SUBST MAIL_WARNING MARK_DIRS MENU_COMPLETE MONITOR</h1><p style="text-indent: 0pt;line-height: 10pt;text-align: left;">*<span class="h1">MULTIOS</span></p><p style="text-indent: 0pt;text-align: left;">*<span class="h1">NOMATCH</span></p><p style="text-indent: 0pt;text-align: left;">*<span class="h1">NOTIFY NULL_GLOB</span></p><h1 style="text-indent: 0pt;text-align: left;">NUMERIC_GLOB_SORT OCTAL_ZEROES OVERSTRIKE PATH_DIRS POSIX_BUILTINS PRINT_EIGHT_BIT PRINT_EXIT_VALUE PRIVILEGED PROMPT_BANG</h1><p style="text-indent: 0pt;text-align: left;">*<span class="h1">PROMPT_CR</span></p><p style="text-indent: 0pt;line-height: 107%;text-align: left;">*<span class="h1">PROMPT_PERCENT PROMPT_SUBST PUSHD_IGNORE_DUPS PUSHD_MINUS PUSHD_SILENT PUSHD_TO_HOME</span></p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Indexing etc. for arrays like ksh Function file includes function name See globbing above</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Show all options plus on or off</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">No word splitting in <span class="h1">typeset </span>etc. List completions when ambiguous Beep on ambiguous completion More compact completion lists List completions across</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">File types listed in completion Options reset on function return Traps reset on function return Shell is login shell</p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 107%;text-align: left;">More verbose listing of jobs Special expansion after all <span class="h1">=</span></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Warn if mail file timestamp changed Append <span class="h1">/ </span>to globbed directories Cycle through ambiguous matches Shell has job control enabled Multiple redirections are special Error if glob fails to match Asynchronous job control messages Failed globs are removed from line Numbers in globs sorted numerically Leading zeros in integers force octal Start line editor in overstrike mode <span class="s3">dir</span><span class="h1">/</span><span class="s3">cmd </span>can be found in <span class="h1">$PATH </span>Illogical command behaviour</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Print all 8­bit characters directly Return status printed unless zero Special behaviour on setuid/setgid Special treatment of <span class="h1">! </span>in prompt Prompt always at start of line</p><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">% <span class="p">escapes expanded in prompts</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">$ <span class="p">expansion etc. in prompts Don’t push dir multiply on stack</span></h1><p style="padding-left: 5pt;text-indent: 0pt;line-height: 107%;text-align: left;">Reverse sense of <span class="h1">– </span>and <span class="h1">+ </span>in <span class="h1">pushd </span>No non­err messages from <span class="h1">pushd pushd </span>with no argument goes to <span class="h1">~</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><h1 style="text-indent: 0pt;line-height: 112%;text-align: left;">RC_EXPAND_PARAM RC_QUOTES</h1><p style="text-indent: 0pt;line-height: 10pt;text-align: left;">*<span class="h1">RCS</span></p><h1 style="text-indent: 0pt;line-height: 106%;text-align: left;">REC_EXACT RESTRICTED RM_STAR_SILENT RM_STAR_WAIT SHARE_HISTORY SH_FILE_EXPANSION SH_GLOB SHIN_STDIN SH_NULL_CMD SH_OPTION_LETTERS</h1><p style="text-indent: 0pt;line-height: 106%;text-align: left;">*<span class="h1">SHORT_LOOPS SH_WORD_SPLIT SINGLE_COMMAND SINGLE_LINE_ZLE SUN_KEYBOARD_HACK TRANSIENT_RPROMPT TRAPS_ASYNC TYPESET_SILENT</span></p><p style="text-indent: 0pt;line-height: 106%;text-align: left;">*<span class="h1">UNSET VERBOSE VI XTRACE ZLE</span></p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-top: 5pt;padding-left: 112pt;text-indent: 0pt;line-height: 108%;text-align: left;"><span class="h1">X$</span><span class="s3">array </span>gives <b>X</b><i>elt1 </i><b>X</b><i>elt2 </i>etc. <span class="h1">&#39;&#39; </span>inside single quotes gives <span class="h1">&#39; </span>Run startup files</p><p style="padding-left: 112pt;text-indent: 0pt;line-height: 106%;text-align: left;">Exact completion matches are good Shell has restricted capabilities Don’t warn on <span class="h1">rm *</span></p><p style="padding-left: 112pt;text-indent: 0pt;text-align: left;">Wait before asking if <span class="h1">rm * </span>is OK Save and restore history per line</p><h1 style="padding-left: 112pt;text-indent: 0pt;line-height: 106%;text-align: left;">~ <span class="p">etc. expansion done early Disables non­extended zsh globs Shell input comes from stdin Commandless redirections like </span>sh <span class="p">Single letter options are like </span>sh for <i>words</i>; <i>list </i><span class="p">works</span></h1><p style="padding-left: 112pt;text-indent: 0pt;line-height: 106%;text-align: left;">Split non­array variables yuckily Execute one command then exit Line editing on single line (bad tty) Unmatched <span class="h1">` </span>at end of line ignored Right prompt goes away after edit Traps may run when <span class="h1">wait</span>ing Silent on <span class="h1">typeset </span><span class="s3">foo</span></p><p style="padding-left: 112pt;text-indent: 0pt;line-height: 106%;text-align: left;">Unset variables OK, treat as empty Output commands to be executed Same as <span class="h1">bindkey -v</span></p><p style="padding-left: 112pt;text-indent: 0pt;text-align: left;">Show trace of execution with <span class="h1">$PS4</span></p><p style="padding-left: 112pt;text-indent: 0pt;text-align: left;">Line editor used to input lines</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Option aliases (native zsh on right):</p><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="a10">BRACE_EXPAND NO_IGNORE_BRACES</a></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">DOT_GLOB GLOB_DOTS</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">HASH_ALL HASH_CMDS</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">HIST_APPEND APPEND_HISTORY</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">HIST_EXPAND BANG_HIST</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">LOG NO_HIST_NO_FUNCTIONS</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">MAIL_WARN MAIL_WARNING</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">ONE_CMD SINGLE_COMMAND</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">PHYSICAL CHASE_LINKS</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">PROMPT_VARS PROMPT_SUBST</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">STDIN SHIN_STDIN</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">TRACK_ALL HASH_CMDS</h1><p style="padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">Single letter options (used with <span class="h1">set </span>as well as <span class="h1">setopt</span>):</p><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="a11">-0 CORRECT</a></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-1 PRINT_EXIT_VALUE</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-2 NO_BAD_PATTERN</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-3 NO_NO_MATCH</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-4 GLOB_DOTS</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-5 NOTIFY</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-6 BG_NICE</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-7 IGNORE_EOF</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-8 MARK_DIRS</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-9 AUTO_LIST</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-B NO_BEEP</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-C NO_CLOBBER</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-D PUSHD_TO_HOME</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-E PUSHD_SILENT</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-F NO_GLOB</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-G NULL_GLOB</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-H RM_STAR_SILENT</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-I IGNORE_BRACES</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-J AUTO_CD</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-K NO_BANG_HIST</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-L SUN_KEYBOARD_HACK</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-M SINGLE_LINE_ZLE</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-N AUTO_PUSHD</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-O CORRECT_ALL</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-P RC_EXPAND_PARAM</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-Q PATH_DIRS</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-R LONG_LIST_JOBS</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-S REC_EXACT</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-T CDABLE_VARS</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-U MAIL_WARNING</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-V NO_PROMPT_CR</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-W AUTO_RESUME</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-X LIST_TYPES</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-Y MENU_COMPLETE</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-Z ZLE</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-a ALL_EXPORT</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-e ERR_EXIT</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-f NO_RCS</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-g HIST_IGNORE_SPACE</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-h HIST_IGNORE_DUPS</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-i INTERACTIVE</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-k INTERACTIVE_COMMENTS</h1><h1 style="padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">-l LOGIN</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-m MONITOR</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-n NO_EXEC</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-p PRIVILEGED</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-r RESTRICTED</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-s SHIN_STDIN</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-t SINGLE_COMMAND</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-u NO_UNSET</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-v VERBOSE</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-w CHASE_LINKS</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-x XTRACE</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-y SH_WORD_SPLIT</h1><p style="padding-left: 5pt;text-indent: 0pt;line-height: 108%;text-align: left;">Note also <span class="h1">-A </span>to set arrays, <span class="h1">-b </span>to end option processing, <span class="h1">-c </span>to pass a single command, <span class="h1">-m </span>to set pattern argument, <span class="h1">-o </span>to specify long name (may repeat), <b>­s </b>to sort positional parameters.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><h1 style="padding-top: 9pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">!{!} <span class="p">Same but protected, may have args in {}</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;line-height: 7pt;text-align: left;">! <span class="p">Line just referred to, default !!</span></h1><p style="padding-top: 1pt;padding-left: 5pt;text-indent: 243pt;line-height: 15pt;text-align: left;">elements; <span class="h1">~ </span>same with <span class="h1">~ </span>subst; <span class="h1">D </span>month is <span class="s3">n</span>; <span class="h1">d </span>day of month is <span class="s3">n</span>; Prompt expansion (with <span class="h1">PROMPT_PERCENT</span>, on by default); may <span class="s14">g </span>effective gid is <span class="s3">n</span>; <span class="h1">j </span>at least <span class="s3">n </span>jobs; <span class="h1">L $SHLVL </span>at least <span class="s3">n</span>; <span class="h1">l </span>at</p><p style="padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><span class="h1">!13 </span>Line numbered 13 (<b>history </b>shows nos.)</p><h1 style="padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">!-2 <span class="p">Command two before current</span></h1><p class="s3" style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><b>!</b>cmd <span class="p">Last command beginning </span>cmd</p><p class="s3" style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><b>!?</b>str <span class="p">Last command containing </span>str</p><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">!# <span class="p">Current command line so far</span></h1><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Word selectors:</p><h1 style="text-indent: 0pt;text-align: left;">!!:0</h1><h1 style="text-indent: 0pt;text-align: left;">!!:1</h1><h1 style="text-indent: 0pt;text-align: left;">!!:^</h1><h1 style="text-indent: 0pt;text-align: left;">!!:$</h1><h1 style="text-indent: 0pt;text-align: left;">!:%</h1><h1 style="text-indent: 0pt;text-align: left;">!!:2-4</h1><h1 style="text-indent: 0pt;text-align: left;">!!:-4</h1><h1 style="text-indent: 0pt;text-align: left;">!!:*</h1><h1 style="text-indent: 0pt;text-align: left;">!!:2*</h1><h1 style="text-indent: 0pt;text-align: left;">!!:2-</h1><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 84pt;text-indent: 0pt;text-align: justify;">Extract argument 0 (command word) Argument numbered 1 (first cmd arg) Also argument 1</p><p style="padding-left: 84pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Last command argument</p><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">Word found by <span class="h1">!?str </span>(needs correct line) Word 2 to 4 inclusive</p><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">Words 0 to 4 inclusive Words 1 to $ inclusive Words 2 to $ inclusive Words 2 to $­1 inclusive</p><p style="padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">take a decimal number <span class="s3">n </span>(default 0) immediately after the <span class="h1">%</span>:</p><h1 style="text-indent: 0pt;text-align: left;">%! %h</h1><h1 style="text-indent: 0pt;text-align: left;">%#</h1><h1 style="text-indent: 0pt;text-align: left;">%%</h1><h1 style="text-indent: 0pt;text-align: left;">%)</h1><h1 style="padding-top: 1pt;text-indent: 0pt;text-align: left;">%*</h1><h1 style="text-indent: 0pt;text-align: left;">%/ %d</h1><h1 style="text-indent: 0pt;text-align: left;">%c %. %C</h1><h1 style="text-indent: 0pt;text-align: left;">%?</h1><h1 style="text-indent: 0pt;text-align: left;">%@ %t</h1><h1 style="text-indent: 0pt;text-align: left;">%B <span class="p">(</span>%b<span class="p">)</span></h1><h1 style="text-indent: 0pt;text-align: left;">%D %D{<i>str</i>}</h1><h1 style="text-indent: 0pt;text-align: left;">%E</h1><h1 style="text-indent: 0pt;text-align: left;">%i</h1><h1 style="text-indent: 0pt;text-align: left;">%j</h1><h1 style="text-indent: 0pt;text-align: left;">%L</h1><h1 style="text-indent: 0pt;text-align: left;">%l</h1><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">Current history event number</p><h1 style="padding-left: 84pt;text-indent: 0pt;text-align: left;"># <span class="p">if superuser, else </span>%</h1><p style="padding-left: 303pt;text-indent: 0pt;text-align: center;">A single <span class="h1">%</span></p><h1 style="padding-left: 84pt;text-indent: 0pt;line-height: 110%;text-align: left;"><span class="p">A </span>) <span class="p">(use with </span>%<i>X</i>(.<i>tstr</i>.<i>fstr</i>)<span class="p">) Time in 24­hour format with seconds</span></h1><p style="padding-left: 84pt;text-indent: 0pt;line-height: 106%;text-align: left;"><span class="h1">$PWD</span>; <span class="s3">n </span>gives trailing parts, <span class="h1">-</span><span class="s3">n </span>leading Deprecated alternatives, differ by default <span class="s3">n </span>Return status of last command</p><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">Time of day in am/pm format Start (stop) bold face mode</p><p class="s3" style="padding-left: 84pt;text-indent: 0pt;text-align: left;"><span class="p">Date as </span>YY<b>-</b>MM<b>-</b>DD<span class="p">, optional strftime spec Clear to end of line</span></p><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">Script/function line number (<span class="h1">$LINENO</span>) Number of jobs as listed by jobs</p><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">Shell depth (<span class="h1">$SHLVL</span>)</p><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">Login terminal without <span class="h1">/dev </span>or</p><h1 style="padding-left: 308pt;text-indent: 0pt;text-align: center;"><a name="a12">/dev/tty</a></h1><p style="padding-left: 5pt;text-indent: 0pt;line-height: 8pt;text-align: left;">least <span class="s3">n </span>chars on line so far; <span class="h1">S $SECONDS </span>at least <span class="s3">n</span>; <span class="h1">T </span>hours is <span class="s3">n</span>;</p><table style="border-collapse:collapse" cellspacing="0"><tr style="height:77pt"><td style="width:79pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s15" style="text-indent: 0pt;text-align: left;">Basic forms of expans</p><p class="s16" style="padding-right: 49pt;text-indent: 0pt;text-align: left;">!<i>expr alias</i></p><p class="s16" style="text-indent: 0pt;text-align: left;">&lt;(<i>cmds</i>)</p><p class="s16" style="text-indent: 0pt;text-align: left;">=(<i>cmds</i>)</p><p class="s16" style="text-indent: 0pt;line-height: 9pt;text-align: left;">&gt;(<i>cmds</i>)</p></td><td style="width:165pt"><p class="s18" style="padding-left: 21pt;text-indent: 0pt;text-align: left;">Expansion</p><p class="s15" style="padding-right: 65pt;text-indent: 1pt;text-align: left;">ion in the order they order: History expansion</p><p class="s15" style="text-indent: 0pt;text-align: left;">Alias expansion</p><p class="s15" style="padding-right: 17pt;text-indent: 0pt;line-height: 11pt;text-align: left;">Replaced by file with output from <span class="s17">cmds </span>Same but can be reread (use for <span class="s16">diff</span>) Replaced by file with input to <span class="s17">cmds</span></p></td><td style="width:244pt" colspan="2" bgcolor="#E5E5E5"><p class="s15" style="text-indent: 0pt;text-align: left;">Modifiers on arguments (can omit word selector):</p><p class="s16" style="text-indent: 0pt;text-align: left;">!!:1:h <span class="s15">Trailing path component removed</span></p><p class="s16" style="text-indent: 0pt;text-align: left;">!!:1:t <span class="s15">Only trailing path component left</span></p><p class="s16" style="text-indent: 0pt;text-align: left;">!!:1:r <span class="s15">File extension .ext removed</span></p><p class="s16" style="text-indent: 0pt;text-align: left;">!!:1:e <span class="s15">Only extension ext left</span></p><p class="s16" style="text-indent: 0pt;text-align: left;">!!:1:p <span class="s15">Print result but don’t execute</span></p><p class="s16" style="text-indent: 0pt;line-height: 10pt;text-align: left;">!!:1:q <span class="s15">Quote from further substitution</span></p></td><td style="width:79pt" bgcolor="#E5E5E5"><p class="s16" style="text-indent: 0pt;text-align: left;">%M</p><p class="s16" style="text-indent: 0pt;text-align: left;">%m</p><p class="s16" style="text-indent: 0pt;text-align: left;">%N</p><p class="s16" style="text-indent: 0pt;text-align: left;">%n</p><p class="s16" style="text-indent: 0pt;text-align: left;">%S %s</p><p class="s16" style="text-indent: 0pt;text-align: left;">%T</p><p class="s16" style="text-indent: 0pt;line-height: 10pt;text-align: left;">%U %u</p></td><td style="width:162pt"><p class="s15" style="text-indent: 0pt;line-height: 10pt;text-align: left;">Full host name</p><p class="s15" style="padding-right: 26pt;text-indent: 0pt;line-height: 106%;text-align: left;">Host name to first dot or <span class="s17">n </span>dots Name of script, function, sourced file Name of user (same as <span class="s16">$USERNAME</span>) Start (stop) standout mode</p><p class="s15" style="text-indent: 0pt;line-height: 10pt;text-align: left;">Time of day, 24­hour format</p><p class="s15" style="text-indent: 0pt;line-height: 10pt;text-align: left;">Start (stop) underline mode (patchy support)</p></td></tr><tr style="height:11pt"><td style="width:79pt" bgcolor="#E5E5E5"><p class="s16" style="text-indent: 0pt;line-height: 9pt;text-align: left;">$<i>var</i></p></td><td style="width:165pt"><p class="s15" style="text-indent: 0pt;line-height: 9pt;text-align: left;">Variable substitution</p></td><td style="width:79pt" bgcolor="#E5E5E5"><p class="s16" style="text-indent: 0pt;line-height: 9pt;text-align: left;">!!:1:Q</p></td><td style="width:165pt"><p class="s15" style="text-indent: 0pt;line-height: 9pt;text-align: left;">Strip one level of quotes</p></td><td style="width:79pt" bgcolor="#E5E5E5"><p class="s16" style="text-indent: 0pt;line-height: 9pt;text-align: left;">%v</p></td><td style="width:162pt"><p class="s15" style="text-indent: 0pt;line-height: 9pt;text-align: left;"><span class="s17">n</span>th component of <span class="s16">$psvar </span>array</p></td></tr><tr style="height:11pt"><td style="width:79pt" bgcolor="#E5E5E5"><p class="s16" style="text-indent: 0pt;line-height: 9pt;text-align: left;">${<i>var</i>}</p></td><td style="width:165pt"><p class="s15" style="text-indent: 0pt;line-height: 9pt;text-align: left;">Same but protected, allows more options</p></td><td style="width:79pt" bgcolor="#E5E5E5"><p class="s16" style="text-indent: 0pt;line-height: 10pt;text-align: left;">!!:1:x</p></td><td style="width:165pt"><p class="s15" style="text-indent: 0pt;line-height: 10pt;text-align: left;">Quote and also break at whitespace</p></td><td style="width:79pt" bgcolor="#E5E5E5"><p class="s16" style="text-indent: 0pt;line-height: 10pt;text-align: left;">%W</p></td><td style="width:162pt"><p class="s17" style="text-indent: 0pt;line-height: 10pt;text-align: left;"><span class="s15">Date as middle­endian </span>MM<b>/</b>DD<b>/</b>YY</p></td></tr><tr style="height:11pt"><td style="width:79pt" bgcolor="#E5E5E5"><p class="s16" style="padding-top: 1pt;text-indent: 0pt;line-height: 9pt;text-align: left;">$(<i>cmds</i>)</p></td><td style="width:165pt"><p class="s15" style="text-indent: 0pt;line-height: 9pt;text-align: left;">Replaced by output of <span class="s17">cmds</span></p></td><td style="width:79pt" bgcolor="#E5E5E5"><p class="s16" style="text-indent: 0pt;line-height: 10pt;text-align: left;">!!:1:l</p></td><td style="width:165pt"><p class="s15" style="text-indent: 0pt;line-height: 10pt;text-align: left;">Convert to all lower case</p></td><td style="width:79pt" bgcolor="#E5E5E5"><p class="s16" style="text-indent: 0pt;line-height: 10pt;text-align: left;">%w</p></td><td style="width:162pt"><p class="s15" style="text-indent: 0pt;line-height: 10pt;text-align: left;">Date as <span class="s17">DAY DD</span></p></td></tr><tr style="height:11pt"><td style="width:79pt" bgcolor="#E5E5E5"><p class="s16" style="padding-top: 1pt;text-indent: 0pt;line-height: 9pt;text-align: left;">`<i>cmds`</i></p></td><td style="width:165pt"><p class="s15" style="text-indent: 0pt;line-height: 9pt;text-align: left;">Older form of same, harder to nest</p></td><td style="width:79pt" bgcolor="#E5E5E5"><p class="s16" style="text-indent: 0pt;line-height: 10pt;text-align: left;">!!:1:u</p></td><td style="width:165pt"><p class="s15" style="text-indent: 0pt;line-height: 10pt;text-align: left;">Convert to all upper case</p></td><td style="width:79pt" bgcolor="#E5E5E5"><p class="s16" style="text-indent: 0pt;line-height: 10pt;text-align: left;">%y</p></td><td style="width:162pt"><p class="s15" style="text-indent: 0pt;line-height: 10pt;text-align: left;">Login terminal without <span class="s16">/dev</span></p></td></tr><tr style="height:34pt"><td style="width:79pt" bgcolor="#E5E5E5"><p class="s16" style="padding-top: 1pt;text-indent: 0pt;text-align: left;">$((<i>expr</i>))</p><p class="s17" style="text-indent: 0pt;text-align: left;">X<b>{</b>a<b>,</b>b<b>}</b>Y</p><p class="s17" style="text-indent: 0pt;line-height: 9pt;text-align: left;">X<b>{1..3}</b>Y</p></td><td style="width:165pt"><p class="s15" style="padding-top: 1pt;text-indent: 0pt;text-align: left;">Arithmetic result of evaluating <span class="s17">expr</span></p><p class="s17" style="text-indent: 0pt;text-align: left;">XaY Xby <span class="s15">(N.B. does no pattern matching)</span></p><p class="s17" style="text-indent: 0pt;line-height: 9pt;text-align: left;">X<b>1</b>Y X<b>2</b>y X<b>3</b>y</p></td><td style="width:79pt" bgcolor="#E5E5E5"><p class="s16" style="text-indent: 0pt;line-height: 10pt;text-align: left;">!!:1:s/<i>s1</i>/<i>s2</i>/</p><p class="s16" style="text-indent: 0pt;text-align: left;">!!:1:gs/<i>s2</i>/<i>s2</i>/</p><p class="s16" style="text-indent: 0pt;text-align: left;">!!:1:&amp;</p></td><td style="width:165pt"><p class="s15" style="text-indent: 0pt;line-height: 10pt;text-align: left;">Replace string <span class="s17">s1 </span>by <span class="s17">s2</span></p><p class="s15" style="text-indent: 0pt;text-align: left;">Same but global</p><p class="s15" style="text-indent: 0pt;text-align: left;">Use same <span class="s17">s1 </span>and <span class="s17">s2 </span>on new target</p></td><td style="width:79pt" bgcolor="#E5E5E5"><p class="s16" style="text-indent: 0pt;text-align: left;">%_</p><p class="s16" style="text-indent: 0pt;text-align: left;">%~</p><p class="s16" style="text-indent: 0pt;line-height: 10pt;text-align: left;">%{<i>esc</i>%}</p></td><td style="width:162pt"><p class="s15" style="text-indent: 0pt;text-align: left;">Parser state (continuation lines, debug)</p><p class="s15" style="text-indent: 0pt;line-height: 11pt;text-align: left;">Like <span class="s16">%/</span>, <span class="s16">%d </span>but with tilde substitution Escape sequence <span class="s17">esc </span>doesn’t move cursor</p></td></tr><tr style="height:77pt"><td style="width:79pt"><p class="s17" style="text-indent: 0pt;text-align: left;">X<b>{08..10}</b>Y</p><p class="s16" style="text-indent: 0pt;text-align: left;">~<i>user</i><span class="s15">, </span>~<i>dir</i></p><p class="s16" style="padding-right: 25pt;text-indent: 0pt;text-align: left;">=<i>cmd pattern</i></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s15" style="text-indent: 0pt;text-align: left;">History expansion:</p><p class="s16" style="text-indent: 0pt;line-height: 9pt;text-align: left;">!!</p></td><td style="width:165pt"><p class="s17" style="text-indent: 0pt;text-align: left;">X<b>08</b>Y X<b>09</b>y X<b>10</b>y</p><p class="s15" style="text-indent: 0pt;text-align: left;">User home, named dir (<span class="s17">dir </span>is var name)</p><p class="s15" style="text-indent: 0pt;line-height: 10pt;text-align: left;">/full/path/to/cmd</p><p class="s15" style="text-indent: 0pt;line-height: 10pt;text-align: left;">Glob file names, as above</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s15" style="text-indent: 0pt;line-height: 10pt;text-align: left;">Immediately preceding line (all of it)</p></td><td style="width:244pt" colspan="2"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s15" style="padding-right: 19pt;text-indent: 0pt;line-height: 107%;text-align: left;">Most modifiers work on variables (e.g <span class="s16">${var:h}</span>) or in glob qualifiers (e.g. <span class="s16">*(:h)</span>), the following only work there:</p><p class="s17" style="text-indent: 0pt;line-height: 10pt;text-align: left;"><b>${var:f</b>m} <span class="s15">Repeat modifier </span>m <span class="s15">till stops changing</span></p><p class="s16" style="text-indent: 0pt;text-align: left;">${var:F:<i>N</i>:<i>m</i>}      <span class="s15">Same but no more than </span><span class="s19">N </span><span class="s15">times</span></p><p class="s16" style="text-indent: 0pt;text-align: left;">${var:w<i>m</i>}            <span class="s15">Apply modifer </span><i>m </i><span class="s15">to words of string</span></p><p class="s16" style="text-indent: 0pt;line-height: 10pt;text-align: left;">${var:W:<i>sep</i>:<i>m</i>} <span class="s15">Same but words are separated by </span><i>sep</i></p></td><td style="width:241pt" colspan="2"><p class="s17" style="text-indent: 0pt;text-align: left;"><b>%</b>X<b>(.</b>tstr<b>.</b>fstr<b>) </b>tstr <span class="s15">if test </span>X <span class="s15">gives </span>n<span class="s15">, else </span>fstr</p><p class="s16" style="text-indent: 0pt;text-align: left;">%&lt;<i>str</i>&lt; <span class="s15">Truncate to n on left, </span><i>str </i><span class="s15">on left if so</span></p><p class="s16" style="text-indent: 0pt;text-align: left;">%&gt;<i>str</i>&gt; <span class="s15">Truncate to n on right, </span><i>str </i><span class="s15">on right if so</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s16" style="text-indent: 0pt;text-align: left;"><span class="s15">Test characters in </span>%<i>X</i>(.<i>tstr</i>.<i>fstr</i>)<span class="s15">: </span>! <span class="s15">Privileged;  </span># <span class="s15">uid </span><i>n</i><span class="s15">; </span>?</p><p class="s15" style="text-indent: 0pt;text-align: left;">last status <span class="s17">n</span>; <span class="s16">_ </span>at least <span class="s17">n </span>nested constructs; <span class="s16">/ </span>at least <span class="s17">n </span><span class="s16">$PWD</span></p></td></tr></table><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 5pt;text-indent: 0pt;line-height: 107%;text-align: left;"><span class="h1">t </span>minutes is <span class="s3">n</span>; <span class="h1">v </span>at least <span class="s3">n </span>components in <span class="h1">$psvar</span>; <span class="h1">w </span>day of week is <span class="s3">n </span>(Sunday = 0).</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse" cellspacing="0"><tr style="height:332pt"><td style="width:244pt" colspan="2"><p class="s18" style="padding-left: 57pt;text-indent: 0pt;text-align: left;">Parameter (Variable) Expansion</p><p class="s15" style="text-indent: 0pt;text-align: left;">Basic forms: <span class="s17">str </span>will also be expanded; most forms work on words of array separately:</p><p class="s16" style="text-indent: 0pt;text-align: left;">${<i>var</i>} <span class="s15">Substitute contents of </span><i>var</i><span class="s15">, no splitting</span></p><p class="s16" style="text-indent: 0pt;text-align: left;">${+<i>var</i>} <span class="s15">1 if </span><i>var </i><span class="s15">is set, else 0</span></p><p class="s17" style="text-indent: 0pt;text-align: left;"><b>${</b>var<b>:-</b>str<b>} $</b>var <span class="s15">if non­null, else </span>str</p><p class="s17" style="text-indent: 0pt;text-align: left;"><b>${</b>var<b>-</b>str<b>} $</b>var <span class="s15">if set (even if null) else </span>str</p><p class="s17" style="text-indent: 0pt;text-align: left;"><b>${</b>var<b>:=</b>str<b>} $</b>var <span class="s15">if non­null, else </span>str <span class="s15">and set </span>var <span class="s15">to it</span></p><p class="s16" style="text-indent: 0pt;text-align: left;">${<i>var</i>::=<i>str</i>} <span class="s15">Same but always use </span><i>str</i></p><p class="s16" style="text-indent: 0pt;text-align: left;">${<i>var</i>:?<i>str</i>} $<i>var </i><span class="s15">if non­null else error, abort</span></p><p class="s16" style="text-indent: 0pt;text-align: left;">${<i>var</i>:+<i>str</i>} <i>str </i><span class="s15">if </span>$<i>var </i><span class="s15">is non­null</span></p><p class="s16" style="text-indent: 0pt;text-align: left;">${<i>var</i>#<i>pat</i>} <span class="s15">min match of </span><i>pat </i><span class="s15">removed from head</span></p><p class="s16" style="text-indent: 0pt;text-align: left;">${<i>var</i>##<i>pat</i>} <span class="s15">max match of </span><i>pat </i><span class="s15">removed from head</span></p><p class="s16" style="text-indent: 0pt;text-align: left;">${<i>var</i>%<i>pat</i>}          <span class="s15">min match of </span><i>pat </i><span class="s15">removed from tail</span></p><p class="s16" style="text-indent: 0pt;text-align: left;">${<i>var</i>%%<i>pat</i>}        <span class="s15">max match of </span><i>pat </i><span class="s15">removed from tail</span></p><p class="s17" style="text-indent: 0pt;text-align: left;"><b>${</b>var<b>:#</b>pat<b>} $</b>var <span class="s15">unless </span>pat <span class="s15">matches, then empty</span></p><p class="s17" style="text-indent: 0pt;text-align: left;"><b>${</b>var<b>/</b>p<b>/</b>r<b>}          </b><span class="s15">One occurrence of </span>p <span class="s15">replaced by </span>r</p><p class="s17" style="text-indent: 0pt;text-align: left;"><b>${</b>var<b>//</b>p<b>/</b>r<b>}        </b><span class="s15">All occurrences of </span>p <span class="s15">replaced by </span>r</p><p class="s16" style="text-indent: 0pt;text-align: left;">${#<i>var</i>} <span class="s15">Length of </span><i>var </i><span class="s15">in words (array) or bytes</span></p><p class="s16" style="text-indent: 0pt;text-align: left;">${^<i>var</i>} <span class="s15">Expand elements like brace expansion</span></p><p class="s16" style="text-indent: 0pt;text-align: left;">${=<i>var</i>} <span class="s15">Split words of result like lesser shells</span></p><p class="s16" style="text-indent: 0pt;text-align: left;">${~<i>var</i>} <span class="s15">Allow globbing, file expansion on result</span></p><p class="s16" style="text-indent: 0pt;text-align: left;">${${<i>var</i>%<i>p</i>}#<i>q</i>}    <span class="s15">Apply </span>%<i>p </i><span class="s15">then </span>#<i>q </i><span class="s15">to </span>$<i>var</i></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s15" style="text-indent: 0pt;text-align: left;">Parameter flags in parentheses, immediately after left brace:</p><p class="s16" style="text-indent: 0pt;text-align: left;">% <span class="s15">Expand </span>%<span class="s15">s in result as in prompts</span></p><p class="s16" style="text-indent: 0pt;text-align: left;">@ <span class="s15">Array expand even in double quotes</span></p><p class="s16" style="text-indent: 0pt;text-align: left;">A                             <span class="s15">Create array parameter with </span>${<i>...</i>=<i>...</i>}</p><p class="s16" style="text-indent: 0pt;text-align: left;">a <span class="s15">Array index order, so </span>Oa <span class="s15">is reversed</span></p><p class="s16" style="text-indent: 0pt;line-height: 10pt;text-align: left;">c <span class="s15">Count characters for </span>${#<i>var</i>}</p></td><td style="width:244pt" colspan="2" bgcolor="#E5E5E5"><p class="s16" style="text-indent: 0pt;line-height: 11pt;text-align: left;">q <span class="s15">Quote result with backslashes</span></p><p class="s16" style="text-indent: 0pt;text-align: left;">qq <span class="s15">Quote result with single quotes</span></p><p class="s16" style="text-indent: 0pt;text-align: left;">qqq <span class="s15">Quote result with double quotes</span></p><p class="s16" style="text-indent: 0pt;text-align: left;">qqqq <span class="s15">Quote result with </span>$&#39;<i>...</i>&#39;</p><p class="s16" style="text-indent: 0pt;text-align: left;">Q <span class="s15">Strip quotes from result</span></p><p class="s16" style="text-indent: 0pt;text-align: left;">U <span class="s15">Upper case result</span></p><p class="s16" style="text-indent: 0pt;text-align: left;">v <span class="s15">Include value in result; may have </span>(kv)</p><p class="s16" style="text-indent: 0pt;text-align: left;">V <span class="s15">Visible representation of special chars</span></p><p class="s16" style="text-indent: 0pt;text-align: left;">w <span class="s15">Count words with </span>${#<i>var</i>}</p><p class="s16" style="text-indent: 0pt;text-align: left;">z <span class="s15">Split to words using shell grammar</span></p><p class="s16" style="text-indent: 0pt;text-align: left;">p                             <span class="s15">Following forms recognize print </span>\<span class="s15">­escapes</span></p><p class="s15" style="text-indent: 0pt;text-align: left;"><span class="s16">j:str: </span>Join words with <span class="s17">str </span>between</p><p class="s15" style="padding-right: 19pt;text-indent: 0pt;line-height: 106%;text-align: left;"><span class="s16">l:x:        </span>Pad with spaces on left to width <span class="s17">x </span><span class="s16">l:x::s1: </span>Same but pad with repeated <span class="s17">s1 </span><span class="s16">l:x::s1::s2: </span>Same but <span class="s17">s2 </span>used once before any <span class="s17">s1</span>s <span class="s16">r:x::s1::s2: </span>Pad on right, otherwise same as <span class="s16">l </span>forms <span class="s16">s:str: </span>Split to array on occurrences of <span class="s17">str</span></p><p class="s16" style="text-indent: 0pt;line-height: 11pt;text-align: left;">S <span class="s15">With patterns, search substrings</span></p><p class="s15" style="text-indent: 0pt;text-align: left;"><span class="s16">I:exp: </span>With patterns, match <span class="s17">exp</span>th occurrence</p><p class="s16" style="text-indent: 0pt;text-align: left;">B <span class="s15">With patterns, include match beginning</span></p><p class="s16" style="text-indent: 0pt;text-align: left;">E <span class="s15">With patterns, include match end</span></p><p class="s16" style="padding-right: 3pt;text-indent: 0pt;line-height: 106%;text-align: justify;">R  <span class="s15">With patterns, include unmatched part (rest) Delimeters shown as </span>:<i>str</i>: <span class="s15">may be any pair of chars or matched parenthses </span>(<i>str</i>)<span class="s15">, </span>{<i>str</i>}<span class="s15">, </span>[<i>str</i>]<span class="s15">, </span>&lt;<i>str</i>&gt;<span class="s15">.</span></p></td><td style="width:243pt" colspan="2"><p class="s15" style="text-indent: 0pt;line-height: 10pt;text-align: left;">Order of rules:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s16" style="padding-left: 18pt;text-indent: 0pt;text-align: left;"><span class="s15">7. Join if not joined and </span>(j:<i>str</i>:)<span class="s15">, </span>(F)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s15" style="padding-left: 18pt;text-indent: 0pt;text-align: left;">9. Split if <span class="s16">SH_WORD_SPLIT</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s15" style="padding-left: 18pt;text-indent: 0pt;text-align: left;">11. Apply <span class="s16">(o)</span>, <span class="s16">(O)</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s16" style="padding-left: 18pt;text-indent: 0pt;text-align: left;"><span class="s15">13.   Apply </span>(l.<i>str</i>.)<span class="s15">, </span>(r.<i>str</i>.)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s15" style="padding-right: 32pt;text-indent: 0pt;line-height: 212%;text-align: left;">Types shown with <span class="s16">(t) </span>have basic type <span class="s16">scalar</span>, <span class="s16">array</span>, from following list:</p><p class="s16" style="padding-right: 32pt;text-indent: 0pt;line-height: 214%;text-align: left;">left      <span class="s15">Left justified with </span>typeset  -L right_zeros <span class="s15">Right justified with </span>typeset -Z upper <span class="s15">Upper case forced with </span>typeset -u</p><p class="s16" style="text-indent: 0pt;text-align: left;">tag <span class="s15">Tagged as </span>typeset -t <span class="s15">(no special effect)</span></p></td></tr><tr style="height:44pt"><td style="width:79pt" bgcolor="#E5E5E5"><p class="s16" style="text-indent: 0pt;text-align: left;">C</p><p class="s16" style="padding-right: 72pt;text-indent: 0pt;text-align: left;">e f</p><p class="s16" style="text-indent: 0pt;line-height: 10pt;text-align: left;">F</p></td><td style="width:165pt"><p class="s15" style="text-indent: 0pt;line-height: 10pt;text-align: left;">Capitalize result</p><p class="s15" style="padding-right: 21pt;text-indent: 0pt;text-align: left;">Do parameter, comand, arith expansion Split result to array on newlines</p><p class="s15" style="text-indent: 0pt;line-height: 10pt;text-align: left;">Join arrays with newlines between elements</p></td><td style="width:79pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:165pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:79pt" bgcolor="#E5E5E5"><p class="s16" style="padding-right: 40pt;text-indent: 0pt;line-height: 11pt;text-align: left;">unique hide hideval special</p></td><td style="width:164pt"><p class="s15" style="text-indent: 0pt;text-align: left;">Elements unique with <span class="s16">typeset -U</span></p><p class="s15" style="text-indent: 0pt;text-align: left;">Variable not special in func (<span class="s16">typeset -h</span>)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s15" style="text-indent: 0pt;line-height: 9pt;text-align: left;">Variable special to shell</p></td></tr><tr style="height:76pt"><td style="width:79pt" bgcolor="#E5E5E5"><p class="s16" style="text-indent: 0pt;line-height: 10pt;text-align: left;">i</p><p class="s16" style="padding-right: 73pt;text-indent: 0pt;text-align: justify;">k L</p><p class="s16" style="padding-right: 73pt;text-indent: 0pt;line-height: 106%;text-align: justify;">n o O</p><p class="s16" style="text-indent: 0pt;line-height: 10pt;text-align: justify;">P</p></td><td style="width:165pt"><p class="s16" style="text-indent: 0pt;line-height: 10pt;text-align: left;">oi <span class="s15">or </span>Oi <span class="s15">sort case independently</span></p><p class="s15" style="padding-right: 37pt;text-indent: 0pt;text-align: left;">For associative array, result is keys Lower case result</p><p class="s16" style="padding-right: 65pt;text-indent: 0pt;text-align: left;">on <span class="s15">or </span>On <span class="s15">sort numerically Sort into ascending order Sort into descending order</span></p><p class="s15" style="text-indent: 0pt;line-height: 10pt;text-align: left;">Interpret result as parameter name, get value</p></td><td style="width:79pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:165pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:79pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:164pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr></table><ol id="l3"><li style="padding-left: 79pt;text-indent: -78pt;text-align: left;"><p class="s15" style="display: inline;">Output type of variable (see below)</p></li><li style="padding-left: 79pt;text-indent: -78pt;text-align: left;"><p class="s15" style="display: inline;">Unique: remove duplicates after first</p></li></ol><ol id="l4"><li style="padding-left: 79pt;text-indent: -78pt;text-align: left;"><p class="s15" style="display: inline;">Same but empty words count</p></li><li style="padding-left: 79pt;text-indent: -78pt;text-align: left;"><p class="s15" style="display: inline;">Report parsing errors (normally ignored)</p></li></ol><ol id="l5"><li style="padding-left: 79pt;text-indent: -78pt;text-align: left;"><p class="s15" style="display: inline;">With patterns, include matched portion</p></li><li style="padding-left: 79pt;text-indent: -78pt;text-align: left;"><p class="s15" style="display: inline;">With patterns, include length of match</p></li></ol><ol id="l6"><li style="padding-left: 36pt;text-indent: -18pt;text-align: left;"><p class="s15" style="display: inline;">Nested substitution: from inside out</p></li><li style="padding-left: 36pt;padding-right: 15pt;text-indent: -18pt;line-height: 107%;text-align: left;"><p class="s16" style="display: inline;"><span class="s15">Subscripts: </span>${<i>arr</i>[3]} <span class="s15">extract word; </span>${<i>str</i>[2]} <span class="s15">extract character; </span>${<i>arr</i>[2,4]}<span class="s15">, </span>${<i>str</i>[4,8]} <span class="s15">extract range; </span>-1 <span class="s15">is last word/char, </span>-2 <span class="s15">previous etc.</span></p></li><li style="padding-left: 36pt;text-indent: -18pt;line-height: 10pt;text-align: left;"><p class="s16" style="display: inline;">${(P)<i>var</i>} <span class="s15">replaces name with value</span></p></li><li style="padding-left: 36pt;text-indent: -18pt;text-align: left;"><p class="s16" style="display: inline;">¨$<i>array</i>¨ <span class="s15">joins array, may use </span>(j:<i>str</i>:)</p></li><li style="padding-left: 36pt;text-indent: -18pt;text-align: left;"><p class="s16" style="display: inline;"><span class="s15">Nested subscript e.g. </span>${${<i>var</i>[2,4]}[1]}</p></li></ol><p style="text-indent: 0pt;text-align: left;"/><p style="padding-top: 5pt;text-indent: 0pt;text-align: right;">6. <span class="h1">#</span>, <span class="h1">%</span>, <span class="h1">/ </span>etc. modifications</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: right;">8. Split if <span class="h1">(s)</span>, <span class="h1">(z)</span>, <span class="h1">(z)</span>, <span class="h1">=</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: right;">10. Apply <span class="h1">(u)</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: right;">12. Apply <span class="h1">(e)</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: right;">14. If single word needed for context, join with <span class="h1">$IFS[1]</span>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><h1 style="padding-left: 493pt;text-indent: 0pt;line-height: 209%;text-align: left;">integer<span class="p">, </span>float<span class="p">, </span>assocation<span class="p">, then hyphen­separated words </span>local <span class="p">Parameter is local to function </span>right_blanks <span class="p">Right justified with </span>typeset -R</h1><h1 style="padding-left: 493pt;text-indent: 0pt;line-height: 214%;text-align: left;">lower <span class="p">Lower case forced with </span>typeset -l readonly <span class="p">Read­only, </span>typeset -r <span class="p">or </span>readonly export <span class="p">Exported with </span>export<span class="p">, </span>typeset -x</h1><p style="text-indent: 0pt;text-align: left;"><br/></p><h1 style="text-indent: 0pt;text-align: right;">typeset <span class="p">hides value (</span>typeset -H<span class="p">)</span></h1><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1" style="padding-top: 5pt;padding-left: 81pt;text-indent: 0pt;text-align: left;"><a name="a13">Parameters (Variables)</a></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>!</b></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>#</b></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>ARGC</b></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>$</b></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>-</b></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>*</b></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>argv</b></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>@</b></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>?</b></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>0</b></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>_ CPUTYPE</b></p><p class="s20" style="text-indent: 0pt;line-height: 10pt;text-align: left;"><b>EGID</b></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>EUID</b></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>ERRNO</b></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>GID HISTCMD HOST</b></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>LINENO LOGNAME MACHTYPE OLDPWD</b></p><p class="s20" style="text-indent: 0pt;line-height: 10pt;text-align: left;"><b>OPTARG</b></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>OPTIND OSTYPE</b></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>pipestatus</b></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>PPID PWD</b></p><p class="s20" style="text-indent: 0pt;line-height: 10pt;text-align: left;"><b>RANDOM</b></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>SECONDS</b></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>SHLVL</b></p><h1 style="text-indent: 0pt;text-align: left;">signals</h1><p class="s20" style="text-indent: 0pt;text-align: left;"><b>status</b></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>TRY_BLOCK_ ERROR</b></p><h1 style="text-indent: 0pt;text-align: left;">TTY</h1><p class="s20" style="text-indent: 0pt;text-align: left;"><b>TTYIDLE</b></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>UID</b></p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 5pt;text-indent: 0pt;line-height: 110%;text-align: left;">Parameters set by shell, <span class="s20"></span>denotes special to shell (may not be reused except by hiding with typeset ­h in functions)</p><p style="padding-left: 84pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Process ID of last background process</p><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">Number of arguments to script or function Same</p><p style="padding-left: 84pt;text-indent: 0pt;text-align: justify;">Process ID of main shell process String of single letter options set Positional parameters</p><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">Same</p><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">Same, but does splitting in double quotes Status of last command</p><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">Name of shell, usually reflects functions Last argument of previous command Machine type (run time)</p><p style="padding-left: 84pt;text-indent: 0pt;text-align: justify;">Effective GID (via system call), set if root Effective UID (via system call), set if root Last system error number</p><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">Real group ID (via system call), set if root The current history line number</p><p style="padding-left: 84pt;text-indent: 0pt;line-height: 10pt;text-align: left;">The host name</p><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">Line number in shell, function Login name (exported by default) Machine type (compile time) Previous directory</p><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">Argument for option handled by getopts Index of positional parameter in getopts Operating system type (compile time) Array giving statuses of last pipeline Process ID of parent of main shell Current directory</p><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">A pseudo­random number, repeating Seconds since shell started</p><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">Depth of current shell</p><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">Array giving names of signals Status of last command</p><p style="padding-left: 84pt;text-indent: 0pt;line-height: 10pt;text-align: left;">In always block, 1 if error in try block</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">Terminal associated with shell if any Time for which terminal has been idle Real user ID (via system call), set if root</p><p style="padding-top: 4pt;padding-left: 84pt;text-indent: 0pt;text-align: left;">Name for $UID, set if root</p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>USERNAME VENDOR ZSH_NAME ZSH_VERSION</b></p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">Operating system vendor (compile time) Base name of command used to start shell Version number of shell</p><p style="text-indent: 0pt;text-align: left;"><br/></p><h1 style="text-indent: 0pt;text-align: left;">ARGV0 BAUD</h1><p class="s20" style="text-indent: 0pt;line-height: 10pt;text-align: left;"><b>cdpath </b><span class="p">:</span></p><p class="s20" style="text-indent: 0pt;line-height: 106%;text-align: left;"><b>COLUMNS DIRSTACKSIZE ENV</b></p><h1 style="text-indent: 0pt;text-align: left;">FCEDIT</h1><p class="s20" style="text-indent: 0pt;text-align: left;"><b>fignore </b><span class="p">:</span></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>fpath </b><span class="p">:</span></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>histchars</b></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>HISTCHARS HISTFILE</b></p><p class="s20" style="text-indent: 0pt;line-height: 10pt;text-align: left;"><b>HISTSIZE</b></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>HOME</b></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>IFS KEYTIMEOUT</b></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>LANG</b></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>LC_ALL</b></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>LC_COLLATE</b></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>LC_CTYPE</b></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>LC_MESSAGES</b></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>LC_NUMERIC</b></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>LC_TIME</b></p><p class="s20" style="text-indent: 0pt;line-height: 106%;text-align: left;"><b>LINES LISTMAX LOGCHECK MAIL MAILCHECK</b></p><p class="s20" style="text-indent: 0pt;line-height: 10pt;text-align: left;"><b>mailpath </b><span class="p">:</span></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>manpath </b><span class="p">:</span></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>module_path </b><span class="p">:</span></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>NULLCMD</b></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>path </b><span class="p">:</span></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>POSTEDIT</b></p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 5pt;text-indent: 0pt;line-height: 110%;text-align: left;">Parameters used by the shell if set: <span class="h1">: </span>indicates arrays with corresponding colon­separated paths e.g. <span class="h1">cdpath </span>and <span class="h1">CDPATH</span>:</p><p style="padding-left: 84pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Export to set name of external command</p><p style="padding-left: 84pt;text-indent: 0pt;line-height: 107%;text-align: left;">Baud rate: compensation for slow terminals Directories searched for <span class="h1">cd </span>target</p><p style="padding-left: 84pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Width of screen</p><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">Maximum size of stack for <span class="h1">pushd</span></p><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">File to source when started as <span class="h1">sh </span>or <span class="h1">ksh</span></p><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">Default editor used by <span class="h1">fc</span></p><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">List of suffixes ignored in file completion Directories to search for autoloading History, quick replace, comment chars Same, deprecated</p><p style="padding-left: 84pt;text-indent: 0pt;line-height: 106%;text-align: left;">File for reading and writing shell history Number of history lines kept internally Home directory for <span class="h1">~ </span>and default <span class="h1">cd </span>target Characters that separate fields in words Time to wait for rest of key seq (1/100 s) Locale (usual variable, <span class="h1">LC_</span><span class="s3">* </span>override) Locale (overrides <span class="h1">LANG</span>, <span class="h1">LC_</span><span class="s3">*)</span></p><p style="padding-left: 84pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Locale for sorting etc.</p><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">Locale for character handling Locale for messages</p><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">Locale for decimal point, thousands Locale for date and time</p><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">Height of screen</p><p style="padding-left: 84pt;text-indent: 0pt;line-height: 107%;text-align: left;">Number of completions shown w/o asking Interval for checking <span class="h1">$watch</span></p><p style="padding-left: 84pt;text-indent: 0pt;line-height: 106%;text-align: left;">Mail file to check (<span class="h1">$mailpath </span>overrides) Mail check interval, secs (before prompt) List of files to check for new mail Directories to find manual, used by <span class="h1">man </span>Directories for <span class="h1">zmodload </span>to find modules Command used if only redirection given Command search path</p><p style="padding-left: 84pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Termcap strings sent to terminal after edit</p><p style="padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;line-height: 106%;text-align: left;">Printed at start of first line of output; see above for escape sequences for all <span class="h1">PS</span>s Printed for continuation lines</p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>PS1, PROMPT,</b></p><h1 style="text-indent: 0pt;text-align: left;">prompt</h1><p class="s20" style="padding-top: 1pt;text-indent: 0pt;text-align: left;"><b>PS2, PROMPT2</b></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>PS3, PROMPT3</b></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>PS4, PROMPT4</b></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>psvar </b><span class="p">:</span></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>READNULLCMD REPORTTIME REPLY</b></p><h1 style="text-indent: 0pt;text-align: left;">reply</h1><p class="s20" style="text-indent: 0pt;text-align: left;"><b>RPS1, RPROMPT</b></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>RPS2, RPROMPT2 SAVEHIST</b></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>SPROMPT STTY</b></p><p class="s20" style="text-indent: 0pt;line-height: 107%;text-align: left;"><b>TERM TIMEFMT TMOUT TMPPREFIX</b></p><p class="s20" style="text-indent: 0pt;line-height: 10pt;text-align: left;"><b>watch </b><span class="p">:</span></p><h1 style="text-indent: 0pt;text-align: left;">WATCHFMT</h1><p class="s20" style="text-indent: 0pt;text-align: left;"><b>WORDCHARS ZBEEP ZDOTDIR</b></p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Print within <span class="h1">select </span>loop</p><h1 style="padding-left: 5pt;text-indent: 0pt;line-height: 107%;text-align: left;"><span class="p">For tracing execution (</span>xtrace <span class="p">option) Used with </span>%<i>n</i>v <span class="p">in prompts</span></h1><p style="padding-left: 5pt;text-indent: 0pt;line-height: 106%;text-align: left;">Command used when only input redir given Show report if command takes this long (s) Used to return a value e.g. by <span class="h1">read</span></p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Used to return array value</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Printed on right of screen for first line Printed on right of screeen for continuation line</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Max number of history lines saved Prompt when correcting spelling</p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 106%;text-align: left;">Export with <span class="h1">stty </span>arguments to command Type of terminal in use (<span class="h1">xterm </span>etc.) Format for reporting usage with <span class="h1">time </span>Send <span class="h1">SIGALRM </span>after seconds of inactivity Path prefix for shell’s temporary files</p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 107%;text-align: left;">List of users or <span class="h1">all</span>, <span class="h1">notme </span>to watch for Format of reports for <span class="h1">$watch</span></p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 106%;text-align: left;">Chars considered parts of word by zle String to replace beeps in line editor Used for startup files instead of <span class="h1">~ </span>if set</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1" style="padding-top: 6pt;padding-left: 67pt;text-indent: 0pt;text-align: left;"><a name="a14">Tests and numeric expressions</a></p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 110%;text-align: left;">Usually used after if, while, until or with &amp;&amp; or ||, but the status may be useful anywhere e.g. as implicit return status for function.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><h1 style="text-indent: 0pt;text-align: left;">-a</h1><h1 style="text-indent: 0pt;text-align: left;">-b</h1><h1 style="text-indent: 0pt;text-align: left;">-c</h1><h1 style="text-indent: 0pt;text-align: left;">-d</h1><h1 style="text-indent: 0pt;text-align: left;">-e</h1><h1 style="text-indent: 0pt;text-align: left;">-f</h1><h1 style="text-indent: 0pt;text-align: left;">-g</h1><h1 style="text-indent: 0pt;text-align: left;">-h</h1><h1 style="text-indent: 0pt;text-align: left;">-k</h1><h1 style="text-indent: 0pt;text-align: left;">-p</h1><h1 style="text-indent: 0pt;text-align: left;">-r</h1><h1 style="text-indent: 0pt;text-align: left;">-s</h1><h1 style="text-indent: 0pt;text-align: left;">-u</h1><h1 style="text-indent: 0pt;text-align: left;">-w</h1><h1 style="text-indent: 0pt;text-align: left;">-x</h1><h1 style="text-indent: 0pt;text-align: left;">-L</h1><h1 style="text-indent: 0pt;text-align: left;">-O</h1><p style="text-indent: 0pt;text-align: left;"><br/></p><h1 style="text-indent: 0pt;text-align: left;">-G</h1><h1 style="text-indent: 0pt;text-align: left;">-S</h1><h1 style="text-indent: 0pt;text-align: left;">-N</h1><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 43pt;text-indent: -37pt;text-align: left;">File tests, e.g. <span class="h1">[[ -e </span><span class="s3">file </span><span class="h1">]]</span>: True if <span class="s3">file </span>exists</p><p style="padding-left: 43pt;text-indent: 0pt;line-height: 106%;text-align: left;">True if <span class="s3">file </span>is block special True if <span class="s3">file </span>is character special True if <span class="s3">file </span>is directory</p><p style="padding-left: 43pt;text-indent: 0pt;text-align: left;">True if <span class="s3">file </span>exists</p><p style="padding-left: 43pt;text-indent: 0pt;line-height: 106%;text-align: justify;">True if <span class="s3">file </span>is a regular file (not special or directory True if <span class="s3">file </span>has setgid bit set (mode includes 02000) True if <span class="s3">file </span>is symbolic link</p><p style="padding-left: 43pt;text-indent: 0pt;line-height: 106%;text-align: left;">True if <span class="s3">file </span>has sticky bit set (mode includes 02000) True if <span class="s3">file </span>is named pipe (FIFO)</p><p style="padding-left: 43pt;text-indent: 0pt;line-height: 106%;text-align: left;">True if <span class="s3">file </span>is readable by current process True if <span class="s3">file </span>has non­zero size</p><p style="padding-left: 43pt;text-indent: 0pt;line-height: 106%;text-align: left;">True if <span class="s3">file </span>has setuid bit set (mode includes 04000) True if <span class="s3">file </span>is writeable by current process</p><p style="padding-left: 43pt;text-indent: 0pt;line-height: 106%;text-align: left;">True if <span class="s3">file </span>executable by current process True if <span class="s3">file </span>is symbolic link</p><p style="padding-left: 43pt;text-indent: 0pt;text-align: left;">True if <span class="s3">file </span>owned by effective UID of current process</p><p style="padding-left: 43pt;text-indent: 0pt;line-height: 106%;text-align: left;">True if <span class="s3">file </span>has effective GID of current process True if <span class="s3">file </span>is a socket (special communication file) True if <span class="s3">file </span>has access time no newer than mod time</p><p style="text-indent: 0pt;text-align: left;"><br/></p><h1 style="text-indent: 0pt;text-align: left;">-n</h1><h1 style="text-indent: 0pt;text-align: left;">-o</h1><h1 style="text-indent: 0pt;text-align: left;">-t</h1><h1 style="text-indent: 0pt;text-align: left;">-z</h1><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 43pt;text-indent: -38pt;text-align: left;">Other single argument tests, e.g. <span class="h1">[[ -n </span><span class="s3">str </span><span class="h1">]]</span>: True if <span class="s3">str </span>has non­zero length</p><p style="padding-left: 43pt;text-indent: 0pt;text-align: left;">True if option <span class="s3">str </span>is set</p><p style="padding-left: 43pt;text-indent: 0pt;line-height: 107%;text-align: left;">True if <span class="s3">str </span>(number) is open file descriptor True if <span class="s3">str </span>has zero length</p><p style="text-indent: 0pt;text-align: left;"><br/></p><h1 style="text-indent: 0pt;text-align: left;">-nt</h1><h1 style="text-indent: 0pt;text-align: left;">-ot</h1><h1 style="text-indent: 0pt;text-align: left;">-ef</h1><h1 style="text-indent: 0pt;text-align: left;">=</h1><h1 style="text-indent: 0pt;text-align: left;">==</h1><p style="text-indent: 0pt;text-align: left;"/><h1 style="padding-left: 5pt;text-indent: 0pt;line-height: 110%;text-align: left;"><span class="p">Multiple argument tests e.g. </span>[[ <i>a </i>-eq <i>b </i>]]<span class="p">: numerical expressions may be quoted formulae e.g. </span>‘1*2’<span class="p">:</span></h1><p style="padding-left: 43pt;text-indent: 0pt;line-height: 10pt;text-align: left;">True if file <span class="s3">a </span>is newer than file <span class="s3">b</span></p><p style="padding-left: 43pt;text-indent: 0pt;text-align: left;">True if file <span class="s3">a </span>is older than file <span class="s3">b</span></p><p style="padding-left: 43pt;text-indent: 0pt;line-height: 106%;text-align: left;">True if <span class="s3">a </span>and <span class="s3">b </span>refer to same file (i.e. are linked) True if string <span class="s3">a </span>matches pattern <span class="s3">b</span></p><p style="padding-left: 43pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Same but more modern (and still not often used)</p><p style="padding-top: 5pt;padding-left: 43pt;text-indent: 0pt;line-height: 106%;text-align: left;">True if string <span class="s3">a </span>does not match pattern <span class="s3">b </span>True if string <span class="s3">a </span>sorts before string <span class="s3">b </span>True if string <span class="s3">a </span>sorts after string <span class="s3">b</span></p><h1 style="text-indent: 0pt;text-align: left;">!=</h1><h1 style="text-indent: 0pt;text-align: left;">&lt;</h1><h1 style="text-indent: 0pt;text-align: left;">&gt;</h1><h1 style="text-indent: 0pt;text-align: left;">-eq</h1><h1 style="text-indent: 0pt;text-align: left;">-ne</h1><h1 style="text-indent: 0pt;text-align: left;">-lt</h1><h1 style="text-indent: 0pt;text-align: left;">-gt</h1><h1 style="text-indent: 0pt;text-align: left;">-le</h1><h1 style="text-indent: 0pt;text-align: left;">-ge</h1><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 43pt;text-indent: 0pt;line-height: 106%;text-align: left;">True if numerical expressions <span class="s3">a </span>and <span class="s3">b </span>are equal True if numerical expressions <span class="s3">a </span>and <span class="s3">b </span>are not equal True if <span class="s3">a </span>&lt; <span class="s3">b </span>numerically</p><p class="s3" style="padding-left: 43pt;text-indent: 0pt;line-height: 106%;text-align: justify;"><span class="p">True if </span>a <span class="p">&gt; </span>b <span class="p">numerically True if </span>a <span class="s20">≤ </span>b <span class="p">numerically True if </span>a <span class="s20">≥ </span>b <span class="p">numerically</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><h1 style="text-indent: 0pt;text-align: left;">( <i>expr </i>)</h1><h1 style="text-indent: 0pt;text-align: left;">! <i>expr</i></h1><p class="s3" style="text-indent: 0pt;text-align: left;">exprA <b>&amp;&amp; </b>exprB exprA <b>|| </b>exprB</p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 5pt;text-indent: 0pt;line-height: 109%;text-align: left;">Combining expressions: <span class="s3">expr </span>is any of the above, or the result of any combination of the following:</p><p style="padding-left: 83pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Group tests</p><p style="padding-left: 83pt;text-indent: 0pt;text-align: left;">True if <span class="s3">expr </span>is false and vice versa True if both expressions true</p><p style="padding-left: 83pt;text-indent: 0pt;text-align: left;">True if either expression true</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 110%;text-align: left;">For complicated numeric tests use <span class="h1">(( </span><span class="s3">expr </span><span class="h1">)) </span>where <span class="s3">expr </span>is a numeric expression: status is 1 if <span class="s3">expr </span>is non­zero else 0. Same syntax used in <span class="h1">$(( </span><span class="s3">expr </span><span class="h1">)) </span>substitution. Precedences of operators from highest to lowest are:</p><ul id="l7"><li style="padding-left: 41pt;text-indent: -18pt;line-height: 11pt;text-align: left;"><h1 style="display: inline;"><i>func</i>(<i>arg...</i>)<span class="p">, numeric constant (e.g. </span>3<span class="p">, </span>-4<span class="p">, </span>3.24<span class="p">,</span></h1><p style="padding-left: 41pt;text-indent: 0pt;line-height: 109%;text-align: left;"><span class="h1">-14.6e-10</span>), <span class="s3">var </span>(does not require <span class="h1">$ </span>in front unless some substitution e.g. <span class="h1">${#</span><span class="s3">var</span><span class="h1">} </span>is needed, <span class="h1">$ </span>is error if <span class="s3">var </span>is to be modified)</p></li><li style="padding-left: 41pt;text-indent: -18pt;text-align: left;"><h1 style="display: inline;">( <i>expr </i>)</h1></li><li style="padding-left: 41pt;text-indent: -18pt;text-align: left;"><h1 style="display: inline;">!<span class="p">, </span>~<span class="p">, </span>++ <span class="p">(post­ or preincrement), </span>-- <span class="p">(post­ or predecrement), unary </span>+<span class="p">, unary </span>-</h1></li><li style="padding-left: 41pt;text-indent: -18pt;text-align: left;"><h1 style="display: inline;"><a name="a15">&amp;</a></h1></li><li style="padding-left: 41pt;text-indent: -18pt;text-align: left;"><h1 style="display: inline;">^</h1></li><li style="padding-left: 41pt;text-indent: -18pt;text-align: left;"><h1 style="display: inline;">|</h1></li><li style="padding-left: 41pt;text-indent: -18pt;text-align: left;"><h1 style="display: inline;">** <span class="p">(exponentiation)</span></h1></li><li style="padding-left: 41pt;text-indent: -18pt;text-align: left;"><h1 style="display: inline;">*<span class="p">, </span>/<span class="p">, </span>%</h1></li><li style="padding-left: 41pt;text-indent: -18pt;text-align: left;"><p style="display: inline;">binary <span class="h1">+</span>, binary <span class="h1">-</span></p></li><li style="padding-left: 41pt;text-indent: -18pt;text-align: left;"><h1 style="display: inline;">&lt;&lt;<span class="p">, </span>&gt;&gt;</h1></li><li style="padding-left: 41pt;text-indent: -18pt;text-align: left;"><h1 style="display: inline;">&lt;<span class="p">, &lt;=, </span>&gt;<span class="p">, </span>&gt;=</h1><h1 style="padding-left: 23pt;text-indent: 0pt;text-align: left;"><span class="s21">• </span>==<span class="p">, </span>!=</h1></li><li style="padding-left: 41pt;text-indent: -18pt;text-align: left;"><h1 style="display: inline;"><a name="a16">&amp;&amp;</a></h1></li><li style="padding-left: 41pt;text-indent: -18pt;text-align: left;"><h1 style="display: inline;">||<span class="p">, </span>^^</h1></li><li style="padding-left: 41pt;text-indent: -18pt;text-align: left;"><h1 style="display: inline;">? <span class="p">(ternary operator)</span></h1></li></ul></li></ol><ul id="l8"><li style="padding-top: 6pt;padding-left: 37pt;text-indent: -18pt;text-align: left;"><h1 style="display: inline;">: <span class="p">(true/false separator for ternary operator)</span></h1><h1 style="padding-left: 19pt;text-indent: 0pt;text-align: left;"><span class="s21">• </span>=<span class="p">, </span>+=<span class="p">, </span>-=<span class="p">, </span>*=<span class="p">, </span>/=<span class="p">, </span>%=<span class="p">, </span>**=<span class="p">, </span>&amp;=<span class="p">, </span>^=<span class="p">, </span>|=<span class="p">, </span>&lt;&lt;=<span class="p">, </span>&gt;&gt;=<span class="p">,</span></h1><h1 style="padding-left: 37pt;text-indent: 0pt;text-align: left;">&amp;&amp;=<span class="p">, </span>^^=<span class="p">, </span>||=</h1></li><li style="padding-left: 37pt;text-indent: -18pt;text-align: left;"><h1 style="display: inline;">, <span class="p">(as in C, evaluate both sides and return right hand side).</span></h1><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 1pt;text-indent: 0pt;line-height: 109%;text-align: left;">For functions use <span class="h1">zmodload -i zsh/mathfunc</span>; functions available are as described in C math library manual:</p></li><li style="padding-left: 37pt;text-indent: -18pt;line-height: 108%;text-align: left;"><p style="display: inline;">Single floating point argument, return floating point: <span class="h1">acos</span>, <span class="h1">acosh</span>, <span class="h1">asin</span>, <span class="h1">asinh</span>, <span class="h1">atan </span>(optional second argument like C atan2), <span class="h1">atanh</span>, <span class="h1">cbrt</span>, <span class="h1">ceil</span>, <span class="h1">cos</span>, <span class="h1">cosh</span>, <span class="h1">erf</span>, <span class="h1">erfc</span>, <span class="h1">exp</span>, <span class="h1">expm1</span>, <span class="h1">fabs</span>, <span class="h1">floor</span>, <span class="h1">gamma</span>, <span class="h1">j0</span>, <span class="h1">j1</span>, <span class="h1">lgamma</span>, <span class="h1">log</span>, <span class="h1">log10</span>, <span class="h1">log1p</span>, <span class="h1">logb</span>, <span class="h1">sin</span>, <span class="h1">sinh</span>, <span class="h1">sqrt</span>, <span class="h1">tan</span>, <span class="h1">tanh</span>, <span class="h1">y0</span>, <span class="h1">y1</span></p></li><li style="padding-left: 37pt;text-indent: -18pt;text-align: left;"><p style="display: inline;">Single floating point argument, return integer: <span class="h1">ilogb</span></p></li><li style="padding-left: 37pt;text-indent: -18pt;text-align: left;"><p style="display: inline;">No arguments, return integer: <span class="h1">signgam </span>(remember parentheses)</p></li><li style="padding-left: 37pt;text-indent: -18pt;text-align: left;"><p style="display: inline;">Two floating point arguments, return floating point:</p><h1 style="padding-left: 37pt;text-indent: 0pt;text-align: left;"><a name="a17">copysign</a><span class="p">, </span>fmod<span class="p">, </span>hypot<span class="p">, </span>nextafter</h1></li><li style="padding-left: 37pt;text-indent: -18pt;text-align: left;"><p style="display: inline;">One integer, one floating point argument, return floating point: <span class="h1">jn</span>, <span class="h1">yn</span></p></li><li style="padding-left: 37pt;text-indent: -18pt;text-align: left;"><p style="display: inline;">One floating point, one integer argument, return floating point: <span class="h1">ldexp</span>, <span class="h1">scalb</span></p></li><li style="padding-left: 37pt;text-indent: -18pt;text-align: left;"><p style="display: inline;">Either integer or floating point, return same type: <span class="h1">abs</span></p></li><li style="padding-left: 37pt;text-indent: -18pt;text-align: left;"><p style="display: inline;">Coerce to floating point: <span class="h1">float</span></p></li><li style="padding-left: 37pt;text-indent: -18pt;text-align: left;"><p style="display: inline;">Coerce to integer: <span class="h1">int</span></p></li><li style="padding-left: 37pt;text-indent: -18pt;text-align: left;"><p style="display: inline;">Optional string argument (read/write variable name), return floating point: <span class="h1">rand48</span></p></li></ul><p style="padding-left: 1pt;text-indent: 0pt;text-align: left;">Example use:</p><h1 style="text-indent: 0pt;text-align: left;">zmodload -i zsh/mathfunc float x</h1><h1 style="text-indent: 0pt;text-align: left;">(( x = 26.4 * sqrt(2) ))</h1><h1 style="text-indent: 0pt;text-align: left;">print $(( log(x)/2 ))</h1><p style="padding-left: 1pt;text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1" style="padding-top: 6pt;padding-left: 5pt;text-indent: 98pt;text-align: left;">Completion <span class="p">Load new completion system with: </span><span class="h1">autoload -Uz compinit compinit</span></p><h1 style="padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="a18">-brace- parameter-</a></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-assign- parameter-</h1><h1 style="padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><span class="p">Parameter within </span>${<span class="s5">…</span>}</h1><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Left hand side of assignment</p><h1 style="padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">files <span class="p">Generic file matching tag</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">fonts <span class="p">X font names</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">fstypes <span class="p">Files system types for mount etc.</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;line-height: 9pt;text-align: left;">functions <span class="p">Shell functions, possibly other types</span></h1><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Configuration: uses styles</p><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">zstyle  <i>context  style  value</i>…</h1><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">where context may be a pattern matching the following form:</p><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">:completion:<i>func</i>:<i>completer</i>:<i>cmd</i>:<i>arg</i>:<i>tag</i></h1><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">in which:</p><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="a19">completion</a></h1><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Literal string always used by completion functions</p><p class="s3" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">func</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Name of directly called widget, blank for contextual completion</p><p class="s3" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">completer</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Method of completion e.g. <span class="h1">complete</span>; see below</p><p class="s3" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">cmd</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Name of command being completed, or special command context</p><p class="s3" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">arg</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Only valid with standard parsing: <span class="h1">arg-</span><span class="s3">n </span>for <span class="s3">n</span>th argument</p><p class="s3" style="padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><b>option-opt-</b>n <span class="p">for </span>n<span class="p">th argument of option opt</span></p><p class="s3" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">tag</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Indication of type of thing to be completed at this point.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Completers (<span class="s20"></span>indicates modifiers existing or later completions):</p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>_all_matches</b></p><h1 style="text-indent: 0pt;text-align: left;">_approximate</h1><h1 style="text-indent: 0pt;text-align: left;">_complete</h1><h1 style="text-indent: 0pt;text-align: left;">_correct</h1><h1 style="text-indent: 0pt;text-align: left;">_expand</h1><h1 style="text-indent: 0pt;text-align: left;">_expand_alias</h1><h1 style="text-indent: 0pt;text-align: left;">_history</h1><p class="s20" style="text-indent: 0pt;text-align: left;"><b>_ignored</b></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>_list</b></p><h1 style="text-indent: 0pt;text-align: left;">_match</h1><p class="s20" style="text-indent: 0pt;text-align: left;"><b>_menu</b></p><p class="s20" style="text-indent: 0pt;text-align: left;"><b>_oldlist</b></p><h1 style="text-indent: 0pt;text-align: left;">_prefix</h1><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">Later completers add all matches Complete with errors in part so far Basic completion</p><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">Correct word already typed Perform shell expansions Expand aliases only</p><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">Complete words from shell history Reinstate matches omitted</p><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">List on first completion, insert on second Complete using patterns from line</p><p style="padding-left: 84pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Menu completion, no menu selection</p><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">Use existing list before generating new one Complete ignoring what’s after cursor</p><h1 style="padding-left: 5pt;text-indent: 0pt;line-height: 8pt;text-align: left;">-command- <span class="p">Word in command position</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-condition- <span class="p">Word in </span>[[ <i>... </i>]] <span class="p">condition</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-default- <span class="p">Word with no specific completion</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-equal- <span class="p">Word beginning with equals sign</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-first- <span class="p">Tried first, may set </span>_compskip</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-math- <span class="p">Inside arithmetic such as </span>(( <i>... </i>))</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-parameter-  <span class="p">Parameter with bare </span>$ <span class="p">in front</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-redirect- <span class="p">Word after redirection operator</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-subscript- <span class="p">Inside parameter subscript</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-tilde- <span class="p">Between </span>~ <span class="p">and first </span>/ <span class="p">of argument</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-value- <span class="p">Right hand side of assignment</span></h1><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Tags:</p><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">accounts <span class="p">For users­hosts style</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">all-expansions <span class="p">When expanding, everything at once</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">all-files <span class="p">All files rather than a subset</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">arguments <span class="p">Command arguments</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">arrays <span class="p">Names of array parameters </span>association-keys <span class="p">Keys of associative arrays </span>bookmarks <span class="p">Bookmarks for URLs, ZFTP, etc.</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">builtins <span class="p">Names of builtin commands </span>characters <span class="p">Character classes, stty characters </span>colormapids <span class="p">X colormap IDs</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;">colors <span class="p">Names of colors, usually X</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">commands <span class="p">External commands, subcommands</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">contexts <span class="p">Contexts in zstyle</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">corrections <span class="p">Possible approximations, corrections</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">cursors <span class="p">X cursor names</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">default <span class="p">Nothing specific in certain contexts </span>descriptions <span class="p">Used in format style for matches </span>devices <span class="p">Device special files</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;">directories <span class="p">Directories</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">directory-stack <span class="p">Entries in pushd directory stack</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">displays <span class="p">X displays</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;line-height: 10pt;text-align: left;">domains <span class="p">Network domain (DNS) names</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;line-height: 10pt;text-align: left;">globbed-files <span class="p">Names of files matched by pattern</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">groups <span class="p">UNIX groups</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">history-words <span class="p">Words from shell history</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">hosts <span class="p">Names of network hosts</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">indexes <span class="p">Indexes of arrays</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">jobs <span class="p">Shell jobs</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">interfaces <span class="p">Network interfaces (as from ifconfig)</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">keymaps <span class="p">ZLE keymaps</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">keysyms <span class="p">Names of X keysyms</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">libraries <span class="p">Names of system libraries</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">limits <span class="p">System resource limits</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">local-directories <span class="p">Subdirectories of current directories</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">manuals <span class="p">Names of manual pages</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">mailboxes <span class="p">E­mail folders</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">maps <span class="p">NIS maps etc.</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">messages <span class="p">Used in format style for messages</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">modifiers <span class="p">X modifiers</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">modules <span class="p">Shell modules etc.</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">my-accounts <span class="p">Own accounts, with users­hosts style </span>named-directories <span class="p">Directories named by a parameter </span>names <span class="p">Names of all sorts</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">newsgroups <span class="p">USENET newgroups</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">nicknames <span class="p">Nicknames of NIS maps</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">options <span class="p">Options to commands</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">original <span class="p">Original when correcting, expanding </span>other-accounts <span class="p">Other accounts with users­hosts style Tags continued:</span></h1><h1 style="text-indent: 0pt;text-align: left;">packages parameters</h1><h1 style="text-indent: 0pt;text-align: left;">path-directories paths</h1><h1 style="text-indent: 0pt;text-align: left;">pods ports prefixes printers processes</h1><h1 style="text-indent: 0pt;line-height: 10pt;text-align: left;">processes-names</h1><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 100pt;text-indent: 0pt;text-align: left;">RPM, Debian etc. packages Names of shell parameters Directories under $cdpath</p><p style="padding-left: 100pt;text-indent: 0pt;text-align: left;">Used with assorted directory paths Perl documentation</p><p style="padding-left: 100pt;text-indent: -5pt;text-align: center;">TCP, UDP prots URL etc. prefixes</p><p style="padding-left: 100pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Names of print queues</p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Command contexts: any command name plus the special contexts: <span class="s14">expansions </span><span class="s22">Individual expansions instead of all</span></p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 10pt;text-align: left;">PIDs</p><p style="padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><span class="s8" style=" background-color: #E5E5E5;">-array-value- </span><span class="s10">Element in array</span></p><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">file-descriptors <span class="p">Numbers of open file descriptors</span></h1><p style="padding-left: 5pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Names of processes in killall</p><p style="text-indent: 0pt;text-align: left;"><br/></p><h1 style="text-indent: 0pt;text-align: left;">sequences sessions signals strings styles suffixes tags targets time-zones types</h1><h1 style="text-indent: 0pt;text-align: left;">urls users values variant visuals warnings widgets windows</h1><h1 style="text-indent: 0pt;line-height: 10pt;text-align: left;">zsh-options</h1><p style="text-indent: 0pt;text-align: left;"/><p style="padding-top: 5pt;padding-left: 100pt;text-indent: 0pt;text-align: left;">MH sequences etc. ZFTP sessions etc.</p><p style="padding-left: 100pt;text-indent: 0pt;text-align: left;">System signal names, HUP etc. Assorted strings, e.g. second arg of cd Styles in zstyle</p><p style="padding-left: 100pt;text-indent: 0pt;text-align: left;">Filename extensions Tags used with rpm etc. Targets inside Makefiles</p><p style="padding-left: 100pt;text-indent: 0pt;text-align: left;">Time zones with TZ parameter etc. Assorted types of anything</p><p style="padding-left: 100pt;text-indent: 0pt;text-align: left;">Used with web addresses Names of users</p><p style="padding-left: 100pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Values in lists</p><p style="padding-left: 100pt;text-indent: 0pt;text-align: left;">Used when picking variant of command X visuals</p><p style="padding-left: 100pt;text-indent: 0pt;text-align: left;">Used in the format style for warnings</p><h1 style="padding-top: 5pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">fake-files <i>dir</i>:<i>names </i><span class="p">add </span><i>names </i><span class="p">in </span><i>dir </i>fake-parameters <span class="p">Params to complete even if not yet set </span>file-patterns <i>pattern</i>:<i>tag </i><span class="p">generates files with tag </span>file-sort <span class="p">size, links, time, access, inode, reverse </span>filter <span class="p">In LDAP, attributes for filtering</span></h1><h1 style="padding-left: 3pt;text-indent: 0pt;line-height: 10pt;text-align: left;">force-list <span class="p">Just list matches: </span>always <span class="p">or number</span></h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;">format <span class="p">Desc string, </span>%d <span class="p">shows specific desc</span></h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;"><span class="s20"></span>glob <span class="p">Attempt glob expansion (</span>_expand<span class="p">)</span></h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: justify;"><span class="s20"></span>global <span class="p">Global aliases (</span>_expand_alias<span class="p">) </span>group-name <span class="p">Name groups shown together by tag </span>group-order <span class="p">Order groups shown together by tag </span>groups <span class="p">Unix groups, as per </span>/etc/group</h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;">hidden <span class="p">Complete but don’t list matches</span></h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;">hosts <span class="p">List of host names, as </span>/etc/hosts hosts-ports <span class="p">List of </span><i>hosts</i>:<i>ports </i><span class="p">for TCP/UDP </span>ignore-line <span class="p">Don’t complete words already present</span></h1><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 2pt;text-indent: 0pt;line-height: 8pt;text-align: left;">Styles continued:</p><p style="padding-top: 5pt;padding-left: 30pt;text-indent: 0pt;line-height: 106%;text-align: left;">Alternative for <span class="h1">~/.muttrc </span>Prefer job numbers instead of name Retain list of matches (<span class="h1">_oldlist</span>)</p><h1 style="text-indent: 0pt;line-height: 106%;text-align: left;">muttrc numbers old-list</h1><h1 style="text-indent: 0pt;line-height: 107%;text-align: left;">old-matches old-menu original packageset path</h1><h1 style="text-indent: 0pt;text-align: left;">pine-directory ports</h1><h1 style="text-indent: 0pt;text-align: left;">prefix-hidden prefix-needed preserve-prefix range</h1><p class="s20" style="text-indent: 0pt;line-height: 10pt;text-align: left;"><b>regular</b></p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 30pt;text-indent: 0pt;line-height: 107%;text-align: left;">Use old match list (<span class="h1">_all_matches</span>) Keep list for meus (<span class="h1">_oldlist</span>)</p><p style="padding-left: 30pt;text-indent: 0pt;line-height: 107%;text-align: left;">Add original match for approx/correct For arguments of Debian <span class="h1">dpkg</span></p><p style="padding-left: 30pt;text-indent: 0pt;line-height: 106%;text-align: left;">For X colors, path to <span class="h1">rgb.txt </span>Directory for PINE mailboxes TCP/IP services (<span class="h1">/etc/services</span>) Hide common prefix e.g. in options</p><p style="padding-left: 30pt;text-indent: 0pt;text-align: left;">Common prefix must by typed by user Initial file patterns to leave alone Range of words in history to consider Complete regular aliases</p><p style="padding-left: 100pt;text-indent: 0pt;line-height: 8pt;text-align: left;">Names of zsh widgets</p><p style="padding-left: 100pt;text-indent: 0pt;text-align: left;">IDs of X windows Shell options</p><p style="text-indent: 0pt;text-align: left;"><br/></p><h1 style="text-indent: 0pt;text-align: left;">accept-exact</h1><p class="s20" style="text-indent: 0pt;text-align: left;"><b>add-space ambiguous assign-list</b></p><h1 style="text-indent: 0pt;line-height: 106%;text-align: left;">auto-description avoid-completer cache-path</h1><h1 style="text-indent: 0pt;line-height: 106%;text-align: left;">cache-policy call-command command command-path commands complete completer</h1><p class="s20" style="text-indent: 0pt;line-height: 107%;text-align: left;"><b>condition disabled disable-stat domains expand</b></p><h1 style="text-indent: 0pt;line-height: 10pt;text-align: left;">fake</h1><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Styles (<span class="s20"></span>indicates on by default):</p><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">ignore-parents parent <span class="p">or </span>pwd<span class="p">: ignore parent dirs </span>ignored-patterns <span class="p">If pattern matched, don’t complete </span>insert <span class="p">All matches at once (</span>_all_matches<span class="p">) </span>insert-ids <span class="p">Convert </span>%<i>cmd </i><span class="p">to unambiguous PID </span>insert-tab <span class="p">Insert TAB if no non­whitespace yet</span></h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;"><span class="s20"></span>remote-access <span class="p">Control remote access for e.g. </span>_cvs remove-all-dups <span class="p">Never complete duplicates in history </span>select-prompt <span class="p">Prompt shown in menu selection </span>select-scroll <span class="p">Lines to scroll in menu selection </span>separate-sections <span class="p">Manual sections used as part of tag</span></h1><p style="padding-left: 100pt;text-indent: 0pt;line-height: 8pt;text-align: left;">Accept exact match even if ambiguous</p><p style="padding-left: 100pt;text-indent: 0pt;text-align: left;">Add a space after expansions</p><h1 style="padding-left: 7pt;text-indent: 0pt;text-align: left;"><a name="a20">insert- unambiguous</a></h1><p style="padding-left: 32pt;text-indent: 0pt;text-align: left;">Only menu complete when no prefix to insert</p><h1 style="padding-left: 5pt;text-indent: 0pt;line-height: 10pt;text-align: left;">show-completer <span class="p">Show progress of completers as msg</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;line-height: 9pt;text-align: left;">single-ignored <span class="p">Control </span>_ignore <span class="p">when single match</span></h1><p class="s23" style="padding-left: 100pt;text-indent: 0pt;line-height: 8pt;text-align: left;">Cursor after ambiguous path component <span class="h1">keep-prefix </span><span class="p">Try to keep expandable prefix</span></p><h1 style="padding-left: 38pt;text-indent: 0pt;line-height: 8pt;text-align: left;">sort <span class="p">Override sorting of matches</span></h1><h1 style="padding-left: 100pt;text-indent: 0pt;text-align: left;">PATH<span class="p">­style list on assignment</span></h1><p style="padding-left: 100pt;text-indent: 0pt;text-align: left;">String for option descs without specific</p><h1 style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">last-prompt <span class="p">Return to last editing line if possible</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;line-height: 8pt;text-align: left;">list <span class="p">Control listing when history completing</span></h1><h1 style="padding-top: 2pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">special-dirs <span class="p">Add </span>. <span class="p">and </span>.. <span class="p">to file list</span></h1><h1 style="padding-left: 3pt;text-indent: 0pt;line-height: 8pt;text-align: left;"><a name="a21">squeeze-slashes fo//ba </a><span class="p">is </span>fo/ba <span class="p">not </span>fo/*/ba</h1><h1 style="padding-left: 100pt;text-indent: 0pt;line-height: 11pt;text-align: left;"><span class="s23">Avoid completer with </span>_<u>all_matches</u> list-colors <span class="p">Color specs like </span>LS_COLORS</h1><h1 style="padding-top: 2pt;padding-left: 38pt;text-indent: 0pt;line-height: 9pt;text-align: left;">stop <span class="p">Pause before looping shell history</span></h1><p style="padding-left: 100pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Path to top of various caches</p><p style="padding-left: 100pt;text-indent: 0pt;line-height: 106%;text-align: left;">Function to decide on cache rebuilding If true, use external (slow) command External command to call (+args) Override <span class="h1">PATH </span>for commands to match Default sys init commands (start etc.) Complete aliases (<span class="h1">_expand_alias</span>) The list of completers to try (see above) Delay insertion of matches (_list) Disabled aliases (<span class="h1">_expand_alias</span>) If set, _cvs uses ls instead of zsh/stat Net domains (<span class="h1">/etc/resolv.conf</span>)</p><h1 style="padding-top: 1pt;padding-left: 3pt;text-indent: 0pt;text-align: left;"><span class="s20"></span>list-grouped <span class="p">Grouped listing shown more compactly </span>list-packed <span class="p">All matches shown more compactly </span>list-prompt <span class="p">Prompt when scrolling completions </span>list-rows-first <span class="p">Increment rows first in lists</span></h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;">list-suffixes <span class="p">Show ambiguous bits of multiple paths </span>list-separator <span class="p">Separates description in verbose list </span>local <i>host</i>:<i>path</i>:<i>dir </i><span class="p">for URLs as files </span>mail-directory <span class="p">Directory for mailbox files (</span>~/Mail<span class="p">) </span>match-original <span class="p">Add </span>* <span class="p">when matching (</span>_match<span class="p">) </span>matcher <span class="p">Apply match control syntax per tag </span>matcher-list <span class="p">Apply match control syntax globally </span>max-errors  <span class="p">Max errors allowed in approx/correct</span></h1><h1 style="padding-top: 1pt;padding-left: 4pt;text-indent: 0pt;text-align: justify;">strip-comments <span class="p">Remove display name from email addr</span></h1><h1 style="padding-left: 4pt;text-indent: 0pt;text-align: justify;">subst-globs-only <span class="p">Only take expansions from globbing</span></h1><p class="s20" style="padding-left: 4pt;text-indent: 0pt;text-align: justify;"><b>substitute </b><span class="p">When expanding, first try subst</span></p><h1 style="padding-left: 4pt;text-indent: 0pt;text-align: justify;"><span class="s20"></span>suffix                       <span class="p">Only expand path with no </span>/suffix</h1><h1 style="padding-left: 4pt;text-indent: 0pt;text-align: justify;">tag-order <span class="p">Preference order for tags in context</span></h1><h1 style="padding-left: 4pt;text-indent: 0pt;text-align: justify;">urls <span class="p">Determine where URLs are taken from </span>use-cache <span class="p">Control caching for various commands </span>use-compctl <span class="p">Use </span>comptl<span class="p">­style completions</span></h1><h1 style="padding-left: 4pt;text-indent: 0pt;text-align: justify;">use-perl <span class="p">Use simpler Perl code for </span>_make</h1><h1 style="padding-left: 4pt;text-indent: 0pt;text-align: justify;">users <span class="p">List of user names</span></h1><p class="s25" style="padding-left: 4pt;text-indent: 0pt;text-align: justify;"><span class="h1">users-hosts              </span><span class="p">List of </span>user<b>@</b>host<span class="s27"> </span><span class="p">possibilities</span></p><p class="s25" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: justify;"><span class="h1">users-hosts-ports </span><span class="p">List of </span>user<b>@</b>host<span class="h1">:</span><span class="s3">port</span></p><h1 style="padding-left: 100pt;text-indent: 0pt;line-height: 9pt;text-align: left;"><span class="s28">For </span>prefix<span class="p">, </span>suffix <span class="p">in multiple parts </span>max-matches-width <span class="p">Cols to reserve for matches (not desc)</span></h1><p class="s20" style="padding-left: 10pt;text-indent: 0pt;line-height: 9pt;text-align: left;"><b>verbose </b><span class="p">Verbose output e.g. option descriptions</span></p><p class="s3" style="padding-left: 100pt;text-indent: 0pt;text-align: left;"><span class="p">Add </span>value<b>:</b>desc <span class="p">fake completions</span></p><h1 style="padding-top: 1pt;padding-left: 11pt;text-indent: 0pt;text-align: left;">menu <span class="p">Use menu completion</span></h1><h1 style="padding-top: 1pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">word <span class="p">Line changes based on current word</span></h1><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Using <span class="h1">_arguments </span>for parsing standard command arguments: Three arguments give argument/option selector, message to output, action to take. Examples:</p><h1 style="padding-left: 5pt;text-indent: 0pt;line-height: 107%;text-align: left;">1:msg:_comp <span class="p">First arg; show </span>msg<span class="p">, exec </span>_comp 1::msg:_comp <span class="p">Same for optional argument</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;line-height: 10pt;text-align: left;">:msg:_comp <span class="p">Arg number inferred from position</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">*:msg:_comp <span class="p">Any of the remaining args (“rest args”)</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">*::msg:_comp words <span class="p">etc. set to normal args</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">*:::msg:_comp <span class="p">… set to args for this chunk</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-foo  <span class="p">Complete option </span>-foo</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">+foo <span class="p">Complete option </span>+foo</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-+foo <span class="p">Complete </span>-foo <span class="p">or </span>+foo</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">*-foo <span class="p">Option may occur multiple times</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-foo-:esg:_comp <span class="p">Option has arg in same word</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-foo+:msg:_comp <span class="p">Option has arg in same or next word</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-foo=:msg:_comp <span class="p">Option arg </span>-foo=<i>bar </i><span class="p">or </span>-foo <i>bar</i></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-foo=-:msg:_comp <span class="p">Option arg is </span>-foo=<i>bar </i><span class="p">only</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-foo[desc] <span class="p">Option has description </span>desc</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">*:*pat:msg:_comp <span class="p">Complete words up to pat</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">*:*pat::msg:_comp <span class="p">Modify </span>words <span class="p">etc. for args</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">(-goo -boo)-foo -foo <span class="p">excludes </span>-goo<span class="p">, </span>-boo</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">(*)-foo -foo <span class="p">excludes rest args as matches</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">(:)-foo -foo <span class="p">excludes normal args</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">(-)-foo -foo <span class="p">excludes all options</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">!-foo -foo <span class="p">should not be completed</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">*:msg:&lt;space&gt; <span class="p">Show message but don’t complete</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">*:msg:(a b) <span class="p">Matches are listed items</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">*:msg:((a\:dsc)) <span class="p">Matches with descriptions</span></h1><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><span class="h1">*:msg:-&gt;</span><span class="s3">string </span>Array <span class="h1">state </span>has <span class="s3">string </span>if matched</p><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">*:msg:{<i>code</i>} <span class="p">Shell </span><i>code </i><span class="p">generates matches</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">*:msg:= action  <span class="p">Insert dummy argument first</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">*:msg:_comp arg <span class="p">Call </span>_comp <span class="p">with additional args</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">*:msg: _comp arg <span class="p">Call </span>_comp <span class="p">with only given arg</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-a – set1 -c - … <span class="p">Common and specific completion sets</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">- &quot;(set1)&quot; -c - … <span class="p">Mutually exclusive sets</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-s <span class="p">Allow combined single letters</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-sw <span class="p">Same, even if option has args</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">-- <span class="p">Guess options by using </span>--help</h1><p class="s3" style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><b>-- -i </b>pat <span class="p">Same, ignoring options matching </span>pat</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 7pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">Examples of other utility functions:</p><h1 style="padding-left: 10pt;text-indent: -10pt;text-align: left;">_alternative \ ‘users:user:_users’ \ ‘hosts:host:_hosts</h1><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;"/><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Either users or hosts (tag, description, action)</p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 108%;text-align: left;"><span class="s8" style=" background-color: #E5E5E5;">_describe </span><span class="s7" style=" background-color: #E5E5E5;">setdesc arr1 </span><span class="s8" style=" background-color: #E5E5E5;">--</span><span class="s9"> </span><span class="s10">Associate descriptions with completions; </span><span class="s11">arr1 </span><span class="s10">contains </span><span class="s11">completion</span><span class="s9">:</span><span class="s11">description </span><span class="s10">entries</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><span class="s8" style=" background-color: #E5E5E5;">_message </span><span class="s7" style=" background-color: #E5E5E5;">text-msg                                                            </span></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Don’t complete, just output <span class="s3">text-msg</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 108%;text-align: left;"><span class="s8" style=" background-color: #E5E5E5;">_multi_parts </span><span class="s7" style=" background-color: #E5E5E5;">sep array</span><span class="s11"> </span><span class="s10">Complete by parts with separator </span><span class="s11">sep</span><span class="s10">, </span><span class="s11">$array </span><span class="s10">contains full matches.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 108%;text-align: justify;"><span class="s8" style=" background-color: #E5E5E5;">_path_files</span><span class="s9"> </span><span class="s10">Complete files including partial paths; </span><span class="s9">_files </span><span class="s10">is smart front end; options </span><span class="s9">-f </span><span class="s10">all files (default), </span><span class="s9">-g </span><span class="s11">pat </span><span class="s10">matching </span><span class="s11">pat </span><span class="s10">(with</span></p><h1 style="padding-left: 5pt;text-indent: 0pt;line-height: 109%;text-align: left;">_files <span class="p">maybe directories too), </span>-/ <span class="p">directories only, </span>-W <i>dirs </i><span class="p">paths in which files are found, </span>-F <i>files </i><span class="p">files to ignore, overrides </span>ignored-patterns</h1><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 108%;text-align: left;"><span class="s8" style=" background-color: #E5E5E5;">_sep_parts </span><span class="s7" style=" background-color: #E5E5E5;">arr1 sep1 arr2 sep2 </span><span class="s8" style=" background-color: #E5E5E5;">……</span><span class="s9"> </span><span class="s10">Elements from </span><span class="s11">arr1</span><span class="s10">, then separator, then elements from </span><span class="s11">arr2</span><span class="s10">, etc.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 108%;text-align: left;"><span class="s8" style=" background-color: #E5E5E5;">_values -s </span><span class="s7" style=" background-color: #E5E5E5;">sep desc spec1 spec2 </span><span class="s4" style=" background-color: #E5E5E5;">…</span><span class="s10"> Complete multiple values separated by </span><span class="s11">sep</span><span class="s10">; values are given by </span><span class="s11">spec</span><span class="s10">s, each of which is similar to </span><span class="s9">_arguments </span><span class="s10">option spec without leading </span><span class="s9">-</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><h1 style="padding-left: 16pt;text-indent: -10pt;text-align: left;"><a name="a22">_wanted thing expl ‘my things’ \ compadd mything1 mything2 …</a></h1><p style="padding-left: 5pt;text-indent: 0pt;line-height: 109%;text-align: left;">Typical way of adding completions <span class="h1">mything1 </span>etc. with tag <span class="h1">things </span>and description <span class="h1">my things</span>; <span class="h1">expl </span>should be local variable. Use single tag, c.f. <span class="h1">_tags </span>and <span class="h1">_requested</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><span class="s8" style=" background-color: #E5E5E5;">_tags </span><span class="s7" style=" background-color: #E5E5E5;">tag1 tag2                                                                </span></p><p style="padding-top: 5pt;text-indent: 0pt;text-align: left;"><span class="s8" style=" background-color: #E5E5E5;">_requested </span><span class="s7" style=" background-color: #E5E5E5;">tag                                                                  </span></p><p style="text-indent: 0pt;text-align: left;">Implement loops over different tags</p><p style="text-indent: 0pt;text-align: left;"><br/></p><h1 style="text-indent: 0pt;text-align: left;">_all_labels <i>tag </i>expl <i>descr compcommand</i></h1><h1 style="text-indent: 0pt;text-align: left;">_next_label <i>tag </i>expl <i>descr</i></h1><p style="text-indent: 0pt;text-align: left;">Implement loops over different labels for each <span class="h1">_requested </span>tag</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1" style="padding-top: 6pt;padding-left: 88pt;text-indent: 0pt;text-align: left;"><a name="a23">Zsh line editor (zle)</a></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Builtin widgets, emacs binding, vicmd binding, viins binding;</p><p style="padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">€ denotes escape key:</p><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="a24">accept-and-hold €a accept-and-infer-next-history accept-and-menu-complete</a></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">accept-line ^M ^M ^M accept-line-and-down-history ^O argument-base</h1><h1 style="padding-left: 5pt;text-indent: 0pt;line-height: 10pt;text-align: left;">backward-char ^B</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">backward-delete-char ^H backward-delete-word</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">backward-kill-line</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">backward-kill-word ^W</h1><h1 style="padding-left: 5pt;text-indent: 0pt;line-height: 7pt;text-align: left;">backward-word €b</h1><h1 style="padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">execute-last-named-cmd €z</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">execute-name-cmd €x expand-cmd-path</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">expand-history €!</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">expand-or-complete ^I ^I expand-or-complete-prefix</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">expand-word ^X*</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">forward-char ^F</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">forward-word €f</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">get-line €g</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">gosmacs-transpose-chars history-beginning-search- backward</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">history-beginning-search- forward</h1><h1 style="padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">redisplay ^R ^R</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">redo</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">reset-prompt</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">reverse-menu-complete</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">run-help €h</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">self-insert <i>... ...</i></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="a25">self-insert-unmeta €^M</a></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">send-break ^G</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">set-mark-command ^@</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">spell-word €s</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">set-local-history</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">transpose-chars ^T</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">transpose-words €t undefined-key</h1><h1 style="padding-left: 5pt;text-indent: 0pt;line-height: 10pt;text-align: left;">undo ^_</h1><h1 style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">beep</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">beginning-of-buffer-or-history €&lt; beginning-of-history</h1><h1 style="padding-left: 5pt;text-indent: 0pt;line-height: 7pt;text-align: left;">beginning-of-line ^A</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">history-incremental-search- backward</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">history-incremental-search- forward</h1><h1 style="padding-left: 5pt;text-indent: 0pt;line-height: 10pt;text-align: left;">^R</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">^Xr</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">^S</h1><h1 style="padding-left: 5pt;text-indent: 0pt;line-height: 10pt;text-align: left;">^Xs</h1><h1 style="padding-left: 5pt;text-indent: 0pt;line-height: 10pt;text-align: left;">universal-argument</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">up-case-word €u</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">up-history ^p</h1><h1 style="padding-left: 5pt;text-indent: 0pt;line-height: 10pt;text-align: left;">up-line-or-history ^p k <i>up</i></h1><h1 style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">beginning-of-line-hist</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">capitalize-word €c</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">clear-screen ^L ^L ^L complete-word</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">copy-prev-word €^_</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">copy-prev-shell-word</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">copy-region-as-kill €w delete-char</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">delete-char-or-list ^D delete-word</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">describe-key-briefly</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">digit-argument                                      €0<i>.. </i>1<i>..</i>9</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">down-case-word                                      €l</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">down-history ^n</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">down-line-or-history ^n j <i>down</i></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">down-line-or-search emacs-backward-word emacs-forward-word</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">end-of-buffer-or-history €&gt; end-of-history</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">end-of-line ^E</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">end-of-line-hist end-of-list</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">exchange-point-and-mark ^X^X</h1><h1 style="padding-left: 3pt;text-indent: 0pt;line-height: 10pt;text-align: left;">history-search-backward €p</h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;">history-search-forward €n</h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;">infer-next-history ^x^n</h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;">insert-last-word €_</h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;">kill-buffer ^X^K</h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;">kill-line ^K</h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;">kill-region</h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;">kill-whole-line ^U</h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;">kill-word €d</h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;">list-choices €^d ^d ^d</h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;">list-expand ^Xg ^G ^G magic-space</h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;">menu-complete</h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;">menu-expand-or-complete</h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;">neg-argument €-</h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;">overwrite-mode ^X^O pound-insert #</h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;">push-input</h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;">push-line €q</h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;">push-line-or-edit</h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;">quoted-insert ^V</h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;">quote-line €&#39;</h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;">quote-region €”</h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;">recursive-edit</h1><h1 style="padding-left: 5pt;text-indent: 0pt;line-height: 10pt;text-align: justify;">up-line-or-search</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-add-eol A</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-add-next a</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-backward-blank-word B</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-backward-char h ^H <i>left</i></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-backward-delete-char X  ^H vi-backward-kill-word ^W vi-backward-word b</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">vi-beginning-of-line vi-caps-lock-panic</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-change c</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-change-eol C</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-change-whole-line S</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-cmd-mode ^XV €</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-delete d</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-delete-char x</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">vi-digit-or-beginning-of-line 0</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-down-line-or-history +</h1><p style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">Builtin widgets cont.:</p><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;"><a name="a26">vi-end-of-line $</a></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-fetch-history G</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">vi-find-next-char ^X^F f vi-find-next-char-skip t</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-find-prev-char F</h1><p style="text-indent: 0pt;text-align: left;"><br/></p><h1 style="padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-find-prev-char-skip T</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-first-non-blank ^</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-forward-blank-word W</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-forward-blank-word-end E</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-forward-char l <i>rght</i></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-forward-word w</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-forward-word-end e vi-goto-column €| | vi-goto-mark `</h1><h1 style="padding-left: 5pt;text-indent: 0pt;line-height: 10pt;text-align: justify;">vi-goto-mark-line ˙</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-history-search-backward /</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-history-search-forward ?</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-indent &gt;</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-insert i</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-insert-bol I</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-join ^X^J J</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-kill-eol D</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-kill-line ^U</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">vi-match-bracket ^X^B % vi-open-line-above O</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">vi-open-line-below o vi-oper-swap-case</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-pound-insert</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-put-after P</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-put-before p</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-quoted-insert ^V</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-repeat-change .</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-repeat-find ;</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-repeat-search N</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-replace R</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-replace-chars r</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">vi-rev-repeat-find , vi-rev-repeat-search</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-set-buffer “</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-set-mark m</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-substitute s</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-swap-case ~</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-undo-change u</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-unindent &lt;</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-up-line-or-history -</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-yank y</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-yank-eol Y</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">vi-yank-whole-line</h1><h1 style="padding-top: 5pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">what-cursor-position ^X= where-is</h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;">which-command €?</h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;">yank ^y</h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;">yank-pop €y</h1><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 3pt;text-indent: 0pt;line-height: 109%;text-align: left;">Special parameters inside user­defined widgets; <span class="s20"></span>indicates readonly:</p><h1 style="padding-left: 3pt;text-indent: 0pt;line-height: 10pt;text-align: left;">BUFFER <span class="s28">Entire editing buffer</span></h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;">BUFFERLINES <span class="p">Number of screen lines for full buffer</span></h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;"><span class="s20"></span>CONTEXT start<span class="p">, </span>cont<span class="p">, </span>select<span class="p">, </span>vared CURSOR <span class="p">Index of cursor position into </span>$BUFFER CUTBUFFER <span class="p">Last item to be killed</span></h1><h1 style="padding-left: 3pt;text-indent: 0pt;line-height: 10pt;text-align: left;">HISTNO <span class="p">Currently history line being retrieved</span></h1><p class="s20" style="padding-left: 3pt;text-indent: 0pt;text-align: left;"><b>KEYMAP </b><span class="p">Currently selected keymap</span></p><p class="s20" style="padding-left: 3pt;text-indent: 0pt;text-align: left;"><b>KEYS </b><span class="p">Keys typed to invoke current widget</span></p><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;">killring <span class="p">Array of previously killed items, can resize</span></h1><p class="s20" style="padding-left: 3pt;text-indent: 0pt;text-align: left;"><b>LASTSEARCH </b><span class="p">Last search string in interactive search</span></p><p class="s20" style="padding-left: 3pt;text-indent: 0pt;text-align: left;"><b>LASTWIDGET </b><span class="p">Last widget to be executed</span></p><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;">LBUFFER <span class="p">Part of buffer left of cursor</span></h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;">MARK <span class="p">Index of mark position into </span>$BUFFER NUMERIC <span class="p">Numeric argument passed with widget</span></h1><p class="s20" style="padding-left: 3pt;text-indent: 0pt;text-align: left;"><b>PENDING </b><span class="p">Number of bytes still to be read</span></p><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;"><span class="s20"></span>PREBUFFER <span class="p">Input already read (no longer being edited) </span>PREDISPLAY <span class="p">Text to display before editable buffer </span>POSTDISPLAY <span class="p">Text to display after editable buffer </span>RBUFFER <span class="p">Part of buffer starting from cursor</span></h1><h1 style="padding-left: 3pt;text-indent: 0pt;line-height: 107%;text-align: left;">WIDGET <span class="p">Name of widget being executed </span>WIDGETFUNC <span class="p">Name of function implementing </span>$WIDGET WIDGETSTYLE <span class="p">Implementation style of completion widget Special characters in </span>bindkey <span class="p">strings:</span></h1><h1 style="padding-left: 3pt;text-indent: 0pt;line-height: 11pt;text-align: left;">\a <span class="p">Bell (alarm)</span></h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;">\b <span class="p">Backspace</span></h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;">\e<span class="p">, </span>\E <span class="p">Escape</span></h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;">\f <span class="p">Form feed</span></h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;">\n <span class="p">Newline</span></h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;">\r <span class="p">Carriage return</span></h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;">\t <span class="p">Tab (horizontal)</span></h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;">\v <span class="p">Tab (vertical)</span></h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;">\<i>nnn                       </i><span class="p">Octal character e.g </span>\081</h1><h1 style="padding-left: 3pt;text-indent: 0pt;text-align: left;">\x<i>nn </i><span class="p">Hexadecimal character eg. </span>\x41</h1><p style="padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><span class="h1">\M</span><span class="s3">x</span>, <span class="h1">\M-</span><span class="s3">x </span>Set 8<span class="s29">th </span>bit in character</p><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">\C<i>x</i><span class="p">, </span>\C-<i>x </i><span class="p">Control character e.g. </span>\C-a</h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">^<i>x </i><span class="p">Control character e.g. </span>^a <span class="p">(same as </span>^A<span class="p">)</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">^? <span class="p">Delete</span></h1><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">\\ <span class="p">Single backslash</span></h1><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Keymaps:</p><h1 style="text-indent: 0pt;text-align: justify;">emacs viins vicmd</h1><h1 style="text-indent: 0pt;line-height: 10pt;text-align: justify;">.safe</h1><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 84pt;text-indent: 0pt;text-align: left;">Like Emacs editor</p><p style="padding-top: 1pt;padding-left: 84pt;text-indent: 0pt;text-align: left;">Like Vi editor in insert mode Like Vi editor in command mode</p><h1 style="text-indent: 0pt;text-align: left;">bindkey &#39;^xt&#39; gosmacs-transpose-chars bindkey &#39;\e[2~&#39; overwrite-mode</h1><h1 style="text-indent: 0pt;text-align: left;">bindkey -M viins &#39;^u&#39; backward-kill-line bindkey -s &#39;^x^z&#39; &#39;\eqsuspend\n&#39;</h1><p style="text-indent: 0pt;text-align: left;"><br/></p><h1 style="text-indent: 0pt;text-align: left;">autoload -Uz replace-string zle -N replace-string bindkey &#39;\er&#39; replace-string</h1><h1 style="text-indent: 0pt;text-align: left;">zle -N replace-string replace-pattern bindkey &#39;\e%&#39; replace-pattern</h1><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 5pt;text-indent: 79pt;line-height: 221%;text-align: left;">Emergency keymap, not modifiable Examples of key binding:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">See <span class="h1">man zshcontrib </span>for supplied editing functions such as</p><h1 style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="a27">replace-string</a><span class="p">.</span></h1></body></html>
