<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Combining Qualifiers</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part241.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part243.htm">Next &gt;</a></p><p class="s35" style="padding-left: 42pt;text-indent: 0pt;text-align: left;"><a name="bookmark432">Combining Qualifiers</a></p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;line-height: 115%;text-align: left;">You can combine qualifiers inside the parentheses. The following example retrieves all execut- ables that are both readable and writable by you:</p><p class="s33" style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">echo *(*rw)</p><p style="padding-top: 8pt;padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">You can put a <span class="s33">^ </span>at any point in the pattern, not just at the start, to flip the sense, so the following example matches executables that are readable but not writable by you:</p><p class="s33" style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">echo *(*r^w)</p><p style="padding-top: 8pt;padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">The <span class="s33">^ </span>is a toggle, so another one flips the sense back to positive matching. You can also designate a list of alternatives by using commas. The following example matches both directories and executable regular files:</p><p class="s33" style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">echo *(/,*)</p><p style="padding-top: 8pt;padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">We haven’t yet mentioned what happens with symbolic links. Usually, symbolic links are treated as a special sort of file that you can select with the qualifier <span class="s33">@</span>. However, if you put in a</p><p class="s33" style="padding-left: 42pt;text-indent: 0pt;line-height: 115%;text-align: justify;">- <span class="p">(hyphen), qualifiers after it will follow symbolic links, so that </span>*(-*) <span class="p">matches all executables, including those reached by following one or more symbolic links. Like </span>^<span class="p">, this works as a toggle and can go anywhere in the list of patterns.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 42pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="504" height="1" alt="image" src="Image_201.png"/></span></p><p class="s21" style="padding-top: 4pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">■<span class="s23">Tip </span><span class="s19">Sometimes symbolic links don’t point to a real file. For example, if you execute ln -s /nonexistent</span></p><p class="s19" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;line-height: 119%;text-align: justify;">~/file, it creates a file in your home directory that points to a nonexistent file. Such links are referred to as “broken.” A broken symbolic link often arises when the target file is deleted. You can find all broken links with the special pattern *(-@). The - qualifier tells the shell to examine the type of whatever file is referenced by symbolic links, whenever they are found by the * pattern. The @ qualifier tells the shell to find only symbolic links. The only files that match both requirements are broken symbolic links, which don’t point to a real file. Thus, rm *(-@) removes all broken symbolic links from the current directory.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 42pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="504" height="1" alt="image" src="Image_202.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part241.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part243.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
