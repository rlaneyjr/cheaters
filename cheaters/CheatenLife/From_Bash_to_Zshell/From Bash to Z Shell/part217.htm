<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Pattern Matching</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part216.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part218.htm">Next &gt;</a></p><p class="s17" style="padding-top: 9pt;padding-left: 40pt;text-indent: 0pt;text-align: left;"><a name="bookmark407">Pattern Matching</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><h2 style="padding-top: 23pt;padding-left: 40pt;text-indent: 0pt;line-height: 88%;text-align: left;">M<span class="p">any beginning shell users shy away from learning how to take advantage of patterns in their everyday work, despite the fact that patterns are one of the most powerful features of the</span></h2><p style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">shell. Indeed, whatever your level of knowledge, we’d venture to say that you have used them already, perhaps most notably the * wildcard. In this chapter, we’ll show you many more patterns along the same lines. Using patterns for file matching is often called <i>globbing </i>by shell programmers. It’s a funny word (it’s derived from “global,” as in <i>global substitution</i>), but it does at least summarize this often-discussed procedure in a single term. We’ll use the word to describe the process of generating filenames from patterns.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="504" height="1" alt="image" src="Image_183.png"/></span></p><p class="s21" style="padding-top: 4pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">■<span class="s23">Note </span><span class="s19">The zsh manual refers to globbing as “Filename Generation” (type man zshexpn). In the bash</span></p><p class="s19" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">manual (man bash) it’s covered in the “Pattern Matching” section.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="504" height="1" alt="image" src="Image_184.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 6pt;padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">Matching filenames is not the only use of patterns, however. The shell uses the same form of pattern for other things, such as when comparing a string against a pattern. This is a useful thing to be able to do from scripts and functions. We’ll show you some examples of this in Chapter 13. Most of what we discuss in this chapter will be applicable to testing strings, although some patterns are designed only for files.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">We’ll divide up this chapter into patterns understood by both <span class="s33">bash </span>and <span class="s33">zsh</span>, patterns understood by <span class="s33">bash</span>, and those understood by <span class="s33">zsh</span>. The last of those three will be by far the longest; globbing is one of <span class="s33">zsh</span>’s real strong points. However, although the syntax is different, some of the advanced <span class="s33">bash </span>and <span class="s33">zsh </span>patterns can do similar things.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">A note about language: unless you tell it otherwise, the shell will generate names of directories just the same as it will other files. So when we talk about “files” we will usually mean anything with a name in the filesystem, including directories. We’ll usually say “regular files” when we mean the basic sort that have a <span class="s33">- </span>in the first column of their detailed <span class="s33">ls -l </span>listing.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part218.htm">Basic Globbing</a><a class="toc1" href="part219.htm">Matching a Single Character</a><a class="toc1" href="part220.htm">Matching a Restricted Range of Characters</a><a class="toc2" href="part221.htm">Picking the Right Range of Characters</a><a class="toc1" href="part222.htm">Quoting Pattern Characters</a><a class="toc0" href="part223.htm">Internationalization and Locales</a><a class="toc0" href="part224.htm">Globbing in Bash</a><a class="toc1" href="part225.htm">Extended Globbing</a><a class="toc1" href="part226.htm">Negative Pattern Matching</a><a class="toc1" href="part227.htm">Ignoring Patterns</a><a class="toc0" href="part228.htm">Globbing in Zsh</a><a class="toc1" href="part229.htm">Special Patterns in zsh</a><a class="toc2" href="part230.htm">Grouping Alternatives</a><a class="toc2" href="part231.htm">Recursive Searching</a><a class="toc2" href="part232.htm">Matching Numeric Ranges</a><a class="toc1" href="part233.htm">Extended Globbing in zsh</a><a class="toc2" href="part234.htm">Negated Matches</a><a class="toc2" href="part235.htm">Pattern Exceptions</a><a class="toc2" href="part236.htm">Multiple Matches</a><a class="toc2" href="part237.htm">Eliminating a Directory from a Recursive Pattern Match</a><a class="toc0" href="part238.htm">Glob Qualifiers in Zsh</a><a class="toc1" href="part239.htm">Single-Character Qualifiers</a><a class="toc2" href="part240.htm">File Types</a><a class="toc2" href="part241.htm">File Owners and Permissions</a><a class="toc1" href="part242.htm">Combining Qualifiers</a><a class="toc1" href="part243.htm">More Complicated Qualifiers: Numeric Arguments</a><a class="toc2" href="part244.htm">File Sizes</a><a class="toc2" href="part245.htm">File Timestamps</a><a class="toc2" href="part246.htm">Counting Links</a><a class="toc1" href="part247.htm">More Complicated Qualifiers: String Arguments</a><a class="toc2" href="part248.htm">Specifying the File Owner</a><a class="toc2" href="part249.htm">File Permissions (Complicated)</a><a class="toc1" href="part250.htm">Qualifiers for Ordering and Selecting</a><a class="toc2" href="part251.htm">Ordering Files</a><a class="toc1" href="part252.htm">Changing What Is Displayed Using Qualifiers</a><a class="toc1" href="part253.htm">Colon Modifiers as Qualifiers</a><a class="toc0" href="part254.htm">Globbing Flags in Zsh</a><a class="toc1" href="part255.htm">Case-Insensitive Matching</a><a class="toc0" href="part256.htm">Summary</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part216.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part218.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
