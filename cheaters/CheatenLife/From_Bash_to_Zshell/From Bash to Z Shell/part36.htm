<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Relative Pathnames and Your Current Directory</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part35.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part37.htm">Next &gt;</a></p><h4 style="padding-left: 42pt;text-indent: 0pt;text-align: left;"><a name="bookmark46">Relative Pathnames and Your Current Directory</a></h4><p style="padding-top: 6pt;padding-left: 42pt;text-indent: 0pt;line-height: 114%;text-align: left;">If you give a relative or absolute pathname as an argument to <span class="s33">cd</span>, that directory becomes the shell’s current directory. (This only changes the shell where you typed <span class="s33">cd</span>, not other shell processes.) Many Unix users simply say that <span class="s33">cd </span>“changes to” a directory.</p><p style="padding-left: 60pt;text-indent: 0pt;text-align: left;">With no argument, <span class="s33">cd </span>sets the current directory to your home directory.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 42pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="504" height="1" alt="image" src="Image_042.png"/></span></p><p class="s21" style="padding-top: 4pt;padding-left: 41pt;text-indent: 0pt;line-height: 114%;text-align: justify;">■<span class="s23">Definition </span><span class="s19">Each Unix user has a directory, somewhere in the filesystem, that belongs to that user. This is the user’s home directory. Many programs look for their setup and control files in a user’s home directory— and so does the shell, as we’ll see in the section “Startup Files, Login and Interactive Shells” in Chapter 5.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 42pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="504" height="1" alt="image" src="Image_043.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">Here are some examples of <span class="s33">cd </span>and pathnames. You can follow along, looking back at Figure 1-3 as we go:</p><p class="s33" style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">$  <b>cd  /bin</b></p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">$ <b>pwd</b></p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">/bin</p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">$ <b>ls</b></p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">cal date ls sh zsh</p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">$ <b>cd</b></p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">$ <b>pwd</b></p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">/u/alison</p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">$ <b>ls</b></p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">$ <b>ls -a</b></p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">. .. .bashrc .bash_profile .exrc</p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">$ <b>cd ..</b></p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">$ <b>pwd</b></p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">/u</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">As you might have guessed, the <span class="s33">pwd </span>command shows the absolute pathname of the shell’s current directory. (<span class="s33">pwd </span>stands for “print working directory.”) The first <span class="s33">cd </span>changed the current directory to <span class="s33">/bin</span>. Running <span class="s33">ls </span>shows that directory’s contents. Running <span class="s33">cd </span>with no arguments changes to this user’s home directory, which happens to be (on this system) at the absolute path <span class="s33">/u/alison</span>. We mentioned that many programs’ startup files are stored here. Most startup files’ names start with a dot (<span class="s33">.</span>), which tells <span class="s33">ls </span>that these files are “boring” and to “hide” them unless you give the <span class="s33">-a </span>(“all”) option to <span class="s33">ls</span>. Because Alison has only startup files in her home directory, plain <span class="s33">ls </span>outputs no names.</p><p style="padding-left: 59pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Here, the home directory is <span class="s33">/u/alison</span>; therefore, typing <span class="s33">cd .. </span>makes the current directory</p><p style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;line-height: 115%;text-align: justify;"><i>/u</i>. The name <span class="s33">.. </span>(two dots) always refers to the parent directory. (In this case, it would have been as quick to use the absolute pathname and type <span class="s33">cd /u</span>—but, in most cases, <span class="s33">cd .. </span>will be easier.)</p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: justify;">You’ll see two of the “hidden” entries in <i>every </i>directory: <span class="s33">. </span>(a single dot) and <span class="s33">.. </span>(two dots). Figure 1-4 shows this: a directory tree with these special entries. The dashed lines in the figure show where each special entry in each of these directories will take you. The <span class="s33">. </span>(dot) is used as</p><p class="s29" style="padding-top: 3pt;padding-left: 258pt;text-indent: 0pt;text-align: left;"><a name="bookmark69">CHAPTER 1 </a><span class="s28">■ </span>INTRODUCTION TO SH ELLS <span class="s27">19</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: justify;">an argument for commands that need to refer to the current directory. (There’s an example in the section “Command History,” later in this chapter.) We used <span class="s33">.. </span>(two dots) with the previous example; it’s the relative pathname of the parent directory.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 42pt;text-indent: 0pt;text-align: left;"><span><img width="288" height="356" alt="image" src="Image_044.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s13" style="padding-left: 40pt;text-indent: 0pt;text-align: left;">Figure 1-4. <span class="s32">Directories’ . and .. entries, and where they point</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: justify;">You can use these special entries just as you’d use any other directory entry. For instance, if your current directory is <i>other-dir </i>and you’d like to refer to the file <i>afile </i>in the parent directory, you can use the relative pathname <span class="s33">../afile</span>. (You could also use the absolute pathname</p><p class="s33" style="padding-left: 40pt;text-indent: 0pt;line-height: 10pt;text-align: justify;">/some-dir/afile<span class="p">, but the relative pathname is easier to type.)</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="504" height="1" alt="image" src="Image_045.png"/></span></p><p class="s21" style="padding-top: 4pt;padding-left: 40pt;text-indent: 0pt;line-height: 117%;text-align: left;">■<span class="s23">Note </span><span class="s19">One common mistake is trying to make a relative pathname to the parent directory by using the parent directory’s name. For instance, if your current directory is other-dir and you want to refer to afile in the parent directory, you can’t use some-dir/afile. This doesn’t work because a relative pathname always starts with an entry in the current directory. (The pathname some-dir/afile would refer to a subdirectory named some-dir. But, in this case, there is no subdirectory by that name!)</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="504" height="1" alt="image" src="Image_046.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 6pt;padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">Although the rules for pathnames are simple, it often takes new users a while to get really comfortable with writing them. Some practice at the start—hunting around the filesystem,</p><p class="s29" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark70"><span class="s27">20 </span></a>CHAPTER 1 <span class="s28">■ </span>I N TR ODUC TION TO SHELLS </p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 42pt;text-indent: 0pt;line-height: 115%;text-align: left;">trying various relative and absolute pathnames, and understanding why they work (or don’t work)—will repay you many times later as you’re using the system.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part35.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part37.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
