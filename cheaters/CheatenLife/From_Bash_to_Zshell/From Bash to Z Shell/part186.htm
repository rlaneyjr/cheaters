<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Symbolic Links</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part185.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part187.htm">Next &gt;</a></p><p class="s18" style="padding-left: 40pt;text-indent: 0pt;text-align: left;"><a name="bookmark351">Symbolic Links</a></p><p style="padding-top: 5pt;padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">Hard links have their limitations. For one thing, you can’t make hard links to a directory. For another, as we just pointed out, hard links to the same file have to be on the same filesystem.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">The symbolic link was invented to get around these limitations. It’s also called a soft link, to distinguish it from the hard link. You create a symbolic link with <span class="s33">ln -s</span>. Here’s a simple example:</p><p class="s29" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark384"><span class="s27">170 </span></a>CHAPTER 8 <span class="s28">■ </span>FILES AND DIRECTORIES </p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s33" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">% <b>echo You have my word on it. &gt;original.txt</b></p><p class="s33" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">%  <b>ln  -s  original.txt  link</b></p><p class="s33" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">%  <b>ls  -l</b></p><p class="s33" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">total 4</p><p class="s33" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">lrwxrwxrwx  1 pws  users 12 Aug 6 23:10 link -&gt; original.txt</p><p class="s33" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">-rw-r--r-- 1 pws users 23 Aug 6 23:10 original.txt</p><p class="s33" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">% <b>cat link</b></p><p class="s33" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">You have my word on it.</p><p style="padding-top: 8pt;padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">The new file is simply a pointer to the original. When we reference <span class="s33">link</span>, we find ourselves looking at the original file. The long directory listing for a symbolic link starts with <span class="s33">l</span>. The permissions after that aren’t useful and you should ignore them; the important permissions are the ones for the file the link is pointing to. The length of the link—the 12 just before the date and time—is simply the number of characters of the name being linked to.</p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">It’s quite useful to think of the link as simply a place to hold the name of the file pointed to, <span class="s33">original.txt</span>. So, for example, if you deleted <span class="s33">original.txt </span>the link would still be there, pointing at a file that no longer exists. If you tried to edit <span class="s33">link</span>, it would re-create the file <span class="s33">original.txt </span>when you saved any changes.</p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">There are a few times when the system doesn’t follow the link but uses it directly. You’ve seen one, <span class="s33">ls -l</span>. Another important case is when you delete the link. Then only the link is removed; whatever it points to isn’t touched. It’s the same if you use <span class="s33">mv </span>to rename a link; the link is modified, while what it points to stays put. However, if you copy a link with <span class="s33">cp</span>, then the contents are copied, so that the file you’re writing to will contain a separate copy of those contents, not just another pointer back to the original.</p><p style="padding-left: 59pt;text-indent: 0pt;line-height: 10pt;text-align: left;">As we’ve hinted, you can create symbolic links to directories. There’s a special option <span class="s33">-L </span>to</p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">ls <span class="p">to make it follow the link. Take this example:</span></p><p class="s33" style="padding-top: 8pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">%  <b>ln  -s  ~  myhome</b></p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">%  <b>ls  -l  myhome</b></p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">lrwxrwxrwx 1 pws users 27 Jan 11 18:45 myhome -&gt; /home/pws</p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">%  <b>ls  -lL  myhome</b></p><p class="s33" style="padding-top: 1pt;padding-bottom: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">total 116</p><table style="border-collapse:collapse;margin-left:39.5pt" cellspacing="0"><tr style="height:11pt"><td style="width:54pt"><p class="s49" style="padding-left: 2pt;text-indent: 0pt;line-height: 10pt;text-align: left;">drwx------</p></td><td style="width:47pt"><p class="s49" style="padding-right: 13pt;text-indent: 0pt;line-height: 10pt;text-align: right;">3 pws</p></td><td style="width:54pt"><p class="s49" style="padding-left: 13pt;text-indent: 0pt;line-height: 10pt;text-align: left;">users</p></td><td style="width:133pt"><p class="s49" style="padding-left: 17pt;text-indent: 0pt;line-height: 10pt;text-align: left;">4096 Jan 10 20:39 Desktop</p></td></tr><tr style="height:12pt"><td style="width:54pt"><p class="s49" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">drwx------</p></td><td style="width:47pt"><p class="s49" style="padding-right: 13pt;text-indent: 0pt;text-align: right;">3 pws</p></td><td style="width:54pt"><p class="s49" style="padding-left: 13pt;text-indent: 0pt;text-align: left;">users</p></td><td style="width:133pt"><p class="s49" style="padding-left: 17pt;text-indent: 0pt;text-align: left;">4096 Jan 5 20:51 Mail</p></td></tr><tr style="height:12pt"><td style="width:54pt"><p class="s49" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">drwxr-xr-x</p></td><td style="width:47pt"><p class="s49" style="padding-right: 13pt;text-indent: 0pt;text-align: right;">3 pws</p></td><td style="width:54pt"><p class="s49" style="padding-left: 13pt;text-indent: 0pt;text-align: left;">users</p></td><td style="width:133pt"><p class="s49" style="padding-left: 17pt;text-indent: 0pt;text-align: left;">4096 Dec 19 19:30 bin</p></td></tr><tr style="height:11pt"><td style="width:54pt"><p class="s49" style="padding-left: 2pt;text-indent: 0pt;line-height: 10pt;text-align: left;">drwxr-xr-x</p></td><td style="width:47pt"><p class="s49" style="padding-right: 13pt;text-indent: 0pt;line-height: 10pt;text-align: right;">16 pws</p></td><td style="width:54pt"><p class="s49" style="padding-left: 13pt;text-indent: 0pt;line-height: 10pt;text-align: left;">users</p></td><td style="width:133pt"><p class="s49" style="padding-left: 17pt;text-indent: 0pt;line-height: 10pt;text-align: left;">4096 Dec 19 19:42 src</p></td></tr></table><p style="padding-top: 8pt;padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">The file <span class="s33">myhome </span>provides a link to my home directory. You can use <span class="s33">myhome </span>just as part of a pathname, for example <span class="s33">myhome/Mail</span>. This always works, not just in the shell but anywhere you can give a path.</p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">The way relative pathnames are handled by symbolic links takes a little getting used to. Suppose we want to create a link in subdirectory <span class="s33">subdir </span>to <span class="s33">file </span>in the directory we’re in. You might think you’d do this:</p><p class="s33" style="padding-top: 7pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">#  Wrong!</p><p class="s33" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">%  <b>ln  -s  file  subdir/link</b></p><p class="s29" style="padding-top: 3pt;padding-left: 263pt;text-indent: 0pt;text-align: left;"><a name="bookmark385">CHAPTER 8 </a><span class="s28">■ </span>FILES AND D I RECTORIES <span class="s27">171</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 58pt;text-indent: 0pt;text-align: left;">You can see why that’s wrong if you remember two things:</p><p style="padding-top: 8pt;padding-left: 56pt;text-indent: 0pt;text-align: left;">• Symbolic links store a pointer to a filename as a string.</p><p style="padding-top: 8pt;padding-left: 66pt;text-indent: -10pt;line-height: 115%;text-align: left;">• When a link tries to find the referenced file, the system starts looking from the directory the link was in, not the current directory. Think about it—it has to, because otherwise symbolic links would refer to different files depending on where you accessed them from!</p><p style="padding-top: 7pt;padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">In this case, the string stored in <span class="s33">subdir/link </span>would be <span class="s33">file</span>. When you look at <span class="s33">subdir/link</span>, the system looks for <span class="s33">file </span>starting in <span class="s33">subdir</span>, and of course doesn’t find it, because it’s in the next directory up.</p><p style="padding-left: 58pt;text-indent: 0pt;line-height: 10pt;text-align: left;">What you need to do is this:</p><p class="s33" style="padding-top: 8pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">%  <b>ln  -s  ../file  subdir/link</b></p><p style="padding-top: 8pt;padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">It’s a little bizarre, because from the directory you’re in there is no <span class="s33">../file</span>. If you want to keep your mind from reeling, you could do it like this instead:</p><p class="s33" style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">% <b>cd subdir</b></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">%  <b>ln  -s  ../file  link</b></p><p style="padding-top: 8pt;padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">When you are sitting in the same directory in which you’re creating the link, it becomes much more obvious what the link is referring to. Of course, you can always use an absolute path, but that will stop working if you rename an intervening directory, while the commands above just rely on the file being in the parent directory, whatever it’s called.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part185.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part187.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
