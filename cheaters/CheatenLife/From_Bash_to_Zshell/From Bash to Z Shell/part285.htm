<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Requiring Prefixes</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part284.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part286.htm">Next &gt;</a></p><p class="s35" style="padding-left: 42pt;text-indent: 0pt;text-align: left;"><a name="bookmark506">Requiring Prefixes</a></p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;line-height: 115%;text-align: left;">Having the ignored matches completed as a fallback by <span class="s33">_ignored </span>leads to another use of <span class="s33">ignored-patterns</span>. Consider for a moment how completion handles files beginning with a dot by default. If you go to a directory such as your home directory containing lots of dot-files and try completion, the dot-files are not listed. However, if you type the initial dot and try completion again, the dot-files will be listed. To demonstrate:</p><p class="s33" style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">%  <b>ls  -a</b></p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">. .. .zlogin .zshrc Mail bin</p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;line-height: 115%;text-align: left;">%  <b>ls  </b>&lt;ctrl-d&gt; Mail/    bin/</p><p class="s33" style="padding-left: 41pt;text-indent: 0pt;line-height: 10pt;text-align: left;">%  <b>ls  .</b>&lt;ctrl-d&gt;</p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">.zlogin .zshrc</p><p style="padding-top: 8pt;padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: justify;">Using <span class="s33">_ignored </span>and <span class="s33">ignored-patterns</span>, you can replicate this behavior for the completion of other things. As an example, you might want to do this for functions whose names begin with <span class="s33">_</span>. Provided that you have <span class="s33">_ignored </span>somewhere in your list of completers, you can use this:</p><p class="s33" style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">zstyle &#39;:completion:*:functions&#39; ignored-patterns &#39;_*&#39;</p><p style="padding-top: 8pt;padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">By convention, all the functions for the completion system have names beginning with <span class="s33">_</span>, and since there are many of them, this can be a wise thing to do.</p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">In cases where all matches share a common prefix such as the <span class="s33">% </span>for jobs or the <span class="s33">- </span>before command options, the completion system defaults to requiring the prefix. This is done by simply checking for the prefix before adding matches and so does not rely on the <span class="s33">_ignored</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 42pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="226" height="1" alt="image" src="Image_216.png"/></span></p><p class="s14" style="padding-top: 5pt;padding-left: 53pt;text-indent: -12pt;line-height: 108%;text-align: left;">2. Tag labels and the tag-order style, mentioned in the section “Tag Ordering” in Chapter 15, also provide a means of doing this but in a more complex albeit more flexible way.</p><p class="s29" style="padding-top: 3pt;padding-left: 304pt;text-indent: 0pt;text-align: left;"><a name="bookmark534">CHAPTER 10 </a><span class="s28">■ </span>COMPLE TION <span class="s27">255</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">completer. It can be configured, however, using the <span class="s33">prefix-needed </span>style. To see how this works, create a couple of background jobs (see the section “Starting and Stopping Processes: Signals, Job Control” in Chapter 3) and then experiment with completion after <span class="s33">kill</span>. It will complete process IDs, but you have to type the prefix before jobs, options, or signals will be completed. Now try setting this style and see the effect it has:</p><p class="s33" style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">zstyle &#39;:completion:*&#39; prefix-needed false</p><p style="padding-top: 8pt;padding-left: 58pt;text-indent: 0pt;text-align: left;">If you want this effect to apply only to jobs, you can instead do this:</p><p class="s33" style="padding-top: 8pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">zstyle &#39;:completion:*:jobs&#39; prefix-needed false</p><p style="padding-top: 8pt;padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">Most people prefer to leave <span class="s33">prefix-needed </span>in its default state, but it can be useful to set it to <span class="s33">false </span>for the <span class="s33">_approximate </span>and <span class="s33">_correct </span>completers, if you use them. To see why, consider the possibility that you make a mistake in typing the prefix itself. In the following example, an underscore has been typed instead of a dash. We enable approximate completion first but completion is unable to correct the mistake:</p><p class="s33" style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">% <b>zstyle &#39;:completion:::::&#39; completer _complete _approximate</b></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">% <b>bzip2 _-dec</b>&lt;tab&gt;</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">No matches for: `files&#39;, `file to compress&#39;, or `corrections&#39;</p><p style="padding-top: 8pt;padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">Because the prefix itself was mistyped, options were not completed and approximate completion could not do its job. By setting the <span class="s33">prefix-needed </span>style to <span class="s33">false </span>for <span class="s33">_approximate </span>only, we allow this to work without affecting other completers:</p><p class="s33" style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">% <b>zstyle &#39;:completion::approximate*:*&#39; prefix-needed false</b></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">% <b>bzip2 _-dec</b>&lt;tab&gt;</p><p class="s67" style="padding-top: 1pt;padding-left: 49pt;text-indent: 0pt;text-align: left;">➤ <span class="s33">bzip2 --decompress</span></p><p style="padding-top: 8pt;padding-left: 58pt;text-indent: 0pt;text-align: left;">The extra <span class="s33">* </span>in the completer component of the context after <span class="s33">approximate </span>is there because</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">_approximate <span class="p">includes the number of errors being tried there. So the context string being looked up here will actually be</span></p><p class="s33" style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">:completion::approximate-1:bzip2::options</p><p style="padding-top: 8pt;padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">You may have noticed a similar problem with our use of the <span class="s33">ignored-patterns </span>style in our example for completing functions beginning with an underscore. The <span class="s33">_ignored </span>completer has to invoke <span class="s33">_approximate </span>if you want to be able to make corrections to ignored matches. A more efficient alternative is to exclude the <span class="s33">_alternative </span>completer in the context when you define the <span class="s33">ignored-patterns </span>style. In fact, it makes sense to limit the style to the <span class="s33">_complete </span>function. We do that by filling in the completer component of the style, which is highlighted in bold in the following example:</p><p class="s33" style="padding-top: 6pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">zstyle &#39;:completion::<b>complete</b>:*:functions&#39; ignored-patterns &#39;_*&#39;</p><p style="padding-top: 8pt;padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">Another style that applies when completing things that have a common prefix is <span class="s33">prefix-hidden</span>. When set, the prefix is not displayed with all the matches in completion lists. This can make the lists more compact but less clear.</p><p class="s29" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark535"><span class="s27">256 </span></a>CHAPTER 10 <span class="s28">■ </span>COMPLETION </p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part284.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part286.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
