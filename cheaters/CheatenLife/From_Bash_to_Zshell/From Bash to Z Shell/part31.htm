<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Simple Commands</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part30.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part32.htm">Next &gt;</a></p><h4 style="padding-left: 40pt;text-indent: 0pt;text-align: left;"><a name="bookmark41">Simple Commands</a></h4><p style="padding-top: 6pt;padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">Let’s try a couple of simple commands. Most Unix commands have a short name; you type the command name just after the prompt. Type <span class="s33">date</span>—which is the name of a program that shows the current date and time—then press Return. The shell should find that command, run it, and then give you another prompt. Here’s what your screen should look like; we’ll show the part you type in boldface and the computer’s response as plain text:</p><p class="s33" style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">$ <b>date</b></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">Sat Nov 20 09:05:19 MST 2004</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">$</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">If you make a typing mistake, what happens? The answer is: it depends on what you type and which shell you’re using. Give it a try: type <span class="s33">dtae </span>and press Return. In general, if the shell can’t find your command, it will output a message like <span class="s33">command  not  found</span>. Some shells have automatic spelling correction, though, like this example from the Z shell (zsh):</p><p class="s33" style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">zsh% <b>date</b></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">Sat Nov 20 09:09:11 MST 2004</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">zsh% <b>dtae</b></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">zsh: correct &#39;dtae&#39; to &#39;date&#39; [nyae]? <b>y</b></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">Sat Nov 20 09:09:27 MST 2004</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">(The <span class="s33">[nyae] </span>tells you that your answer can be one of the four single-letter choices: <i>n </i>for “no,” <i>y </i>for “yes,” <i>a </i>for “abort,” and <i>e </i>to let you edit the command.) You’ll find that shells are terse: they don’t say much more than they need to. This is partly because many shell users are experienced, and they don’t need much explanation to help them find out what’s wrong. Some shells—like <span class="s33">zsh</span>—let you customize most of the shell’s messages to say almost anything you want. You’ll learn more about all of this in Chapter 7.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: justify;">One thing that makes Unix commands so flexible is that you can modify the way they work. For instance, you can change their output format or the information they show. On many Unix systems, for example, <span class="s33">date </span>will output UTC (universal, or Greenwich Mean Time) if you add <span class="s33">-u </span>after the command name, separated by a space. The <span class="s33">-u </span>is an <i>option</i>; we’ll cover options soon:</p><p class="s29" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark58"><span class="s27">8 </span></a>CHAPTER 1 <span class="s28">■ </span>IN TR OD U C T IO N T O S H E LL S</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s33" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">$ <b>date</b></p><p class="s33" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">Sat Nov 20 09:11:13 MST 2004</p><p class="s33" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">$ <b>date -u</b></p><p class="s33" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">Sat Nov 20 16:11:24 UTC 2004</p><p class="s33" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">$</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 42pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="504" height="1" alt="image" src="Image_028.png"/></span></p><p class="s21" style="padding-top: 4pt;padding-left: 41pt;text-indent: 0pt;line-height: 111%;text-align: left;">■<span class="s23">Warning </span><span class="s19">Shells let you do things quickly; they’re powerful tools that don’t ask “Are you sure?” as often as graphical systems do. To avoid problems, take a moment to review what you typed before you press Return.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 42pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="507" height="1" alt="image" src="Image_029.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part30.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part32.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
