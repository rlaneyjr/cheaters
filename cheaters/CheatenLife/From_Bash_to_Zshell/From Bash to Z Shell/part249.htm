<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>File Permissions (Complicated)</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part248.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part250.htm">Next &gt;</a></p><p class="s18" style="padding-left: 42pt;text-indent: 0pt;text-align: left;"><a name="bookmark439">File Permissions (Complicated)</a></p><p style="padding-top: 5pt;padding-left: 42pt;text-indent: 0pt;line-height: 115%;text-align: left;">One of the most complicated qualifiers is the letter <span class="s33">f </span>(for file), which checks for file permissions; it offers more options than the letters <span class="s33">r</span>, <span class="s33">w</span>, <span class="s33">x</span>, etc. The argument is a string similar to those</p><p class="s29" style="padding-top: 3pt;padding-left: 280pt;text-indent: 0pt;text-align: left;"><a name="bookmark472">CHAPTER 9 </a><span class="s28">■ </span>PATTER N MATCHIN G <span class="s27">225</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">accepted by the command <span class="s33">chmod</span>. (Type <span class="s33">man chmod </span>to learn more.) The letters <span class="s33">u</span>, <span class="s33">g</span>, and <span class="s33">o </span>mean user, group, and other (not owner!), and the letters <span class="s33">r</span>, <span class="s33">w</span>, and <span class="s33">x </span>mean read, write, and execute permissions. A plus or minus precedes the user specification, used to test whether the type of access is present or absent. You can separate sets like this with commas, assuming the comma isn’t the delimiter you picked to separate the entire argument after the <span class="s33">f </span>qualifier. So:</p><p class="s33" style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">#  <span class="s32">All  files  for  which  the  owner  has  both  read  and  execute  permission.</span></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">echo *(f:u+rx:)</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;"># <span class="s32">The same, but also others don&#39;t have execute permission.</span></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">echo *(f:u+rx,o-x:)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part248.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part250.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
