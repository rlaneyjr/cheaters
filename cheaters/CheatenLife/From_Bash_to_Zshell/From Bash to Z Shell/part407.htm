<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Specifying Descriptions</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part406.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part408.htm">Next &gt;</a></p><p class="s35" style="padding-left: 42pt;text-indent: 0pt;text-align: left;"><a name="bookmark759">Specifying Descriptions</a></p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;line-height: 115%;text-align: left;">To specify descriptions for completion match listings, the <span class="s33">compadd </span>built-in has a couple of options: <span class="s33">-d </span>specifies the per-match descriptions and <span class="s33">-X </span>prints the explanations above groups of matches. You will find, however, that you never need to use the latter directly because the headings are all handled as part of the tag system covered in the section “Tags, Labels, and Descriptions” later in this chapter. It is also quite rare to need to use the <span class="s33">-d </span>option directly. The reason for this is that there are helper functions that make the task simpler.</p><p class="s29" style="padding-top: 3pt;padding-left: 223pt;text-indent: 0pt;text-align: left;"><a name="bookmark800">CHAPTER 15 </a><span class="s28">■ </span>W RIT ING COMP LET ION F UNCTI ON S <span class="s27">389</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">One such helper function is <span class="s33">_describe</span>. It is useful when all you want to do is complete a list of values, each with its own description. An example of such a situation is when completing subcommands for the <span class="s33">xauth </span>command. <span class="s33">xauth </span>allows you to manipulate authorization infor- mation used when connecting to X servers.</p><p class="s33" style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">_describe <span class="p">takes two arguments. The first is the description for all the group of matches. The second argument is a little bit like the last (action) component of an </span>_arguments <span class="p">specification. It is a list of matches and their corresponding descriptions with a colon separating matches from descriptions. So for </span>xauth <span class="p">subcommands, it would look something like this:</span></p><p class="s33" style="padding-top: 6pt;padding-left: 49pt;text-indent: -9pt;line-height: 115%;text-align: left;">_describe &#39;xauth command&#39; &#39;( add:add\ entry</p><p class="s33" style="padding-left: 49pt;text-indent: 0pt;line-height: 115%;text-align: left;">generate:use\ server\ to\ generate\ entry extract:extract\ entries\ into\ file nextract:numerically\ extract\ entries</p><p class="s33" style="padding-left: 40pt;text-indent: 0pt;line-height: 10pt;text-align: left;">)&#39;</p><p class="s33" style="padding-top: 8pt;padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">xauth <span class="p">actually has a few more subcommands than that, but in the interests of brevity we have left them out. Note how the list is contained within parentheses. Without them, the second argument is taken to be the name of an array. The array contains the list of matches, again with their descriptions. So the following is equivalent to the above:</span></p><p class="s33" style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">cmds=(</p><p class="s33" style="padding-top: 1pt;padding-left: 49pt;text-indent: 0pt;text-align: left;">&#39;add:add  entry&#39;</p><p class="s33" style="padding-top: 1pt;padding-left: 49pt;text-indent: 0pt;line-height: 115%;text-align: left;">&#39;generate:use  server  to  generate  entry&#39; &#39;extract:extract  entries  into  file&#39; &#39;nextract:numerically  extract  entries&#39;</p><p class="s33" style="padding-left: 40pt;text-indent: 0pt;text-align: left;">)</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">_describe &#39;xauth command&#39; cmds</p><p style="padding-top: 8pt;padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">A step up in complexity from <span class="s33">_describe </span>is <span class="s33">_values</span>. It is useful where you are trying to complete the same set of values in a list. It is actually very similar to <span class="s33">_arguments </span>and supports many of the same features such as exclusion lists, parameters to values, and states. It is useful for commands like <span class="s33">dd </span>that take options of the form <span class="s45">name</span><span class="s33">=</span><span class="s45">value</span>.</p><p class="s33" style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">_values <span class="p">can be useful where you just need a list where matches for each item in the list are taken from the same set of values. An example of this occurs in the completion for </span>iptables<span class="p">, the Linux command for configuring firewall rules. The </span>iptables <span class="p">completion uses the following to complete TCP flags:</span></p><p class="s33" style="padding-top: 6pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">_values -s , &#39;tcp flag&#39; SYN ACK FIN RST URG PSH NONE ALL</p><p style="padding-top: 8pt;padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">The <span class="s33">-s </span>option specifies the separator character to use between items in the list. The first argument before the list of matches is then a description. A more complex example is in the completion for filesystem options in the <span class="s33">_mount </span>function. This function handles completion for <span class="s33">mount</span>, the Unix command for attaching a filesystem at a particular directory. The filesystem options are specified as a comma-separated list, and some of them take an argument after an equals sign. There are many possible options, and which are applicable depends on the type of filesystem. The following snippet containing some of the options for the Network File System (NFS) should give you some idea of the sort of things you can do with <span class="s33">_values</span>. You will probably also notice the resemblance to <span class="s33">_arguments</span>:</p><p class="s29" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark801"><span class="s27">390 </span></a>CHAPTER 15 <span class="s28">■ </span>W RIT ING COMP LET ION F UNCTI ON S</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s33" style="padding-left: 51pt;text-indent: -9pt;line-height: 115%;text-align: left;">_values  -s  ,  &#39;file  system  option&#39;  \ &#39;(rw)ro[mount  file  system  read-only]&#39;  \ &#39;(ro)rw[mount  file  system  read-write]&#39;  \ &#39;(nolock)lock[use  locking]&#39;  \ &quot;(lock)nolock[don&#39;t  use  locking]&quot;  \</p><p class="s33" style="padding-left: 51pt;text-indent: 0pt;line-height: 115%;text-align: left;">&#39;rsize[specify  read  buffer  size]:read  buffer  size&#39;  \ &#39;proto[specify  protocol]:protocol:(udp  tcp)&#39;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part406.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part408.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
