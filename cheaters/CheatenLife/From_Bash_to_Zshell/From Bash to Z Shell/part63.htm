<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Signals from the Keyboard</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part62.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part64.htm">Next &gt;</a></p><p class="s35" style="padding-left: 40pt;text-indent: 0pt;text-align: left;"><a name="bookmark123">Signals from the Keyboard</a></p><p style="padding-top: 5pt;padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">To send signals to a “foreground” process—one that’s in control of your terminal, when you don’t have a shell prompt there—you typically use the Ctrl key plus one other key. The key combinations are configurable, but Table 3-1 lists some typical values:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s13" style="padding-top: 4pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">Table 3-1. <span class="s32">Keys Set by stty</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:40.2pt" cellspacing="0"><tr style="height:15pt"><td style="width:59pt;border-top-style:solid;border-top-width:1pt;border-bottom-style:solid;border-bottom-width:1pt"><p class="s56" style="text-indent: 0pt;text-align: left;">Key Combo</p></td><td style="width:82pt;border-top-style:solid;border-top-width:1pt;border-bottom-style:solid;border-bottom-width:1pt"><p class="s56" style="padding-left: 16pt;text-indent: 0pt;text-align: left;">Sends Signal</p></td><td style="width:240pt;border-top-style:solid;border-top-width:1pt;border-bottom-style:solid;border-bottom-width:1pt"><p class="s56" style="padding-left: 17pt;text-indent: 0pt;text-align: left;">Effect</p></td></tr><tr style="height:18pt"><td style="width:59pt;border-top-style:solid;border-top-width:1pt"><p class="s57" style="padding-top: 3pt;text-indent: 0pt;text-align: left;">Ctrl-z</p></td><td style="width:82pt;border-top-style:solid;border-top-width:1pt"><p class="s57" style="padding-top: 3pt;padding-left: 16pt;text-indent: 0pt;text-align: left;">SIGTSTP</p></td><td style="width:240pt;border-top-style:solid;border-top-width:1pt"><p class="s57" style="padding-top: 3pt;padding-left: 17pt;text-indent: 0pt;text-align: left;">Stop process (you can restart with the <span class="s58">fg </span>command)</p></td></tr><tr style="height:17pt"><td style="width:59pt"><p class="s57" style="padding-top: 3pt;text-indent: 0pt;text-align: left;">Ctrl-c</p></td><td style="width:82pt"><p class="s57" style="padding-top: 3pt;padding-left: 16pt;text-indent: 0pt;text-align: left;">SIGINT</p></td><td style="width:240pt"><p class="s57" style="padding-top: 3pt;padding-left: 17pt;text-indent: 0pt;text-align: left;">Terminate (interrupt) process</p></td></tr><tr style="height:17pt"><td style="width:59pt;border-bottom-style:solid;border-bottom-width:1pt"><p class="s57" style="padding-top: 2pt;text-indent: 0pt;text-align: left;">Ctrl-\</p></td><td style="width:82pt;border-bottom-style:solid;border-bottom-width:1pt"><p class="s57" style="padding-top: 2pt;padding-left: 16pt;text-indent: 0pt;text-align: left;">IGQUIT</p></td><td style="width:240pt;border-bottom-style:solid;border-bottom-width:1pt"><p class="s57" style="padding-top: 2pt;padding-left: 17pt;text-indent: 0pt;text-align: left;">Terminate process, make debugging file (“core dump”)</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">To restart a stopped job and put it into the background, use the shell’s <span class="s33">bg </span>command; the arguments are job numbers. (You can also type <span class="s33">kill  -CONT </span>followed by the PID of a job you’ve previously stopped with <span class="s33">kill  -TSTP </span>or <span class="s33">kill  -STOP</span>.) For instance, to restart our suspended Mozilla job:</p><p class="s33" style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">% <b>bg %1</b></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">[1] mozilla &amp;</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">%</p><p class="s29" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark134"><span class="s27">60 </span></a>CHAPTER 3 <span class="s28">■ </span>MORE SHELL FEATURES </p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 42pt;text-indent: 18pt;line-height: 115%;text-align: justify;">The main use of signals, though, is to terminate jobs that are taking too long or that have other problems: for instance, if something goes wrong and the program won’t respond. You’ll have a few choices, all of which send signals, but in different ways:</p><p style="padding-top: 7pt;padding-left: 67pt;text-indent: -10pt;line-height: 115%;text-align: left;">• If the job is in the background and you started it from a shell prompt, you can kill it by job number, like <span class="s33">kill %2</span>.</p><p style="padding-top: 7pt;padding-left: 57pt;text-indent: 0pt;text-align: left;">• If the job is in the foreground, use a key combination like Ctrl-c (listed in Table 3.1).</p><p style="padding-top: 8pt;padding-left: 67pt;text-indent: -10pt;line-height: 115%;text-align: left;">•   Otherwise, open (or go to) another terminal (if one terminal is frozen or unavailable). Get the job’s PID number, and kill it by PID, such as <span class="s33">kill  12345</span>. This is handy for jobs that you didn’t start from a shell—such as jobs started from a menu or button on your desktop.</p><p style="padding-top: 7pt;padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">We’ll see examples of those in a minute. But first: If you didn’t start a process from the shell where you have a prompt—or if you don’t have a prompt in this shell and can’t get one (because the foreground job is stalled for some reason)—you’ll probably need to get the PID of the process. How can you find the PID of a process if the shell didn’t tell you? (Many systems have a program like <span class="s33">killall </span>that tries to kill a process by the name of the program running in that process. But those can make mistakes or miss some processes. On some systems, <span class="s33">killall </span>actually tries to kill <i>all </i>processes. So be careful!) Our technique is more thorough—and it also shows you a lot about what’s happening in your Unix system.) The answer is the <span class="s33">ps </span>(process status) program that we mentioned briefly in the sidebar “What’s Happening: Processes” in Chapter 1.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part62.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part64.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
