<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>fiBangfl History: The Use of Exclamation Mark</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part127.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part129.htm">Next &gt;</a></p><h4 style="padding-left: 42pt;text-indent: 0pt;text-align: left;"><a name="bookmark254">“Bang” History: The Use of Exclamation Marks</a></h4><p style="padding-top: 6pt;padding-left: 42pt;text-indent: 0pt;line-height: 115%;text-align: justify;">Both <span class="s33">bash </span>and <span class="s33">zsh </span>have a history mechanism inherited from the C shell that uses the <span class="s33">! </span>character to retrieve history lines. We introduced this feature in the section “History,” in Chapter 1; in this section we’ll offer a little more detail.</p><p style="padding-left: 42pt;text-indent: 18pt;line-height: 115%;text-align: left;">When <span class="s33">csh </span>was written, this feature was the only way of using lines from the shell’s history. There was no command-line editing except for the few simple operations configured with <span class="s33">stty </span>(which we discussed in the section “Other Tips on Terminals” in Chapter 4). You’ll probably use the line editor to do many of the tasks represented by complex history substitutions like</p><p class="s33" style="padding-left: 42pt;text-indent: 0pt;line-height: 10pt;text-align: left;">!1023:1:t<span class="p">.</span></p><p style="padding-top: 1pt;padding-left: 42pt;text-indent: 18pt;line-height: 115%;text-align: left;">However, there are plenty of simple and useful tricks. All the features here are introduced by an exclamation mark, or “bang” for short. The simplest feature is to repeat the last command.</p><p class="s29" style="padding-top: 3pt;padding-left: 247pt;text-indent: 0pt;text-align: left;"><a name="bookmark272">CHAPTER 6 </a><span class="s28">■ </span>MORE AB OU T SHELL HISTOR Y <span class="s27">125</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s33" style="padding-left: 40pt;text-indent: 0pt;text-align: left;">%  <b>echo  This  is  the  last  command.</b></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">This  is  the  last  command</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">% <b>!!</b></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">echo  This  is  the  last  command. This  is  the  last  command.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: justify;">Note that the shell showed you the result of the history command. Typing <span class="s33">!! </span>made it look in the history for the command immediately before and reexecute in whole. You don’t have to have <i>only </i><span class="s33">!! </span>on the line; you can put any other text around it. The <span class="s33">!! </span>will be replaced with the previous line at any point it occurs, even if it occurs more than once.</p><p style="padding-left: 58pt;text-indent: 0pt;line-height: 10pt;text-align: left;">For commands before the last one, you can use a negative number. <span class="s33">!! </span>is the same as <span class="s33">!-1</span>,</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">!-2 <span class="p">is the command immediately before that, and so on.</span></p><p style="padding-top: 1pt;padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">History entries also have an absolute number, starting from 1. If the shell has read history in from a file, those lines read back in will usually grab the first numbers, so you will find that the lines you type have numbers starting from 501, or 1001, or whatever. There are two ways of finding out what the number of the lines is. The foolproof method is to type <span class="s33">history</span>. This will produce output similar to the following:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:37.7009pt" cellspacing="0"><tr style="height:11pt"><td style="width:25pt"><p class="s49" style="padding-left: 1pt;padding-right: 2pt;text-indent: 0pt;line-height: 10pt;text-align: center;">1035</p></td><td style="width:79pt"><p class="s49" style="padding-left: 4pt;text-indent: 0pt;line-height: 10pt;text-align: left;">echo \!\!</p></td></tr><tr style="height:12pt"><td style="width:25pt"><p class="s49" style="padding-left: 1pt;padding-right: 2pt;text-indent: 0pt;text-align: center;">1036</p></td><td style="width:79pt"><p class="s49" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">man zshmisc</p></td></tr><tr style="height:12pt"><td style="width:25pt"><p class="s49" style="padding-left: 1pt;padding-right: 2pt;text-indent: 0pt;text-align: center;">1037</p></td><td style="width:79pt"><p class="s49" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">man zshexpn</p></td></tr><tr style="height:12pt"><td style="width:25pt"><p class="s49" style="padding-left: 1pt;padding-right: 2pt;text-indent: 0pt;text-align: center;">1039</p></td><td style="width:79pt"><p class="s49" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">less /etc/bashrc</p></td></tr><tr style="height:11pt"><td style="width:25pt"><p class="s49" style="padding-left: 1pt;padding-right: 2pt;text-indent: 0pt;line-height: 10pt;text-align: center;">1040</p></td><td style="width:79pt"><p class="s49" style="padding-left: 4pt;text-indent: 0pt;line-height: 10pt;text-align: left;">less ~/.history</p></td></tr></table><p style="padding-top: 8pt;padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">In this list the numbers on the left give the history line number corresponding to the remaining text. So with that history, typing <span class="s33">!1037 </span>will execute the command <span class="s33">man zshexpn</span>. The same result can be achieved by pressing Up Arrow three times, then Return.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">We’ve shown only the end of the output. <span class="s33">bash </span>will show you the entire history stored in the shell. <span class="s33">zsh </span>truncates it to the last 20 or so entries, but you can show the entire history with the command <span class="s33">history 1</span>. In <span class="s33">zsh</span>, giving a single number to the <span class="s33">history </span>command tells it the number to start from. If that is no longer in the shell’s memory, the command starts from the first entry it has. Conversely, you can give it a negative number, just like after <span class="s33">!</span>, which tells the shell</p><p style="padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">to start the list from that many entries ago. You can give a second number, which tells the command where to stop. So the following shows the 21 entries from the 40th ago to the 20th ago, counting inclusively:</p><p class="s33" style="padding-top: 6pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">zsh% <span class="s63">history -40 -20</span></p><p style="padding-top: 8pt;padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: justify;">(The example assumes you have enough entries to have a history list of at least 40 entries.) <span class="s33">bash</span>, by contrast, takes only one positive number. This is how many lines back in the history to look. In <span class="s33">bash</span>, <span class="s33">history 1 </span>behaves like <span class="s33">history -1 </span>in <span class="s33">zsh</span>.</p><p class="s29" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark273"><span class="s27">126 </span></a>CHAPTER 6 <span class="s28">■ </span>MORE ABOUT SHELL H I STORY </p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">In <span class="s33">zsh</span>, you can set the option <span class="s33">hist_no_store </span>to prevent new <span class="s33">history </span>commands from being added to the history list. That’s useful if you use the command a lot but don’t need to retrieve it. The last command is always available for immediate use. Hence if you’ve just typed <span class="s33">history</span>, <span class="s33">!! </span>will always repeat that, even with the option set. Likewise, you can always use the Up Arrow key to edit the last line. (Related commands, such as <span class="s33">fc-l, </span>are also not added to the history when <span class="s33">hist_no_store </span>is in effect.)</p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">Another way of picking a line in the history is by the text it starts with. Simply put the text after a single exclamation mark:</p><p class="s33" style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">% <b>echo This file was created on $(date) &gt;file</b></p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">% <b>cat file</b></p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">This file was created on Tue Jan 20 21:39:47 GMT 2004</p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">% <b>!echo</b></p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">echo  This  file  was  created  on  $(date)  &gt;file</p><p style="padding-top: 8pt;padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">The shell searches back in the history for the nearest line that matches. <span class="s33">zsh </span>allows you to search for a line containing certain text by using <span class="s33">!?</span>:</p><p class="s33" style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">zsh% <b>ls -l ~pws</b></p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;line-height: 115%;text-align: left;">...contents  of  pws&#39;s  home  directory zsh%  <b>ls  -l  ~csr</b></p><p class="s33" style="padding-left: 41pt;text-indent: 0pt;line-height: 115%;text-align: left;">...contents  of  csr&#39;s  home  directory zsh%  <b>!?pws</b></p><p class="s33" style="padding-left: 41pt;text-indent: 0pt;line-height: 10pt;text-align: left;">ls -l ~pws</p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">...contents  of  pws&#39;s  home  directory,  again</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part129.htm">History Words</a><a class="toc0" href="part130.htm">Modifiers</a><a class="toc1" href="part131.htm">Other Uses of History Modifiers</a><a class="toc0" href="part132.htm">Verifying and Quoting History References</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part127.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part129.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
