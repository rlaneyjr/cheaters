<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Use of the Terminal by Background Jobs</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part292.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part294.htm">Next &gt;</a></p><p class="s18" style="padding-left: 40pt;text-indent: 0pt;text-align: left;"><a name="bookmark544">Use of the Terminal by Background Jobs</a></p><p style="padding-top: 5pt;padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">One problem you may notice when putting jobs in the background is that they can still write their output to the terminal. If they do, the output will be mixed up with any output from the job you are running in the foreground. One way to deal with this is to redirect the program’s output when you first run it.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">The same problem doesn’t exist for background jobs trying to read from the terminal. If a background job tries to read from the terminal, the terminal driver automatically suspends it:</p><p class="s33" style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">% <b>{ read; } &amp;</b></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">[1] 1914</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s33" style="padding-left: 40pt;text-indent: 0pt;text-align: left;">[1]+ Stopped { read; }</p><p style="padding-top: 8pt;padding-left: 58pt;text-indent: 0pt;text-align: left;">(You may have to hit Return again before the shell tells you the job is stopped.)</p><p style="padding-top: 1pt;padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">Using the <span class="s33">stty tostop </span>command, it is possible to extend this feature. Then background jobs are stopped when they attempt to write to the terminal, as well as when they read from it. You can bring such jobs back to the foreground at your convenience. To disable the feature, execute the command <span class="s33">stty -tostop</span>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part292.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part294.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
