<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Counting Links</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part245.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part247.htm">Next &gt;</a></p><p class="s18" style="padding-left: 42pt;text-indent: 0pt;text-align: left;"><a name="bookmark436">Counting Links</a></p><p style="padding-top: 5pt;padding-left: 42pt;text-indent: 0pt;line-height: 115%;text-align: left;">Another qualifier that accepts a numeric argument is <span class="s33">l</span>, representing the number of hard links. As with the previous qualifiers, including a plus or minus is allowed. As we showed in the section “Hard Links” in Chapter 8, the number of hard links to a file is the number shown by <span class="s33">ls</span></p><p class="s33" style="padding-left: 42pt;text-indent: 0pt;line-height: 115%;text-align: left;">-l <span class="p">after the permissions; remember hard links are essentially alternative names for files. This command finds all regular files in the directory that have another name:</span></p><p class="s33" style="padding-top: 7pt;padding-bottom: 2pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">zsh% <b>ls -l *(.l2)</b></p><table style="border-collapse:collapse;margin-left:39.5009pt" cellspacing="0"><tr style="height:11pt"><td style="width:56pt"><p class="s49" style="padding-left: 2pt;text-indent: 0pt;line-height: 10pt;text-align: left;">-rw-r--r--</p></td><td style="width:45pt"><p class="s49" style="padding-left: 8pt;text-indent: 0pt;line-height: 10pt;text-align: left;">2 pws</p></td><td style="width:50pt"><p class="s49" style="padding-left: 13pt;text-indent: 0pt;line-height: 10pt;text-align: left;">user</p></td><td style="width:142pt"><p class="s49" style="padding-right: 2pt;text-indent: 0pt;line-height: 10pt;text-align: right;">12951 Nov 21 12:22 Makefile</p></td></tr><tr style="height:11pt"><td style="width:56pt"><p class="s49" style="padding-left: 2pt;text-indent: 0pt;line-height: 10pt;text-align: left;">-rw-r--r--</p></td><td style="width:45pt"><p class="s49" style="padding-left: 8pt;text-indent: 0pt;line-height: 10pt;text-align: left;">2 pws</p></td><td style="width:50pt"><p class="s49" style="padding-left: 13pt;text-indent: 0pt;line-height: 10pt;text-align: left;">user</p></td><td style="width:142pt"><p class="s49" style="padding-right: 2pt;text-indent: 0pt;line-height: 10pt;text-align: right;">12951 Nov 21 12:22 makefile</p></td></tr></table><p style="padding-top: 8pt;padding-left: 42pt;text-indent: 18pt;line-height: 115%;text-align: left;">The link count for directories works a little differently because each reference to the direc- tory from another directory takes up one link. The total number of links to a directory is usually two plus the number of subdirectories. The extra two links that are always present are related to the <span class="s33">. </span>and <span class="s33">.. </span>entries in directory listings. So the expression <span class="s33">*(/l+2) </span>refers to all subdirectories of the current directory that have at least one subdirectory of their own.</p><p style="padding-left: 42pt;text-indent: 18pt;line-height: 115%;text-align: left;">There’s no simple way of counting the number of symbolic links to a file, because these links don’t leave any sign on the file they point to.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part245.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part247.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
