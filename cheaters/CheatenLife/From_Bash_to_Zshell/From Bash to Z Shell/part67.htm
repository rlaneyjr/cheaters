<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Summary</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part66.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part68.htm">Next &gt;</a></p><h4 style="padding-left: 42pt;text-indent: 0pt;text-align: left;"><a name="bookmark127">Summary</a></h4><p style="padding-top: 6pt;padding-left: 42pt;text-indent: 0pt;line-height: 115%;text-align: left;">In this grab bag of a chapter, we’ve looked at a few more of the many features that make shells a great working environment for users and programmers:</p><p class="s29" style="padding-top: 3pt;padding-left: 269pt;text-indent: 0pt;text-align: left;"><a name="bookmark141">CHAPTER 3 </a><span class="s28">■ </span>MORE SHELL FEATURES <span class="s27">67</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 66pt;text-indent: -10pt;line-height: 115%;text-align: left;">• Environment variables are similar to shell variables, but they’re copied from a parent process to its child. This lets environment variables spread data throughout all or part of a system. However, you can’t change environment variables in processes that are already started (unless the process makes the change itself).</p><p style="padding-top: 7pt;padding-left: 66pt;text-indent: -10pt;line-height: 115%;text-align: justify;">•   You can send signals to a process—usually to terminate it, but also to start and stop it— with <span class="s33">kill</span>. Most shells will also simplify that job—and also allow handy manipulation of groups of processes—with their job control features. The <span class="s33">ps </span>command shows the status of processes.</p><p style="padding-top: 7pt;padding-left: 66pt;text-indent: -10pt;line-height: 115%;text-align: justify;">• Background processing is related to job control, but it’s available on all shells, even very old ones. It lets you start a process from the shell; then the shell outputs another prompt so you can keep working from the same terminal.</p><p style="padding-top: 7pt;padding-left: 66pt;text-indent: -10pt;line-height: 115%;text-align: left;">• Quoting controls the shell’s interpretation of special characters such as spaces, newlines, asterisks, and more.</p><p style="padding-top: 7pt;padding-left: 66pt;text-indent: -10pt;line-height: 115%;text-align: justify;">• The <span class="s33">CDPATH </span>shell variable is a list of directories where <span class="s33">cd </span>should look for subdirectories to change to. This lets you avoid typing complete pathnames to often-used directories.</p><p style="text-indent: 0pt;text-align: left;"><span><img width="592" height="888" alt="image" src="Image_093.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="672" height="888" alt="image" src="Image_094.png"/></span></p><p class="s38" style="padding-top: 4pt;padding-left: 40pt;text-indent: 0pt;text-align: left;"><a name="bookmark142">P A R T 2</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s21" style="padding-top: 4pt;padding-left: 41pt;text-indent: 0pt;line-height: 13pt;text-align: left;">■ ■ ■</p><p class="s39" style="padding-left: 40pt;text-indent: 0pt;line-height: 46pt;text-align: left;">Using bash and zsh</p><p style="text-indent: 0pt;text-align: left;"><br/></p><h2 style="padding-left: 40pt;text-indent: 0pt;text-align: left;">I<span class="s40">n the second part of this book, we will not try to cover all the Unix shells, as we did in Part</span></h2><p class="s40" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;line-height: 134%;text-align: justify;">1. Instead, we will look at two powerful shells, <span class="s59">bash </span>and <span class="s59">zsh</span>, in a bit more detail. They are both freely available on all the most common operating systems. We will show you how to configure both shells and make them do more for you, expanding on many of the points in Part 1 as well as introducing some new ways of controlling the shell from the command line. Later, in Part 3, we will start to string things together to make programs (which in shell language are called <span class="s60">scripts </span>and <span class="s60">functions</span>). For now, most of what we tell you will be in short chunks, making it easy for you to try things out.</p><p style="text-indent: 0pt;text-align: left;"><span><img width="589" height="248" alt="image" src="Image_095.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s41" style="padding-top: 13pt;padding-left: 40pt;text-indent: 0pt;text-align: left;"><a name="bookmark143">C H A P T E R 4</a></p><p class="s42" style="padding-top: 9pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">■ ■ ■</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part66.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part68.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
