<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>The Memory Size Limits (-m, -s, and -v)</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part306.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part308.htm">Next &gt;</a></p><p class="s35" style="padding-left: 40pt;text-indent: 0pt;text-align: left;"><a name="bookmark558">The Memory Size Limits (-m, -s, and -v)</a></p><p style="padding-top: 5pt;padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: justify;">You can limit the amount of memory a process is allowed to use. If it reaches the limit, requests to allocate more memory will be refused. The values of these limits are specified in kilobytes so, for example, 8192 means 8 megabytes.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">Usually you don’t need to limit the memory allowance for a program. However, occasionally you may find a program starts to take so much memory that it causes problems for other programs; then you may decide to limit the memory. It’s very likely that a program won’t work properly when it reaches this limit. It’s quite possible that it will exit abnormally, maybe dumping a core file as we just described. So you should use these limits carefully.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">Memory management is a complicated issue, but there are three particularly useful types of limit.</p><p style="padding-top: 7pt;padding-left: 66pt;text-indent: -10pt;line-height: 115%;text-align: justify;">•   The main memory, also known as the <i>resident set size </i>in Unix jargon. You set a limit for this with <span class="s33">ulimit -m</span>. You might want to set a limit for this if you find a program is hogging all the RAM. One sign of this is constant disk activity and a very slow response to commands entered. (This is sometimes called <i>thrashing</i>.)</p><p style="padding-top: 7pt;padding-left: 66pt;text-indent: -10pt;line-height: 115%;text-align: left;">• The stack memory. As well as storing data, the stack is used to remember where a program should return to after the end of a call to another routine. This limit, set with <span class="s33">ulimit -s</span>, is the one that is most often applied. Sometimes a program can get into an infinite loop in which a routine endlessly calls itself. Limiting the stack causes such a program to run out of space and terminate.</p><p style="padding-top: 7pt;padding-left: 66pt;text-indent: -10pt;line-height: 115%;text-align: left;">• The <i>virtual </i>memory, also known as the <i>address space</i>. Unix systems are able to store parts of programs temporarily on disk in an area called the <i>swap</i>. The virtual memory includes this plus any other memory the program can in principle access. For example, there may be areas the program has asked to access but don’t yet contain any data. A system may not reserve space for this until it is needed. Because of these features, not all virtual memory is necessarily in RAM at any one time. You can set a limit for virtual memory with <span class="s33">ulimit -v </span>if you are short on swap space.</p><p style="padding-top: 7pt;padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">The <span class="s33">ps </span>command will tell you the details of memory usage, although there are other more sophisticated ways of looking for memory hogs such as the <span class="s33">top </span>or <span class="s33">prstat </span>command. Graphical interfaces you can use include <span class="s33">gtop</span>, which is the GNOME system monitor (and sometimes called <span class="s33">gnome-system-monitor</span>).</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part306.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part308.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
