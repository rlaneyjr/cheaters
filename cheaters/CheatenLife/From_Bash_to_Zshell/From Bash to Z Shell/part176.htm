<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Scheduling Commands to Happen Before Prompts</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part175.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part177.htm">Next &gt;</a></p><p class="s35" style="padding-left: 40pt;text-indent: 0pt;text-align: left;"><a name="bookmark317">Scheduling Commands to Happen Before Prompts</a></p><p style="padding-top: 5pt;padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">It’s possible to tell the shell to execute any command line at a particular time of day. You may know that Unix has facilities called <span class="s33">at </span>and <span class="s33">cron</span>, which can execute a set of commands at a certain time of day. The shell facility is useful when you need the output from commands to appear on the terminal; <span class="s33">at </span>and <span class="s33">cron </span>have no knowledge of your terminal. Hence the shell’s built-in facility is often used for printing messages such asreminders to yourself. We’re mentioning the facility here because is it always occurs just before the prompt for a new command line is printed, like the mail check. In fact, it occurs just after the mail check, assuming that both tasks are scheduled to occur. It’s a very simple command:</p><p class="s33" style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">sched  17:34  echo  Time  to  go</p><p class="s29" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark341"><span class="s27">164 </span></a>CHAPTER 7 <span class="s28">■ </span>PROMPTS </p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">This prints the message on your terminal the next time after 17:34 that the shell is about to print a prompt. The <span class="s33">sched </span>command on its own lists scheduled events with the event numbers (the first thing on the line), and <span class="s33">sched </span><i>-num </i>with the number of the event removes the sched- uled event.</p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">If you’re going to use <span class="s33">sched </span>with a command significantly more complicated than what we’ve shown, it’s probably better to put the command in a shell function, described in Chapter 13. Otherwise, it can be quite complicated to decide what parts of the line are evaluated immedi- ately when you type <span class="s33">sched </span>or have it run from an initialization file, and what parts are run only when the alarm goes off. Burying the second set inside a function makes this completely clear.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part175.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part177.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
