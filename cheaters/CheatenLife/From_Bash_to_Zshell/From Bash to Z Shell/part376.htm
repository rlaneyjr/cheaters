<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Step 2: Create the Widget</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part375.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part377.htm">Next &gt;</a></p><p class="s35" style="padding-left: 40pt;text-indent: 0pt;text-align: left;"><a name="bookmark707">Step 2: Create the Widget</a></p><p style="padding-top: 5pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">The syntax to tell the shell that the function is to be treated as a new widget is as follows:</p><p class="s33" style="padding-top: 8pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">zle -N backward-ten-characters</p><p style="padding-top: 8pt;padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: justify;">Again, you need to add this to <span class="s33">.zshrc </span>if you always want the widget to be available. There’s no easy shortcut to make the shell recognize widgets automatically, so you need a line like this for every widget you add.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">In the example we just offered, the widget had the same name as the function. That’s usually the best way of doing things, but actually it’s not required. If you give two arguments to <span class="s33">zle -N</span>, the first is the widget (the name you use in <span class="s33">bindkey </span>commands) and the second is the function (which the shell finds in your <span class="s33">fpath</span>). Due to the potential for confusion, the only time you will want to do that is if the same function can be used for different purposes. We’ll explain what this means later in the chapter in the section “Case Study 1: Multiple Tasks in Widgets.”</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">Actually, that’s all there is to it—you can now use the widget <span class="s33">backward-ten-characters </span>just like any other editor widget. However, to make it more useful, there is usually a third step.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part375.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part377.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
