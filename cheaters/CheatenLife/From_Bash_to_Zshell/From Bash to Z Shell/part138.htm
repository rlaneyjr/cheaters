<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>zsh Features for Pruning History</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part137.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part139.htm">Next &gt;</a></p><p class="s18" style="padding-left: 42pt;text-indent: 0pt;text-align: left;"><a name="bookmark264">zsh Features for Pruning History</a></p><p class="s33" style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;line-height: 115%;text-align: left;">zsh <span class="p">doesn’t have the general history control of </span>bash<span class="p">’s </span>HISTIGNORE <span class="p">at the moment; everything is controlled by shell options.</span></p><p style="padding-left: 59pt;text-indent: 0pt;line-height: 10pt;text-align: left;">There are a whole group of options controlling how the shell treats duplicate lines:</p><p class="s33" style="padding-top: 8pt;padding-left: 59pt;text-indent: 0pt;line-height: 115%;text-align: left;">hist_ignore_dups<span class="p">: This is like </span>bash<span class="p">’s </span>HISTCONTROL=ignoredups<span class="p">. Consecutive duplicates are not saved. Actually, the most recent version of the line is always kept. This means that if you look at the timestamps, you will see the values for the last line you executed.</span></p><p class="s33" style="padding-top: 7pt;padding-left: 59pt;text-indent: 0pt;line-height: 115%;text-align: left;">hist_ignore_all_dups<span class="p">: This extends the meaning of the previous command so that all duplicates are removed from the history, whether they are consecutive or not. This is not a good option to set if you regularly reuse chunks of history lines in order, since there may be unexpected gaps.</span></p><p class="s33" style="padding-top: 7pt;padding-left: 60pt;text-indent: 0pt;line-height: 115%;text-align: left;">hist_save_no_dups<span class="p">: When writing the history file, duplicates are not saved, but they are kept internally.</span></p><p class="s33" style="padding-top: 7pt;padding-left: 60pt;text-indent: 0pt;text-align: left;">hist_expire_dups_first<span class="p">: This option comes into play when the internal history list reaches</span></p><p class="s33" style="padding-top: 1pt;padding-left: 60pt;text-indent: 0pt;line-height: 115%;text-align: left;">$HISTSIZE<span class="p">. At that point, the shell looks for duplicate lines anywhere in the history. It then removes the earliest occurrence. If it can’t do that, it will simply remove the first item in the history list as normal.</span></p><p style="padding-top: 7pt;padding-left: 60pt;text-indent: 0pt;text-align: left;">There’s a subtlety here. Suppose you save your entire history to the history file, i.e,</p><p class="s33" style="padding-top: 1pt;padding-left: 60pt;text-indent: 0pt;line-height: 115%;text-align: left;">$SAVEHIST <span class="p">and </span>$HISTSIZE <span class="p">are the same number. The shell will gradually remove all dupli- cates from the history file. Eventually the effect is the same as if </span>hist_ignore_all_dups <span class="p">were set. The way to get round this is to set </span>HISTSIZE <span class="p">to be larger than </span>SAVEHIST<span class="p">. The shell accumulates duplicates in memory to begin with using the extra space, then prunes them as the need arises.</span></p><p class="s33" style="padding-top: 7pt;padding-left: 60pt;text-indent: 0pt;line-height: 115%;text-align: left;">hist_find_no_dups<span class="p">: When you search backward for history lines, each search will always produce a line different from the one you are currently on. However, the lines are not unique. You might find yourself searching back through a repeated pair of lines, for example. When this option is turned on, you only see each line exactly once, even if there were some other, different, lines in between.</span></p><p class="s29" style="padding-top: 3pt;padding-left: 247pt;text-indent: 0pt;text-align: left;"><a name="bookmark282">CHAPTER 6 </a><span class="s28">■ </span>MORE AB OU T SHELL HISTOR Y <span class="s27">137</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">Two other options control what lines are saved to the history (apart from <span class="s33">hist_no_store</span>, which we’ve already described):</p><p class="s33" style="padding-top: 7pt;padding-left: 58pt;text-indent: 0pt;line-height: 115%;text-align: left;">hist_ignore_space<span class="p">: This is like </span>bash<span class="p">’s </span>HISTCONTROL=ignorespace<span class="p">. Lines beginning with a space character aren’t saved to the history.</span></p><p class="s33" style="padding-top: 7pt;padding-left: 58pt;text-indent: 0pt;line-height: 115%;text-align: left;">hist_no_functions<span class="p">: Function definitions aren’t saved to the history. Most functions you use will probably be autoloaded rather than typed in, so this usually just refers to the few short functions you type by hand.</span></p><p style="padding-top: 7pt;padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">Remember you can always retrieve the immediately preceding command. It only becomes a candidate for pruning after the next command is executed.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: justify;">There’s one miscellaneous option: <span class="s33">hist_reduce_blanks</span>. Unlike the others we’ve listed, this works on individual lines. It removes any blank spaces that are not syntactically important—in other words, those that separate command arguments, but not those within quotes.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part137.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part139.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
