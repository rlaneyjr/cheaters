<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>A Quick Way of Getting Help on a Command</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part101.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part103.htm">Next &gt;</a></p><p class="s35" style="padding-left: 42pt;text-indent: 0pt;text-align: left;"><a name="bookmark178">A Quick Way of Getting Help on a Command</a></p><p style="padding-top: 5pt;padding-left: 42pt;text-indent: 0pt;line-height: 115%;text-align: left;">The use of <span class="s33">push-line </span>we explained is so common that there is a special command that does it all for you. You can look up the documentation for a command you are entering by simply pressing Esc-h, without clearing the command line. This pushes the line for you, then runs the command <span class="s33">run-help</span>, which by default is an alias for <span class="s33">man</span>. Afterwards, the command line appears from the buffer stack.</p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">You can customize <span class="s33">run-help </span>to be even more helpful, as we describe in the sidebar “Customizing zsh’s run-help Command.”</p><p class="s29" style="padding-top: 3pt;padding-left: 188pt;text-indent: 0pt;text-align: left;"><a name="bookmark216">CHAPTER 4 </a><span class="s28">■ </span>EN TERING AND ED ITING THE CO MMAND LIN E <span class="s27">101</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="569" height="478" alt="image" src="Image_142.png"/></span></p><p class="s40" style="padding-left: 135pt;text-indent: 0pt;text-align: left;">CUSTOMIZING ZSH’S RUN-HELP COMMAND</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s33" style="padding-left: 49pt;text-indent: 0pt;line-height: 115%;text-align: left;">You aren’t stuck with the default behavior of run-help. The shell comes with a function you can use instead, which should be installed into your function search path. In that case you can use it by entering the following:</p><p class="s33" style="padding-top: 7pt;padding-left: 49pt;text-indent: 0pt;text-align: left;">zsh% <b>unalias run-help</b></p><p class="s33" style="padding-top: 1pt;padding-left: 49pt;text-indent: 0pt;text-align: left;">zsh% <b>autoload -U run-help</b></p><p class="s33" style="padding-top: 8pt;padding-left: 49pt;text-indent: 0pt;line-height: 115%;text-align: left;">Now when you press Esc-h, you get more help. If you do this a lot with the commands that are part of the shell, you can get the run-help function to show you the documentation for the individual command, but you need to do some setting up first. Somewhere create a directory called Help, change into it, and run the Perl script helpfiles provided with the zsh distribution in the Util subdirectory. The script isn’t installed with the shell, but you only need to run it once. There’s some documentation at the top of the script (run more on the file to see it). To make it work, you need to pass the zshbuiltins manual into it. Here’s an example that creates the help files in the directory ~/zsh-help:</p><p class="s33" style="padding-top: 7pt;padding-left: 49pt;text-indent: 0pt;text-align: left;">zsh% <b>mkdir ~/zsh-help</b></p><p class="s33" style="padding-top: 1pt;padding-left: 49pt;text-indent: 0pt;text-align: left;">zsh% <b>cd ~/zsh-help</b></p><p class="s33" style="padding-top: 1pt;padding-left: 49pt;text-indent: 0pt;text-align: left;">zsh% <b>man zshbuiltins | col -bx | perl ~/src/zsh-4.2.0/Util/helpfiles</b></p><p class="s33" style="padding-top: 8pt;padding-left: 49pt;text-indent: 0pt;line-height: 115%;text-align: left;">If you see error messages, make sure your zsh manual pages are installed properly. Sometimes you can replace col -bx with colcrt and get slightly better effects, depending on the system. Both commands strip the terminal control characters from the output of man to turn it into plain text. That’s the bit you only need to do once. Then you need to tell the run-help function where to find those files; this goes in ~/.zshrc (without the prompt, of course):</p><p class="s33" style="padding-top: 7pt;padding-left: 49pt;text-indent: 0pt;text-align: left;">zsh% <b>HELPDIR=~/zsh-help</b></p><p class="s33" style="padding-top: 8pt;padding-left: 49pt;text-indent: 0pt;line-height: 115%;text-align: left;">along with the two-line setup for run-help shown previously. Now pressing Esc-h on a line starting with a shell built-in will show you the manual entry for the built-in.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part101.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part103.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
