<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Using Shell Features Together</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part43.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part45.htm">Next &gt;</a></p><p class="s17" style="padding-top: 9pt;padding-left: 40pt;text-indent: 0pt;text-align: left;"><a name="bookmark78">Using Shell Features Together</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><h2 style="padding-top: 23pt;padding-left: 40pt;text-indent: 0pt;line-height: 88%;text-align: left;">I<span class="p">n this chapter, we’ll cover several important shell features. We’ll focus on some of the things that make shells different from most graphical interfaces: the way that you can combine</span></h2><p style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">programs, together with advanced features of the shell, to do completely new things.</p><p style="padding-top: 1pt;padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: justify;">As with other chapters in Part 1, this chapter doesn’t cover every detail of each one of these shell features. It’s more of a narrative. If you’d rather read complete details in order, you’ll find them in Parts 2 and 3.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">Still, we do explain the concepts and go into some detail. If you aren’t interested in the details right now, or you don’t have time to try the examples, you can skim through this chapter and watch the shell features we use as we develop our application.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">We’ll build a complete, searchable list of all of the programs that you can run. The list is impressive on its own: your system probably has hundreds or even thousands of programs available—many more than a typical graphical system has on its menus, and even more possi- bilities when you combine these programs in the ways we’ll show you. (So, by learning about both the shell and your GUI, you’ll have two powerful ways to do the work you need to do!) The program list isn’t <i>that </i>useful on its own, though. The main point of this chapter’s tutorial is to give you a taste of the programs and shell features you’ll be able to use once you’ve mastered the shell. These features include</p><p style="padding-top: 7pt;padding-left: 66pt;text-indent: -10pt;line-height: 115%;text-align: justify;">• Redirecting (diverting) the output or input of programs to or from programs and files. Redirection also lets you build files, and streams of data, from the outputs of multiple programs.</p><p style="padding-top: 7pt;padding-left: 56pt;text-indent: 0pt;text-align: left;">• Searching for text with <span class="s33">grep</span>, paging through text with a pager program, sorting text with</p><p class="s33" style="padding-top: 1pt;padding-left: 66pt;text-indent: 0pt;text-align: left;">sort<span class="p">, making text into columns automatically, editing text on the fly, and more.</span></p><p style="padding-top: 8pt;padding-left: 66pt;text-indent: -10pt;line-height: 115%;text-align: left;">• Handling long command lines, and typing multiline commands and loops (a shell feature that lets you repeat a series of commands).</p><p style="padding-top: 7pt;padding-left: 56pt;text-indent: 0pt;text-align: left;">• Modifying command lines using a powerful method called <i>command substitution</i>.</p><p style="padding-top: 8pt;padding-left: 56pt;text-indent: 0pt;text-align: left;">• Testing files to see if they’re a program, as well as other tests.</p><p style="padding-top: 8pt;padding-left: 66pt;text-indent: -10pt;line-height: 115%;text-align: left;">• Making and running a shell script file: a series of commands that you can reuse; making a <span class="s33">bin </span>directory for your shell scripts.</p><p style="padding-top: 7pt;padding-left: 56pt;text-indent: 0pt;text-align: left;">• Using shell aliases and functions (which are related to shell scripts).</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s27" style="padding-top: 4pt;padding-left: 39pt;text-indent: 0pt;text-align: right;">27</p><p class="s29" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark92"><span class="s27">28 </span></a>C HA P T E R 2 <span class="s28">■ </span>U S I N G S H E L L F E A T U R E S T O G E T H E R</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part45.htm">Writing Output to Files: Redirection</a><a class="toc0" href="part46.htm">Using Programs Together: Pipes</a><a class="toc0" href="part47.htm">Joining Forces</a><a class="toc0" href="part48.htm">Editing Data, Continuing Command Lines</a><a class="toc0" href="part49.htm">Command Substitution</a><a class="toc0" href="part50.htm">for and foreach Loops</a><a class="toc0" href="part51.htm">More About for Loops</a><a class="toc0" href="part52.htm">Building Our Script</a><a class="toc0" href="part53.htm">Making a Script File</a><a class="toc0" href="part54.htm">Running the Script</a><a class="toc0" href="part55.htm">Programs and the Path</a><a class="toc0" href="part56.htm">Using the Results (via Aliases and Functions)</a><a class="toc0" href="part57.htm">Summary</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part43.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part45.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
