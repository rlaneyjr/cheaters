<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Automatically Added Suffixes</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part286.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part288.htm">Next &gt;</a></p><h4 style="padding-left: 40pt;text-indent: 0pt;text-align: left;"><a name="bookmark508">Automatically Added Suffixes</a></h4><p style="padding-top: 6pt;padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">Normally when the shell completes a word, it will also add a space following it. Sometimes, however, a space is not pertinent. A common example is when a directory name is completed. In this case, a slash is more useful because you can then go on to type (and complete) the name of a file in the directory:</p><p class="s33" style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">% <b>cd pub</b>&lt;tab&gt;</p><p class="s67" style="padding-top: 1pt;padding-left: 49pt;text-indent: 0pt;text-align: left;">➤ <span class="s33">cd  public_html/</span></p><p style="padding-top: 8pt;padding-left: 58pt;text-indent: 0pt;text-align: left;">Now by pressing Tab again, we can complete directories within <span class="s33">public_html</span>.</p><p style="padding-top: 1pt;padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">There are many other cases where suffixes are added. Often the suffix forms the separator character between two things such as an at sign (<span class="s33">@</span>) between a username and hostname. Though</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="226" height="1" alt="image" src="Image_223.png"/></span></p><p class="s14" style="padding-top: 5pt;padding-left: 52pt;text-indent: -12pt;line-height: 108%;text-align: left;">3. In the 4.2 version of <span class="s29">zsh</span>, a <span class="s29">fake </span>style exists to allow this for the more general case. If you use it, make sure to specify a sufficiently restrictive <span class="s29">zstyle </span>context.</p><p class="s29" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark537"><span class="s27">258 </span></a>C HA P T E R 10 <span class="s28">■ </span>C O M P L E T I O N</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 115%;text-align: left;">it makes a special case of slashes after directories, <span class="s33">bash </span>doesn’t have <span class="s33">zsh</span>’s concept of suffixes (or prefixes). To get around this, any suffix has to be included as part of the match itself. To see the result, try listing the possible completion matches after typing <span class="s33">chown</span>:</p><p class="s33" style="padding-top: 7pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">bash$ <b>chown </b>&lt;escape&gt;&lt;=&gt;</p><p class="s33" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">daemon:       games:         list:           mail:           news:           root:           sync:           uucp:</p><p class="s32" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">etc...</p><p style="padding-top: 8pt;padding-left: 60pt;text-indent: 0pt;text-align: left;">See how all the users listed have a trailing colon. In <span class="s33">zsh</span>, you wouldn’t see it.</p><p style="padding-top: 1pt;padding-left: 42pt;text-indent: 18pt;line-height: 115%;text-align: left;">Adding a suffix isn’t always what you want, however. Some commands don’t like it if you pass them the names of directories with a trailing slash (including some versions of <span class="s33">rmdir</span>). If <span class="s33">public_html </span>here was actually a symbolic link to another directory, the slash could actually be harmful because it could affect whether the target directory or the symbolic link itself is used. For this reason, recent versions of <span class="s33">bash </span>don’t add a <span class="s33">/ </span>suffix when completing a symbolic link that points to a directory. You can configure this by setting the <span class="s33">mark-symlinked-directories </span>readline variable. In <span class="s33">bash </span>3 there is also a <span class="s33">mark-directories </span>readline variable that allows you to prevent the slash from being added to any directory name.</p><p style="padding-left: 42pt;text-indent: 18pt;line-height: 115%;text-align: left;">To deal with this problem, <span class="s33">zsh </span>has a clever feature. If the next thing you type doesn’t “make sense”—in other words, it’s not something that would typically follow a slash—<span class="s33">zsh </span>removes the slash:</p><p class="s33" style="padding-top: 6pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">%  <b>rmdir  pub</b>&lt;tab&gt;</p><p class="s67" style="padding-top: 1pt;padding-left: 51pt;text-indent: 0pt;text-align: left;">➤ <span class="s33">rmdir  public_html/</span></p><p class="s33" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">%  <b>rmdir  public_html/</b>&lt;return&gt;</p><p class="s67" style="padding-top: 1pt;padding-left: 51pt;text-indent: 0pt;text-align: left;">➤ <span class="s33">&quot;rmdir  public_html&quot;  is  run</span></p><p style="padding-top: 8pt;padding-left: 42pt;text-indent: 18pt;line-height: 115%;text-align: left;">This can be quite a surprising feature when you first see it: it seems unnatural for some- thing to actually be removed from the command line. Once you are accustomed to this feature, you will find that it behaves predictably and is useful. If you really don’t like it, the option <span class="s33">auto_remove_slash </span>can be turned off to disable it. This is just a regular option and not a style and so it can’t, unfortunately, be adjusted for particular contexts.</p><p class="s33" style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">zsh <span class="p">has two other options related to these “auto-removable suffixes.” If you remember from the section “Expanding Variables and Patterns” earlier in this chapter, completion after a variable expansion can expand the variable for you. If you reconfigured how expansion works in your set-up, it may not do this and you will have to refer back to that section to learn how to reenable it. See what happens if you do this:</span></p><p class="s33" style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">%  <b>print  $HOME</b>&lt;tab&gt;</p><p style="padding-top: 8pt;padding-left: 59pt;text-indent: 0pt;text-align: left;">I get:</p><p class="s33" style="padding-top: 8pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">%  <b>print  /home/opk/</b></p><p style="padding-top: 8pt;padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">Notice anything? The <span class="s33">HOME </span>variable’s value doesn’t normally include a trailing slash. After doing the expansion, <span class="s33">zsh </span>looks at the resulting value, sees that it is the name of an existing directory, and so adds a slash. Unsetting the <span class="s33">auto_param_slash </span>option will disable this particular feature.</p><p style="padding-left: 59pt;text-indent: 0pt;line-height: 10pt;text-align: left;">The second option also relates to suffixes added to variable references:</p><p class="s33" style="padding-top: 8pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">%  <b>print  ${HOM</b>&lt;tab&gt;</p><p class="s67" style="padding-top: 1pt;padding-left: 50pt;text-indent: 0pt;text-align: left;">➤ <span class="s33">${HOME}/</span></p><p class="s29" style="padding-top: 3pt;padding-left: 304pt;text-indent: 0pt;text-align: left;"><a name="bookmark538">CHAPTER 10 </a><span class="s28">■ </span>COMPLE TION <span class="s27">259</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">Supposing you now decide that you want to use a modifier. Modifiers, which were discussed in the section “Other Uses of History Modifiers” in Chapter 6, are introduced with a colon. So try pressing <i>: </i>now. Note how both the slash and the closing brace are removed. The <span class="s33">auto_param_keys </span>option controls this, so if you don’t like it, the <span class="s33">unsetopt </span>command is again your friend.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part286.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part288.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
