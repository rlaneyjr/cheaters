<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Watching for an Idle Terminal</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part176.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part178.htm">Next &gt;</a></p><p class="s35" style="padding-left: 42pt;text-indent: 0pt;text-align: left;"><a name="bookmark318">Watching for an Idle Terminal</a></p><p style="padding-top: 5pt;padding-left: 42pt;text-indent: 0pt;line-height: 115%;text-align: left;">Assigning a number to the shell variable <span class="s33">TMOUT </span>gives it a timeout value in seconds. If the terminal is idle for this long, the shell will exit.</p><p class="s33" style="padding-top: 7pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">zsh% <b>TMOUT=30</b></p><p style="padding-top: 8pt;padding-left: 42pt;text-indent: 18pt;line-height: 115%;text-align: left;">Wait 30 seconds and your terminal will disappear. You may see the message “zsh: timeout” go floating by. That’s quite useful for security on a dumb terminal, since it will usually log you out; it’s less useful on a graphical display, where you will need to have the screen locked to prevent people doing unpleasant things while you are away. However, it’s also useful if you have a terminal window where you are logged in as root. Then if you go away from the terminal the shell will exit, preventing anyone else from gaining root access. The timeout works by sending a signal, <span class="s33">SIGALRM</span>, to the shell. In <span class="s33">zsh</span>, you can define a function <span class="s33">TRAPALRM </span>to handle this signal as an alternative to the shell exiting. See the section “Trapping Signals” in Chapter 13 for an expla- nation of trapping signals. The following <span class="s33">zsh </span>code updates a clock in an <span class="s33">xterm </span>title bar every 30 seconds:</p><p class="s33" style="padding-top: 7pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">TRAPALRM() {</p><p class="s33" style="padding-top: 1pt;padding-left: 51pt;text-indent: 0pt;line-height: 115%;text-align: left;">print -nP &quot;\e]2;%T\a&quot; TMOUT=30</p><p class="s33" style="padding-left: 42pt;text-indent: 0pt;line-height: 115%;text-align: left;">} TMOUT=30</p><p style="padding-top: 7pt;padding-left: 42pt;text-indent: 18pt;line-height: 115%;text-align: left;">This uses several of the features we have met during the chapter. <span class="s33">print -nP </span>prints a string with no newline at the end using prompt escapes. The escape <span class="s33">%T </span>outputs the time. The string also contains the terminal escapes for inserting a string into the title bar, and resetting the output to normal afterwards. Finally, the function sets the timeout back to 30 seconds so that it will be re-executed then. After defining the function, we start the timeout for the first time. Nothing will happen until you leave the terminal alone for half a minute; then the time will appear. As long as you don’t type anything, it will continue to be updated.</p><p class="s29" style="padding-top: 3pt;padding-left: 39pt;text-indent: 0pt;text-align: right;"><a name="bookmark342">CHAPTER 7 </a><span class="s28">■ </span>PROMPT S <span class="s27">165</span></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part176.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part178.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
