<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Globbing in Bash</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part223.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part225.htm">Next &gt;</a></p><h4 style="padding-left: 42pt;text-indent: 0pt;text-align: left;"><a name="bookmark414">Globbing in Bash</a></h4><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;line-height: 115%;text-align: left;">How does the shell deal with patterns that don’t match any files? In <span class="s33">bash </span>the string is passed through to the command unchanged, with the pattern characters intact. (This is different from <span class="s33">zsh</span>. If a pattern fails to a match a file in <span class="s33">zsh</span>, the shell by default reports an error and doesn’t execute the command.) So, for example:</p><p class="s33" style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">$  <b>ls</b></p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">picture1.jpg    picture2.jpg</p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">$  <b>echo  pic*  slide*</b></p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">picture1.jpg    picture2.jpg    slide*</p><p style="padding-top: 8pt;padding-left: 42pt;text-indent: 17pt;line-height: 115%;text-align: justify;">Sometimes you need all the arguments to correspond to real files. There are various ways of dealing with this:</p><p style="padding-top: 7pt;padding-left: 67pt;text-indent: -10pt;line-height: 115%;text-align: left;">• You can use one of the tests we’ll introduce in the section “Condition Tests” in Chapter 13 to test each argument to see if it’s a file. It works, but it’s clumsy.</p><p style="padding-top: 7pt;padding-left: 67pt;text-indent: -10pt;line-height: 115%;text-align: left;">•   You can turn on the <span class="s33">nullglob </span>option with <span class="s33">shopt  -s</span>. In that case any argument with a pattern in it that doesn’t match a file will simply be removed from the command line. Arguments with no patterns or where the patterns are quoted are passed through unchanged as arguments to the command. So in the previous example, <span class="s33">echo </span>would show “<span class="s33">picture1.jpg  picture2.jpg</span>”.</p><p style="padding-top: 7pt;padding-left: 67pt;text-indent: -10pt;line-height: 115%;text-align: left;">•   For <span class="s33">bash </span>versions 3.0 and greater, you can set the option <span class="s33">failglob</span>. In this case, if a pattern match fails, the shell prints an error message and doesn’t execute the command line. This is similar to the default behavior of <span class="s33">zsh</span>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part225.htm">Extended Globbing</a><a class="toc0" href="part226.htm">Negative Pattern Matching</a><a class="toc0" href="part227.htm">Ignoring Patterns</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part223.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part225.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
