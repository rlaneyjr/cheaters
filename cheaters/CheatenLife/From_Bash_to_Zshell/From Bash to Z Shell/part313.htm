<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Arrays</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part312.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part314.htm">Next &gt;</a></p><h4 style="padding-left: 42pt;text-indent: 0pt;text-align: left;"><a name="bookmark578">Arrays</a></h4><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;line-height: 115%;text-align: left;">We have seen how scalar variables can be used to hold a single item, be it a filename, a number, a word, a character, or a line of input. It is frequently the case, however, that you need to manage a whole collection of values together. This might be several words, a list of directories, 100 numbers, or a few filenames. For these situations, the shell supports <i>arrays</i>. An array can hold as many different items as you like. An individual item in an array is called an <i>array element </i>and can be used much like an ordinary scalar variable. The elements of an array are maintained in sequence. To refer to an individual element, you use its position, or <i>index</i>, in the sequence.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 42pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="507" height="1" alt="image" src="Image_234.png"/></span></p><p class="s21" style="padding-top: 4pt;padding-left: 41pt;text-indent: 0pt;line-height: 117%;text-align: justify;">■<span class="s23">Note </span><span class="s19">We’ve already seen scalar variables that contain a list of values. The PATH environment variable, for example, contains a list of directory names separated by colons (:). Environment variables are always scalar. This is because of the limited way in which Unix stores the environment variables of processes. Using sepa- rator characters makes it possible to store a list of values in an environment variable. However, proper arrays are more convenient to manipulate.</span></p><p class="s19" style="padding-top: 4pt;padding-left: 41pt;text-indent: 0pt;line-height: 119%;text-align: left;">If you are curious as to exactly how environment variables are stored for each process, Linux makes a process’s environment visible in the /proc special filesystem. If you are using Linux, you can run the following command to see the environment of your shell. We use $$ to expand the process ID of the shell, but you could look at the environment of a different process.</p><p class="s33" style="padding-top: 7pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">cat -v /proc/$$/environ</p><p class="s19" style="padding-top: 8pt;padding-left: 42pt;text-indent: 0pt;line-height: 119%;text-align: left;">What you will see looks like a series of scalar assignments. They are separated by the null character. That would be invisible if we hadn’t used the -v option to cat. With the -v option, null characters appear as ^@.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 42pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="504" height="1" alt="image" src="Image_235.png"/></span></p><p class="s29" style="padding-top: 3pt;padding-left: 314pt;text-indent: 0pt;text-align: left;"><a name="bookmark603">CHAPTER 12 </a><span class="s28">■ </span>VARIABLES <span class="s27">281</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part314.htm">Constructing an Array</a><a class="toc0" href="part315.htm">Accessing Array Elements</a><a class="toc0" href="part316.htm">Array Attributes</a><a class="toc0" href="part317.htm">Word Splitting</a><a class="toc0" href="part318.htm">Array Expansions</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part312.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part314.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
