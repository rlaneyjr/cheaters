<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Here-Documents and Here-Strings</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part211.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part213.htm">Next &gt;</a></p><h4 style="padding-left: 42pt;text-indent: 0pt;text-align: left;"><a name="bookmark377">Here-Documents and Here-Strings</a></h4><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;line-height: 115%;text-align: left;">There is a standard shell feature called a <i>here-document </i>that allows you to supply input for a command directly within a script. For that reason, it has a syntax similar to input redirection. It’s present in all the major shells, including <span class="s33">bash</span>, <span class="s33">zsh</span>, and <span class="s33">ksh</span>. It saves you the inconvenience of having to use a temporary file for the input to a command. Here’s a simple but typical example:</p><p class="s33" style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;line-height: 115%;text-align: left;">mailx  -s  &#39;Errors  running  your  job&#39;  $LOGNAME  &lt;&lt;HERE The  job  you  submitted  failed  to  run  properly.</p><p class="s33" style="padding-left: 41pt;text-indent: 0pt;line-height: 115%;text-align: left;">You  should  check  the  output  file  to  see  what  happened. HERE</p><p class="s29" style="padding-top: 3pt;padding-left: 263pt;text-indent: 0pt;text-align: left;"><a name="bookmark402">CHAPTER 8 </a><span class="s28">■ </span>FILES AND D I RECTORIES <span class="s27">191</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">(On your system the simple command for sending mail may be just <span class="s33">mail </span>or even <span class="s33">Mail </span>with an uppercase <span class="s33">M </span>rather than <span class="s33">mailx</span>. The history of Unix mail commands is rather tortuous.) This sends a mail message to the user running the job with the subject line given by the <span class="s33">-s </span>option and the text given by the here-document. The <span class="s33">&lt;&lt;HERE </span>tells the shell that the lines that follow the command contain data for the standard input of <span class="s33">mailx</span>, which is the body of the mail message. The input is terminated by a line containing just the string <span class="s33">HERE</span>. Be careful that it is <i>exactly </i>that, and nothing else—in particular, there must be no trailing white space. This is a common source of problems with here-documents. There’s nothing special about the string <span class="s33">HERE</span>, however, as long as you use the same string after the <span class="s33">&lt;&lt; </span>and on the line that terminates the here document. Any string without special characters in it will work, as long as the string doesn’t appear as a line in the body of the here-document.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">Command substitution and variable substitution work inside here-documents. This means, for example, you could put the name of the job that failed inside the mail message. (The variable substitution <span class="s33">$0 </span>is useful—if the command is running in a script, it expands to the name of the script.) If you put the string <span class="s33">HERE </span>inside quotes, substitution is turned off and the text sent to the command’s standard input is exactly the text from the here-document.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">If you put a hyphen in front of the string, then any tab characters at the start of lines inthe here- document will be removed; the remainder of the line will be passed as input to the command. The main use of this feature is to make the script or function where the here-document appears a little neater by indenting the text. The following code gives an example; if you try it, make sure you used a tab character, not spaces, for the first line inside the here-document. To get that at the command line, you would need to press Ctrl-v before the tab to suppress any special inter- pretation. (That’s assuming that Ctrl-v is the key sequence that makes the next character behave literally; this is the default.)</p><p class="s33" style="padding-top: 6pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">% <b>cat &lt;&lt;-HERE</b></p><p class="s46" style="padding-top: 1pt;padding-left: 76pt;text-indent: 0pt;text-align: left;">Tabs were stripped</p><p class="s46" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">although they don&#39;t need to be present HERE</p><p class="s33" style="padding-left: 40pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Tabs were stripped</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">although they don&#39;t need to be present</p><p style="padding-top: 8pt;padding-left: 40pt;text-indent: 18pt;line-height: 114%;text-align: left;">In conjunction with the <span class="s33">cat </span>command, a here-document can be used to create or append to text files. For example, you might do the following to add some aliases to your <span class="s33">.bashrc </span>file:</p><p class="s33" style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">$ <b>cat &lt;&lt;END &gt;&gt; ~/.bashrc </b>alias scat=&#39;sed -n l&#39; alias spell=&#39;ispell -l&#39; alias ll=&#39;ls -lFb&#39;</p><p class="s33" style="padding-left: 40pt;text-indent: 0pt;line-height: 10pt;text-align: left;">END</p><p class="s29" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark403"><span class="s27">192 </span></a>CHAPTER 8 <span class="s28">■ </span>FILES AND DIRECTORIES </p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 42pt;text-indent: 18pt;line-height: 115%;text-align: left;">This demonstrates how you can mix a here-document with other redirections. It is even possible to use a here-document from the middle of a pipeline. The form this takes isn’t obvious at first. All commands come first, with the content of the here-document following afterwards. Consider this example:</p><p class="s33" style="padding-top: 7pt;padding-left: 42pt;text-indent: 0pt;line-height: 115%;text-align: left;">netcat -l -p 8080 &lt;&lt;END | head -2 &gt;&gt; requests.log HTTP/1.0 200 OK</p><p class="s33" style="padding-left: 42pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Connection: close</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s33" style="padding-left: 42pt;text-indent: 0pt;line-height: 115%;text-align: left;">&lt;html&gt;&lt;body&gt;&lt;h1&gt;Hello!&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt; END</p><p style="padding-top: 7pt;padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">This code uses a program called <span class="s33">netcat </span>to listen on a network port and serve up a simple web page. The here-document, which contains the simple web page, is used as input to <span class="s33">netcat</span>. The output from <span class="s33">netcat </span>is piped through <span class="s33">head </span>to extract just the first two lines of the web page request.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part213.htm">Here-Strings</a><a class="toc0" href="part214.htm">Multiple Redirections</a><a class="toc0" href="part215.htm">Null Redirections as Shortcuts</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part211.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part213.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
