<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>The Terminal in Cygwin</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part123.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part125.htm">Next &gt;</a></p><p class="s35" style="padding-left: 40pt;text-indent: 0pt;text-align: left;"><a name="bookmark236">The Terminal in Cygwin</a></p><p style="padding-top: 5pt;padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">Under Cygwin, you do not usually use a terminal emulator like <span class="s33">xterm </span>as a separate program. Windows remembers which programs don’t start with their own windows. It then uses its own built-in version of a terminal emulator whenever it finds a program of that kind. This includes shells and the “command prompt,” Windows’ own version of a shell. (Sometimes Windows people talk about a command prompt where Unix people might say “terminal emulator” or “shell window”.) In Figure 5-1 we show how the Cygwin window looks when running <span class="s33">zsh</span>. It’s quite similar to a Unix terminal emulator.</p><p class="s29" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><span class="s27">120 </span>CHAPTER 5 <span class="s28">■ </span>ST ARTI NG THE SHELL </p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 42pt;text-indent: 0pt;text-align: left;"><span><img width="428" height="232" alt="image" src="Image_151.gif"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s13" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">Figure 5-1. <span class="s32">The Cygwin window running a zsh session</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">You can create a link to the shell to make it easier to start. Add an entry to the Start menu pointing to <span class="s33">bash </span>or <span class="s33">zsh</span>, or create a shortcut on your desktop. Then you can use that to start a new shell. This is typically done for <span class="s33">bash </span>when Cygwin is installed; in fact, you may start it under the name <span class="s33">Cygwin </span>rather than <span class="s33">bash</span>.</p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">If you start a shell from inside a window, it works just as it does in Unix, running within the current window rather than creating a new one. This is the simplest way of starting a <span class="s33">zsh</span>.</p><p style="padding-left: 59pt;text-indent: 0pt;line-height: 10pt;text-align: left;">To get <span class="s33">zsh </span>running by itself, create a new shortcut in the desktop:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 72pt;text-indent: -12pt;line-height: 114%;text-align: left;"><span class="s13">1. </span>Right-click on the desktop, then select the New menu and the item Shortcut. The target is simply the <span class="s33">zsh </span>executable. Remember that you need a Windows path here, not a Cygwin one: give the path to the Cygwin root directory, then the path down to <span class="s33">zsh </span>using backslashes. For example, if Cygwin was installed in <span class="s33">C:\Cygwin</span>, and inside Cygwin <span class="s33">zsh </span>is installed in <span class="s33">/usr/local/bin</span>, the path is <span class="s33">C:\Cygwin\usr\local\bin\zsh.exe</span>.</p><p style="padding-top: 6pt;padding-left: 59pt;text-indent: 0pt;text-align: left;"><span class="s13">2. </span>Make sure <span class="s33">zsh </span>can find the Cygwin library when it starts up. This library is the file</p><p class="s33" style="padding-top: 1pt;padding-left: 72pt;text-indent: 0pt;text-align: left;">cygwin1.dll<span class="p">.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 73pt;text-indent: -11pt;line-height: 115%;text-align: left;">• The library is usually in the main <span class="s33">/bin </span>directory, since Windows doesn’t necessarily know about Cygwin’s command search path.</p><p style="padding-top: 7pt;padding-left: 73pt;text-indent: -11pt;line-height: 114%;text-align: left;">• If <span class="s33">zsh.exe </span>is in the same directory as <span class="s33">cygwin1.dll</span>, there is no problem. Otherwise, you may need to edit the Windows path to include <span class="s33">/bin</span>, which in the example above is referred to as <span class="s33">C:\Cygwin\bin</span>.</p><p style="padding-top: 7pt;padding-left: 73pt;text-indent: -11pt;line-height: 115%;text-align: left;">• An easy trick is to copy <span class="s33">cygwin1.dll </span>into the directory where <span class="s33">zsh </span>is; however, you have to remember to keep this copy in sync with the original if you upgrade, so this isn’t without its problems.</p><p style="padding-top: 7pt;padding-left: 41pt;text-indent: 18pt;line-height: 114%;text-align: left;">If everything worked, the desktop should now have an icon with the <span class="s33">zsh </span>logo, which you can see in the top left-hand corner of Figure 5-1. Double-clicking on the icon should start <span class="s33">zsh </span>in its own window. The icon appears because <span class="s33">zsh </span>recognizes when it is compiled under Cygwin</p><p class="s29" style="padding-top: 3pt;padding-left: 275pt;text-indent: 0pt;text-align: left;"><a name="bookmark250">CHAPTER 5 </a><span class="s28">■ </span>STARTING THE SHELL <span class="s27">121</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">and appends the icon to the executable in a way Windows recognizes. We apologize for the way it looks; it was designed by a graphical illiterate (one of the authors of this book). If Cygwin is properly installed, things inside the safe haven of this window should work pretty much as they do under Unix.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: justify;">The obvious method for copy and paste is the normal Copy and Paste entries in the Edit menu. These are always available. (Of course, you can’t copy text until you’ve selected some, and you can’t paste it until you’ve copied it.)</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">There is also a shortcut that allows you to do copy and paste with the mouse alone, like <span class="s33">xterm </span>in Unix. Right-click the title bar, select Properties, go to the Options tab if it’s not already there, and check the Quick Edit Mode box. On recent versions of Windows, you can then specify that this should apply to the icon that started this window, so you don’t need to set it again.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: justify;">When you have turned Quick Edit mode on, you can copy by selecting the start and end of the region with the left mouse button and clicking the right mouse button. Then you paste it by clicking the right mouse button again.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: justify;">If you find your terminal appears to be stuck and won’t accept input, it may be because it’s waiting for you to finish selecting a region. Either another left-click or pressing the Return key will restore normal operation.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part123.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part125.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
