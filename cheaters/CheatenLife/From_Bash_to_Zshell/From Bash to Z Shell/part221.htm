<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Picking the Right Range of Characters</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part220.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part222.htm">Next &gt;</a></p><p class="s18" style="padding-left: 40pt;text-indent: 0pt;text-align: left;"><a name="bookmark411">Picking the Right Range of Characters</a></p><p style="padding-top: 5pt;padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">If you tried out some of these last examples you may have found that, on your system, <span class="s33">[A-Z] </span>is actually matching both upper- and lowercase letters. The traditional way of determining whether a particular character is in a range simply uses the relative positions of the characters in the character set. For Unix, in the past, that always meant the ASCII character set. In ASCII, all the 26 uppercase letters appear in unbroken order. The 26 lowercase letters follow on a little later, again in order. Most notably, this means that Z appears before a, and <span class="s33">[A-Z] </span>only matches the uppercase letters.</p><p style="padding-left: 40pt;text-indent: 17pt;line-height: 115%;text-align: left;">Unfortunately, as character sets have been extended to allow for further characters, problems have become apparent. For instance, <span class="s33">[A-Z] </span>would not match Ä. Also, even in the English language, conventional dictionary order would not put Z before a.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">The modern way of handling a character class involves using the <i>collation order </i>for the current <i>locale</i>. We explain more about this in the section “Internationalization and Locales,” later in this chapter. <span class="s33">zsh </span>still does things the old way, but even if you use <span class="s33">zsh</span>, you may find that character classes in regular expressions handled by commands like <span class="s33">grep </span>work differently from how they work in the shell. The collation order is even used by commands like <span class="s33">ls </span>to determine the order in which files are listed.</p><p class="s29" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark453"><span class="s27">204 </span></a>CHAPTER 9 <span class="s28">■ </span>PATTER N MATCHING </p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s33" style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;"><span class="p">To allow things like uppercase letters to be matched, most modern Bourne-shell variants have an extension that lets you use names for character classes. You simply include an extra set of brackets, with a colon before and after the name, giving the complete result </span>[[:<span class="s32">name</span>:]]<span class="p">. (This form isn’t available in older shells; it was added by POSIX, a standard for Unix-like operating systems.) The possible names are shown in Table 9-2.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s13" style="padding-top: 4pt;padding-bottom: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">Table 9-2. <span class="s32">Named Ranges for Character Sets</span></p><p style="padding-left: 6pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="508" height="1" alt="image" src="Image_190.png"/></span></p><p class="s48" style="padding-bottom: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">Name Explanation</p><p style="padding-left: 6pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="508" height="1" alt="image" src="Image_191.png"/></span></p><p class="s61" style="padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">alnum <span class="s51">A letter or number.</span></p><p class="s61" style="padding-top: 7pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">alpha <span class="s51">A letter.</span></p><p class="s61" style="padding-top: 7pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">ascii <span class="s51">A character in the ASCII set.</span></p><p class="s61" style="padding-top: 7pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">blank <span class="s51">A space or tab. This is a GNU extension and might not always be available.</span></p><p class="s61" style="padding-top: 7pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">cntrl <span class="s51">A control character.</span></p><p class="s61" style="padding-top: 7pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">digit <span class="s51">A decimal digit (number).</span></p><p class="s61" style="padding-top: 7pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">graph <span class="s51">A printable character, but not a space.</span></p><p class="s61" style="padding-top: 7pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">lower <span class="s51">A lowercase character.</span></p><p class="s61" style="padding-top: 7pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">print <span class="s51">A printable character including space.</span></p><p class="s61" style="padding-top: 7pt;padding-left: 80pt;text-indent: -74pt;line-height: 109%;text-align: left;">punct <span class="s51">A punctuation character, meaning any printable character that is neither alphanumeric nor one of the space characters.</span></p><p class="s61" style="padding-top: 6pt;padding-left: 80pt;text-indent: -74pt;line-height: 109%;text-align: left;">space <span class="s51">A white-space character, usually space, (horizontal) tab, newline, carriage return plus the less usual vertical tab and form feed.</span></p><p class="s61" style="padding-top: 6pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">upper <span class="s51">An uppercase letter.</span></p><p class="s61" style="padding-top: 5pt;padding-bottom: 4pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">xdigit <span class="s51">A hexadecimal digit; an upper- or lowercase “a” to “f,” or a digit.</span></p><p style="padding-left: 6pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="508" height="1" alt="image" src="Image_192.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 59pt;text-indent: 0pt;text-align: left;">This allows you to be more explicit in testing for files beginning with an uppercase character:</p><p class="s33" style="padding-top: 8pt;padding-left: 3pt;text-indent: 0pt;text-align: center;">%  <b>echo [[:upper:]]*</b></p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">Mail  MSG</p><p style="padding-top: 8pt;padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">Note that the inner bracketed component works just like any other part of a character class. This means you can negate it, or combine it with other things:</p><p class="s33" style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">% <b>echo [^[:alpha:]]*</b></p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">1foo</p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">% <b>echo [[:digit:]m]*</b></p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">1foo msg.txt</p><p style="padding-top: 8pt;padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">Named ranges are often safer for scripts. However, they are still affected by international- ization. This means, for example, there may be differences in which characters are regarded as letters of the alphabet. This is usually an advantage. For example, as long as the shell has been told what character set you are using, you can pick up all uppercase characters, including accented ones.</p><p class="s29" style="padding-top: 3pt;padding-left: 280pt;text-indent: 0pt;text-align: left;"><a name="bookmark454">CHAPTER 9 </a><span class="s28">■ </span>PATTER N MATCHIN G <span class="s27">205</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part220.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part222.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
