<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Approximate Matching</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part386.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part388.htm">Next &gt;</a></p><h4 style="padding-top: 5pt;padding-left: 40pt;text-indent: 0pt;text-align: left;"><a name="bookmark718">Approximate Matching</a></h4><p class="s33" style="padding-top: 6pt;padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: justify;">zsh <span class="p">allows you to use patterns that match a given string approximately—in other words, strings that don’t exactly match the pattern you have given but are close. It’s not so common to need this feature in a pattern to find files typed on the command line, so we’ve kept the description of approximate matching until we needed it.</span></p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">To turn on approximation, use <span class="s33">(#a</span><i>num</i><span class="s33">)</span>, where <i>num </i>gives the number of mistakes you are prepared to allow. The <span class="s33">extended_glob </span>option must be set. Each mistake is any one of the following:</p><p style="padding-top: 7pt;padding-left: 56pt;text-indent: 0pt;text-align: left;">• A character omitted that should be present</p><p style="padding-top: 8pt;padding-left: 56pt;text-indent: 0pt;text-align: left;">• A character present that shouldn’t be there</p><p style="padding-top: 8pt;padding-left: 56pt;text-indent: 0pt;text-align: left;">• A character replaced by an incorrect character</p><p style="padding-top: 8pt;padding-left: 58pt;text-indent: -2pt;line-height: 186%;text-align: left;">• Any two characters transposed (in the wrong order) Here are some simple examples:</p><p class="s33" style="padding-left: 40pt;text-indent: 0pt;line-height: 10pt;text-align: justify;">zsh% <b>ls</b></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: justify;">AAREADME AREADME READ.ME.txt README READ_ME READme REARME ReAdMe</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: justify;">zsh% <b>echo (#a1)README</b></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: justify;">AREADME README READ_ME REARME</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: justify;">zsh%  echo  (#i)(#a1)README</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: justify;">AREADME README READ_ME READme REARME ReAdMe</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: justify;">zsh% <b>echo (#a2)README</b></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: justify;">AAREADME AREADME README READ_ME READme REARME</p><p style="padding-top: 8pt;padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">Note how turning on case-insensitive completion with <span class="s33">(#i) </span>allowed us more matches without the need to approximate. (We could have written <span class="s33">(#ia1) </span>instead of <span class="s33">(#i)(#a1)</span>.) With <span class="s33">(#i)</span>, <span class="s33">READme </span>matches <span class="s33">README </span>with no errors; without it, it gives two. Approximation is behind the use of approximate completion we saw in the section “Approximate Completion” in Chapter 10.</p><p class="s29" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark739"><span class="s27">362 </span></a>CHAPTER 14 <span class="s28">■ </span>WRITING EDITOR CO MMANDS </p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">Approximation is implemented fairly simply and applies only to strings, not to other patterns. For example, <span class="s33">[a-z] </span>will always only match a single lowercase ASCII letter, regardless of approximation. You can mix approximation with the case-insensitive matching introduced in the section “Case-Insensitive Matching” in Chapter 9. With both together, <span class="s33">a </span>matches <span class="s33">a </span>or <span class="s33">A </span>without approximating, but any other letter would require an approximation.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part386.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part388.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
