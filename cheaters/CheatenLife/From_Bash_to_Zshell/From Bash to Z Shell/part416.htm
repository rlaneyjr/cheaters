<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Ordering with File Completion</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part415.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part417.htm">Next &gt;</a></p><p class="s35" style="padding-left: 42pt;text-indent: 0pt;text-align: left;"><a name="bookmark768">Ordering with File Completion</a></p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;line-height: 115%;text-align: left;">For filename completion, there is somewhat separate handling for ordering different types of matches. This is controlled by the <span class="s33">file-patterns </span>style. Handling this style is actually all that</p><p class="s33" style="padding-left: 41pt;text-indent: 0pt;line-height: 115%;text-align: left;">_files <span class="p">does. Everything else is done in a function named </span>_path_files<span class="p">. If you ever need to exert more direct control over filename completion in a function, you can call </span>_path_files <span class="p">directly.</span></p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">In the section “A Brief Tour of Programmable Completion” in Chapter 10, we said that completion after <span class="s33">gunzip </span>would fall back and try to match all files if no <span class="s33">.gz </span>files match. This is actually controlled by the <span class="s33">file-patterns </span>style. <span class="s33">file-patterns </span>acts like <span class="s33">tag-order </span>but allows you to associate glob patterns with tags. By default, files are divided up by three separate tags: <span class="s33">globbed-files</span>, <span class="s33">directories</span>, and <span class="s33">all-files</span>. Completion for them is tried in that order.</p><p style="padding-left: 41pt;text-indent: 17pt;line-height: 115%;text-align: left;">It is common to want directories and files to be completed together—so common, in fact, that this has been made the default in <span class="s33">zsh </span>4.2. You can do this with the following style:</p><p class="s33" style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">zstyle  &#39;:completion:*&#39;  file-patterns  \</p><p class="s33" style="padding-top: 1pt;padding-left: 59pt;text-indent: 0pt;text-align: left;">&#39;%p:globbed-files  *(-/):directories&#39;  &#39;*:all-files&#39;</p><p style="padding-top: 8pt;padding-left: 41pt;text-indent: 17pt;line-height: 115%;text-align: left;">This is very similar to the <span class="s33">tag-order </span>style except that instead of needing to use <span class="s33">ignored-patterns</span>, a glob pattern is specified here directly. The <span class="s33">%p </span>is expanded to the glob pattern specified with the <span class="s33">-g </span>option to <span class="s33">_files</span>.</p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">You can use this to handle additional filename extensions for a command. In fact you can even use it in lieu of a completion function if all you want to do is restrict the types of file completed for a particular command.</p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">The following example causes OpenOffice.org files to be completed in addition to other zip files after <span class="s33">unzip</span>: they are actually zip files so this could be useful if you routinely want to poke around inside them.</p><p class="s33" style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">zstyle  &#39;:completion:*:unzip:*&#39;  file-patterns  \</p><p class="s33" style="padding-top: 1pt;padding-left: 59pt;text-indent: 0pt;text-align: left;">&#39;*.sxw(-.):ooffice-files  %p:globbed-files  *(/):directories&#39;  &#39;*:all-files&#39;</p><p class="s29" style="padding-top: 3pt;padding-left: 223pt;text-indent: 0pt;text-align: left;"><a name="bookmark810">CHAPTER 15 </a><span class="s28">■ </span>W RIT ING COMP LET ION F UNCTI ON S <span class="s27">399</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">Note how we have used the <span class="s33">(-.) </span>glob qualifier that we used with <span class="s33">_files</span>&#39; <span class="s33">-g </span>option. This ensures that no directories are matched. Sometimes the globbed files may include directories. If you want all nondirectories to be completed first, and only then directories, you would need to use this:</p><p class="s33" style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">zstyle &#39;:completion:*&#39; file-patterns \</p><p class="s33" style="padding-top: 1pt;padding-left: 58pt;text-indent: 0pt;text-align: left;">&#39;%p(^-/):globbed-files&#39; &#39;*(-/):directories&#39; &#39;*:all-files&#39;</p><p style="padding-top: 8pt;padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">This adds a glob qualifier to any pattern specified by the completion function to restrict matched files to those that are not directories.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">The <span class="s33">all-files </span>fallback is useful because every now and then, files don’t have the right suffix. The fallback is used if no matches are produced for the preceding tags, but you can also get to it with the <span class="s33">_next_tags </span>widget introduced in the section “Tag Ordering” earlier in this chapter. For example:</p><p class="s33" style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">% <b>ls</b></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">attachment initrd.tgz picture.png zsh-4.0.9.tar.gz</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">% <b>zcat &lt;tab&gt;</b></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">initrd.tgz zsh-4.0.9.tar.gz</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">% <b>zcat &lt;ctrl-x&gt;&lt;n&gt;</b></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">attachment initrd.tgz picture.png zsh-4.0.9.tar.gz</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part415.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part417.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
