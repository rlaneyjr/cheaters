<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>File Descriptors</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part209.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part211.htm">Next &gt;</a></p><p class="s35" style="padding-left: 42pt;text-indent: 0pt;text-align: left;"><a name="bookmark375">File Descriptors</a></p><p style="padding-top: 5pt;padding-left: 42pt;text-indent: 0pt;line-height: 115%;text-align: left;">Like <i>standard input </i>and <i>standard output</i>, the shells have a <i>standard error </i>channel. By default, anything written to standard error goes to the same place as standard output, such as the terminal. The main use is to allow error messages to appear on your terminal when you have redirected standard output to a file. Together, standard input, output, and error can be referred to as standard channels.</p><p style="padding-left: 42pt;text-indent: 18pt;line-height: 115%;text-align: left;">The three standard channels are associated with numbers called <i>file descriptors</i>. This comes from a low-level feature of Unix—every input, output, and error channel associated with a process has a file descriptor. It’s usually a small number, since the numbers are assigned starting from 0 up. The three standard channels all have fixed numbers:</p><p style="padding-top: 7pt;padding-left: 60pt;text-indent: 0pt;text-align: left;">0: Standard input</p><p style="padding-top: 8pt;padding-left: 60pt;text-indent: 0pt;text-align: left;">1: Standard output</p><p style="padding-top: 8pt;padding-left: 60pt;text-indent: 0pt;text-align: left;">2: Standard error</p><p class="s29" style="padding-top: 3pt;padding-left: 263pt;text-indent: 0pt;text-align: left;">CHAPTER 8 <span class="s28">■ </span>FILES AND D I RECTORIES <span class="s27">189</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">The numbers are valuable because you can use them with the shell’s redirection feature to tell the shell where to send the output or to take the input. We haven’t needed that because</p><p class="s33" style="padding-left: 40pt;text-indent: 0pt;line-height: 10pt;text-align: left;">&gt;file <span class="p">is shorthand for </span>1&gt;file<span class="p">. Also, </span>&lt;file <span class="p">is shorthand for </span>0&lt;file<span class="p">.</span></p><p style="padding-top: 1pt;padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">We showed you an example of this in the sidebar “Making Error and Progress Messages” in Chapter 2. Here’s another example:</p><p class="s33" style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">% <b>cat example.sh</b></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">echo  This  is  output  from  the  program.</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">echo  This  is  an  error  message.    Something  is  wrong.  1&gt;&amp;2</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">% <b>bash example.sh &gt;output.txt</b></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">This is an error message. Something is wrong.</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">% <b>cat output.txt</b></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">This is output from the program.</p><p style="padding-top: 8pt;padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">You can see that we’ve separated error messages and output. The error messages go to the terminal while the output goes to a file named <span class="s33">output.txt</span>. That <span class="s33">1&gt;&amp;2 </span>isn’t completely obvious at first: it means “take the standard output of the command, and instead send it to file descriptor 2,” which is standard error. You can think of it as <i>copying </i>the file descriptor 1 onto 2—that’s more or less how it actually works.</p><p style="padding-left: 58pt;text-indent: 0pt;line-height: 10pt;text-align: left;">There’s nothing to stop you redirecting file descriptor 2 as well, however:</p><p class="s33" style="padding-top: 8pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">% <b>bash example.sh &gt;output.txt 2&gt;error.txt</b></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">% cat output.txt</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">This is output from the program.</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">% cat error.txt</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">This is an error message. Something is wrong.</p><p style="padding-top: 8pt;padding-left: 58pt;text-indent: 0pt;text-align: left;">Without the <span class="s33">&amp;</span>, what follows <span class="s33">2&gt; </span>is a filename instead of another file descriptor. It’s just like</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;line-height: 114%;text-align: left;">&gt; <span class="p">except that it redirects file descriptor 2, standard error. You can use the </span>/dev/null <span class="p">special file instead of </span>error.txt <span class="p">to discard the error messages completely.</span></p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: justify;">You can use the shell’s special <span class="s33">exec </span>command to reassign file descriptors to one another. The changes remain in effect for the rest of the shell, or until you reassign the file descriptors. You will usually only need this in scripts or functions. Here’s an example that saves the standard output channel, redirects it temporarily to a file, then restores it:</p><p class="s33" style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;"># <i>Save the normal standard output by using file descriptor 3.</i></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">exec 3&gt;&amp;1</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;"># <i>Redirect standard output to a file.</i></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">exec &gt;output.txt</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">echo  &quot;This  is  output  from  the  script,  with  no  special  redirection.&quot;</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;"># <i>Restore normal output by copying standard output back to 3.</i></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">exec 1&gt;&amp;3</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">echo &quot;Normal output has been restored&quot;</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;"># <i>To be tidy, we can use the special symbol - to close 3.</i></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">exec 3&gt;&amp;-</p><p class="s29" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark401"><span class="s27">190 </span></a>CHAPTER 8 <span class="s28">■ </span>FILES AND DIRECTORIES </p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 114%;text-align: justify;">Save this in a file and run it as a script (<span class="s33">bash ./</span><span class="s45">filename</span>) and see what goes to the terminal, and what lands in the file <span class="s33">output.txt</span>. All the redirections we’ve shown are allowed after <span class="s33">exec</span>. This works in both <span class="s33">bash </span>and <span class="s33">zsh</span>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part209.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part211.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
