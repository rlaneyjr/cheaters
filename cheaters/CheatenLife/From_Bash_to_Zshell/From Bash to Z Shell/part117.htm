<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>zsh Startup Files</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part116.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part118.htm">Next &gt;</a></p><p class="s35" style="padding-left: 40pt;text-indent: 0pt;text-align: left;"><a name="bookmark229">zsh Startup Files</a></p><p style="padding-top: 5pt;padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: justify;">The concepts behind <span class="s33">zsh </span>startup files are similar to those for <span class="s33">bash</span>, but the actual files are different. The syntax of <span class="s33">zsh </span>is sufficiently unlike that of <span class="s33">bash </span>that having different startup files is probably a good thing.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: justify;">When <span class="s33">zsh </span>starts, it can execute up to eight different files. That’s a lot, and you’ll never need all of them. Many of the files correspond to those in <span class="s33">bash</span>, and so have similar names. The extra files are mostly because <span class="s33">zsh </span>allows more <i>global </i>startup files (startup files executed for all users). Also, the <span class="s33">.login </span>and <span class="s33">.profile </span>variants have come from different predecessors of <span class="s33">zsh</span>, <span class="s33">csh</span>, and <span class="s33">sh</span>. You probably won’t need both variants. Here is a complete list (in order) in which the files are considered by the shell to see if they should be executing:</p><p class="s29" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark242"><span class="s27">112 </span></a>CHAPTER 5 <span class="s28">■ </span>ST ARTI NG THE SHELL </p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s33" style="padding-left: 59pt;text-indent: 0pt;line-height: 114%;text-align: left;">/etc/zshenv—<span class="p">This is the only file that is always executed. This is a file for all users, written by the system administrator, as are all the files stored in the directory </span>/etc<span class="p">.</span></p><p class="s33" style="padding-top: 7pt;padding-left: 59pt;text-indent: 0pt;line-height: 115%;text-align: left;">~/.zshenv—<span class="p">This is a file in your own home directory, abbreviated </span>~<span class="p">. (Type </span>echo ~ <span class="p">to see the full name of the directory.) This is executed as long as the option </span>rcs <span class="p">is turned on, which is true by default. The only purpose of this option is to tell the shell to execute startup files apart from </span>/etc/zshenv<span class="p">. We’ll describe what shell options are for, and how to turn them on or off, in the section “Shell Options” later in this chapter. This option is here for exactly the purpose of deciding whether startup files are executed. This is where you put stuff of your own to run at the start of all shells, interactive or not.</span></p><p class="s33" style="padding-top: 7pt;padding-left: 59pt;text-indent: 0pt;line-height: 115%;text-align: left;">/etc/zprofile—<span class="p">This is executed if the options </span>rcs<span class="p">, </span>globalrcs<span class="p">, and </span>login <span class="p">are set. The option </span>globalrcs <span class="p">is normally turned on, like </span>rcs<span class="p">. Its only purpose is to tell the shell to execute the startup files beginning with </span>/etc<span class="p">, apart from </span>/etc/zshenv<span class="p">, which is always executed. Note that old versions of </span>zsh <span class="p">don’t have the option </span>globalrcs<span class="p">. The option </span>login <span class="p">is turned on automatically by the shell if it is a login shell, otherwise it isn’t; again, the option has no other purpose.</span></p><p class="s33" style="padding-top: 7pt;padding-left: 59pt;text-indent: 0pt;line-height: 114%;text-align: left;">~/.zprofile—<span class="p">This is executed if the options </span>login <span class="p">and </span>rcs <span class="p">are turned on; in other words, the same as for </span>/etc/zprofile<span class="p">, except the </span>globalrcs <span class="p">isn’t used.</span></p><p class="s33" style="padding-top: 7pt;padding-left: 59pt;text-indent: 0pt;text-align: left;">/etc/zshrc—<span class="p">This is executed if the options </span>interactive<span class="p">, </span>rcs<span class="p">, and </span>globalrcs <span class="p">are turned on.</span></p><p class="s33" style="padding-top: 8pt;padding-left: 59pt;text-indent: 0pt;line-height: 115%;text-align: left;">~/.zshrc—<span class="p">This is executed if the options </span>interactive <span class="p">and </span>rcs <span class="p">are turned on. This is probably the most commonly used startup file, since it’s the normal user startup file for interactive shells.</span></p><p class="s33" style="padding-top: 7pt;padding-left: 59pt;text-indent: 0pt;text-align: left;">/etc/zlogin—<span class="p">This is executed if the options </span>login<span class="p">, </span>rcs<span class="p">, and </span>globalrcs <span class="p">are turned on.</span></p><p class="s33" style="padding-top: 8pt;padding-left: 59pt;text-indent: 0pt;line-height: 115%;text-align: left;">~/.zlogin—<span class="p">This is executed if the options </span>login <span class="p">and </span>rcs <span class="p">are turned on. </span>/etc/zlogin <span class="p">and </span>~/.zlogin <span class="p">are only different from </span>/etc/zprofile <span class="p">and </span>~/.zprofile <span class="p">because of the execution order. It’s up to you to decide if you want the script that runs at login to run before or after </span>~/.zshrc<span class="p">.</span></p><p style="padding-top: 7pt;padding-left: 41pt;text-indent: 19pt;line-height: 115%;text-align: left;">The options <span class="s33">login </span>and <span class="s33">interactive </span>are the same as the <span class="s33">-l </span>and <span class="s33">-i </span>options you can pass to the shell, the ones we described earlier, which are usually turned on automatically. Since you don’t usually set these options yourself, you can think of them simply as a way of telling whether the shell is a login shell or an interactive shell.</p><p style="padding-left: 41pt;text-indent: 20pt;line-height: 115%;text-align: left;">As we said, the options <span class="s33">rcs </span>and <span class="s33">globalrcs </span>are usually turned on by default. If you want, you can turn them off by passing the options <span class="s33">-f </span>and <span class="s33">-o noglobalrcs</span>, respectively, to the shell. Note also you can even turn them on inside startup files. For example, suppose you issue the following command in the file <span class="s33">~/.zshenv</span>:</p><p class="s33" style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">setopt noglobalrcs</p><p style="padding-top: 8pt;padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: justify;">The result is that the files <span class="s33">/etc/zprofile</span>, <span class="s33">/etc/zshrc</span>, and <span class="s33">/etc/zlogin </span>would be skipped. You’d only do that if you’ve found there’s some stuff there you don’t want executed (for example it’s too slow or sets aliases you don’t want to use).</p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 114%;text-align: left;">There is no way to skip <span class="s33">/etc/zshenv </span>(other than some of the tricks we’ll discuss in the section “Porting Scripts” in Chapter 13 to convince <span class="s33">zsh </span>it’s a different shell). That means that it’s usually a good idea to put only things you really need every time anyone starts <span class="s33">zsh</span>. That’s</p><p class="s29" style="padding-top: 3pt;padding-left: 275pt;text-indent: 0pt;text-align: left;"><a name="bookmark243">CHAPTER 5 </a><span class="s28">■ </span>STARTING THE SHELL <span class="s27">113</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">particularly important if your system is used by people other than you. (If you need, you can put tests in <span class="s33">/etc/zshenv</span>, like the one we showed for an interactive shell in the section “bash Startup Files” earlier in this chapter.)</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">By and large, you will probably put most startup commands in <span class="s33">~/.zshrc</span>, and possibly transfer them to <span class="s33">~/.zshenv </span>if you find that you need the settings in noninteractive shells. One case for putting things in <span class="s33">~/.zshenv </span>is that it is used by <span class="s33">zsh </span>when started from within other programs to execute commands. For example, within the Emacs editor, you can search files using <span class="s33">M-x grep</span>; Emacs prompts you for a pattern and a list of files to search, and then passes the list to your shell for wildcards in it to be expanded. You can make sure <span class="s33">zsh </span>will use its advanced wildcard (globbing) features here by putting</p><p class="s33" style="padding-top: 6pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">setopt extended_glob</p><p style="padding-top: 8pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">inside <span class="s33">~/.zshenv</span>.</p><p style="padding-top: 1pt;padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">Here’s a simple but fairly typical <span class="s33">~/.zshrc </span>file. The code consists of things we’ll cover in Part 2 of the book:</p><p class="s33" style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;"># <span class="s32">Turn on some options.</span></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">setopt auto_cd # <span class="s32">Change directory by typing a directory name on its own.</span></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">setopt extended_glob # <span class="s32">Turn on the more powerful pattern matching features.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s33" style="padding-left: 40pt;text-indent: 0pt;text-align: left;"># <span class="s32">Set some variables.</span></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;"># <span class="s32">Use 1000 history lines internally, save all of them</span></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;"># <span class="s32">to the file ~/.history </span>HISTSIZE=1000 SAVEHIST=1000</p><p class="s33" style="padding-left: 40pt;text-indent: 0pt;line-height: 10pt;text-align: left;">HISTFILE=~/.history</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s33" style="padding-left: 40pt;text-indent: 0pt;text-align: left;"># <span class="s32">Define some aliases.</span></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">alias ll=&#39;ls -l&#39; alias pu=pushd</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s33" style="padding-left: 40pt;text-indent: 0pt;text-align: left;"># <span class="s32">Load the function-based completion system.</span></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">autoload -U compinit compinit</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part116.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part118.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
