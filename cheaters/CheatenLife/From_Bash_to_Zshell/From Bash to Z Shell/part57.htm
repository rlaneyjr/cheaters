<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Summary</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part56.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part58.htm">Next &gt;</a></p><h4 style="padding-left: 42pt;text-indent: 0pt;text-align: left;"><a name="bookmark91">Summary</a></h4><p style="padding-top: 6pt;padding-left: 43pt;text-indent: 0pt;text-align: left;">In summary, here’s what we’ve covered:</p><p style="padding-top: 8pt;padding-left: 67pt;text-indent: -10pt;line-height: 115%;text-align: left;">• A process (a program) has three places (standard output, standard error, and standard input) that you can redirect to or from a file. Redirecting output to an existing file erases the file first, but you can also append output to a file. A pipe redirects the <i>stdout </i>of one process to the <i>stdin </i>of another.</p><p style="padding-top: 7pt;padding-left: 67pt;text-indent: -10pt;line-height: 115%;text-align: left;">•   We searched for text with <span class="s33">grep </span>and <span class="s33">egrep</span>, paged through text with a pager program like <span class="s33">more </span>or <span class="s33">less</span>, sorted text with <span class="s33">sort</span>, made text into columns with <span class="s33">column </span>and <span class="s33">pr</span>, edited text on the fly with <span class="s33">cut </span>and <span class="s33">tr</span>, and more.</p><p style="padding-top: 7pt;padding-left: 67pt;text-indent: -10pt;line-height: 115%;text-align: left;">• You can continue a long command line by ending each line (except the last) with a backslash (<span class="s33">\</span>).</p><p style="padding-top: 7pt;padding-left: 67pt;text-indent: -10pt;line-height: 115%;text-align: left;">• The <span class="s33">for </span>and <span class="s33">foreach </span>loops step through a list of arguments one by one, putting each into a shell variable and then running a series of commands.</p><p style="padding-top: 7pt;padding-left: 67pt;text-indent: -10pt;line-height: 115%;text-align: left;">• Command substitution runs a command line, then replaces the command line with its standard output. This lets you make a command line that modifies itself.</p><p style="padding-top: 7pt;padding-left: 57pt;text-indent: 0pt;text-align: left;">• The <span class="s33">test </span>and <span class="s33">[ </span>commands test a file or an expression. They’re typically used with the <span class="s33">if</span></p><p style="padding-top: 1pt;padding-left: 67pt;text-indent: 0pt;text-align: left;">statement for a “true or false” decision.</p><p style="padding-top: 8pt;padding-left: 67pt;text-indent: -10pt;line-height: 115%;text-align: left;">• To make a shell script, store a series of command lines in a file and give the file execute permission. To make a shell function, type its name followed by a series of commands inside curly braces. Then you can run the script or function by typing its name. If you have many shell scripts, making a <span class="s33">bin </span>directory and adding it to your shell’s <span class="s33">PATH </span>gives you a central storage place.</p><p style="padding-top: 7pt;padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">In the next chapter, we’ll wrap up this introduction by looking at a variety of useful shell features.</p><p style="text-indent: 0pt;text-align: left;"><span><img width="589" height="200" alt="image" src="Image_083.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s41" style="padding-top: 5pt;padding-left: 40pt;text-indent: 0pt;text-align: left;"><a name="bookmark117">C H A P T E R 3</a></p><p class="s42" style="padding-top: 9pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">■ ■ ■</p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part56.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part58.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
