<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Hard Links</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part184.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part186.htm">Next &gt;</a></p><p class="s18" style="padding-left: 40pt;text-indent: 0pt;text-align: left;"><a name="bookmark350">Hard Links</a></p><p style="padding-top: 5pt;padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">A <i>hard link </i>is really just another name for the same file, either in the same directory or some- where else. File renaming works by creating a hard link to the new filename:</p><p class="s33" style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">% <b>echo Hello &gt;firstname</b></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">% <b>mv firstname secondname</b></p><p style="padding-top: 8pt;padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">This example starts by creating a file <span class="s33">firstname </span>by writing the string <span class="s33">Hello </span>into it, then renames the file to <span class="s33">secondname</span>. Although the underlying process isn’t obvious, it does it by creating <span class="s33">secondname </span>as a hard link and removing <span class="s33">firstname</span>. Note that despite the name of the command <span class="s33">mv </span>it will always try simply to rename a file if it can; it will only actually move it if it needs to store the contents somewhere else—for example, on a different disk. Moving to a different directory on the same disk is done simply by renaming.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 114%;text-align: left;">You can make the system skip the delete stage by replacing the <span class="s33">mv </span>with <span class="s33">ln </span>for link. Now both names are valid, until you delete one of them. Here’s the <span class="s33">mv </span>example with the steps spelled out:</p><p class="s33" style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">%  <b>ln  firstname  secondname</b></p><p style="padding-top: 8pt;padding-left: 40pt;text-indent: 18pt;line-height: 114%;text-align: left;">The file now has two names, <span class="s33">firstname </span>and <span class="s33">secondname</span>. You can see this from the following command. The <span class="s33">2 </span>in the second column for each file is the number of links to the file:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:37.655pt" cellspacing="0"><tr style="height:12pt"><td style="width:56pt"><p class="s49" style="padding-left: 2pt;text-indent: 0pt;line-height: 10pt;text-align: left;">%  <b>ls  -l</b></p></td><td style="width:241pt" colspan="3"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:12pt"><td style="width:56pt"><p class="s49" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">-rw-r--r--</p></td><td style="width:41pt"><p class="s49" style="padding-right: 8pt;text-indent: 0pt;text-align: right;">2 pws</p></td><td style="width:58pt"><p class="s49" style="padding-left: 8pt;text-indent: 0pt;text-align: left;">users</p></td><td style="width:142pt"><p class="s49" style="padding-right: 6pt;text-indent: 0pt;text-align: right;">6 Jun 24 22:41 firstname</p></td></tr><tr style="height:11pt"><td style="width:56pt"><p class="s49" style="padding-left: 2pt;text-indent: 0pt;line-height: 10pt;text-align: left;">-rw-r--r--</p></td><td style="width:41pt"><p class="s49" style="padding-right: 8pt;text-indent: 0pt;line-height: 10pt;text-align: right;">2 pws</p></td><td style="width:58pt"><p class="s49" style="padding-left: 8pt;text-indent: 0pt;line-height: 10pt;text-align: left;">users</p></td><td style="width:142pt"><p class="s49" style="padding-right: 2pt;text-indent: 0pt;line-height: 10pt;text-align: right;">6 Jun 24 22:41 secondname</p></td></tr></table><p style="padding-top: 8pt;padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: justify;">How can you tell they’re really the same file? Unix assigns a unique number to each file on a filesystem, called the <i>inode</i>. The option <span class="s33">-i </span>to <span class="s33">ls </span>shows this number; you can combine <span class="s33">-i </span>with the <span class="s33">-l </span>as <span class="s33">ls  -li</span>, if you like. The following code shows that the inodes of the two files are the same:</p><p class="s33" style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">%  <b>ls  -i</b></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">653340 firstname 653340 secondname</p><p style="padding-top: 8pt;padding-left: 58pt;text-indent: 0pt;text-align: left;">Now we delete the original name of the file, leaving the second as the only name:</p><p class="s33" style="padding-top: 8pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">%  <b>rm  firstname</b></p><p style="padding-top: 8pt;padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">The details of renaming and moving files can be more complicated. In particular, if a file is moved to a different filesystem, it always needs to be copied. This means that making a hard link isn’t sufficient. Therefore, moving a large file to a different filesystem takes a lot more work than moving it somewhere else on the same filesystem. Another detail is that modern Unix systems can perform renaming in a single step. This means that programs will always see either the old name or the new one for a file.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part184.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part186.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
