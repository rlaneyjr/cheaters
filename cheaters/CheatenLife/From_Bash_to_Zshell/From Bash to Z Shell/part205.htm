<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Generating Numbers with Braces</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part204.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part206.htm">Next &gt;</a></p><p class="s35" style="padding-left: 42pt;text-indent: 0pt;text-align: left;"><a name="bookmark370">Generating Numbers with Braces</a></p><p style="padding-top: 5pt;padding-left: 42pt;text-indent: 0pt;line-height: 115%;text-align: justify;">Newer shells offer a couple of other additions. Instead of commas, you can use a pair of numbers with two dots in between to signify the complete range between the two numbers. This syntax is borrowed from Perl. In <span class="s33">zsh</span>, it is also possible to pad the numbers with leading zeros:</p><p class="s33" style="padding-top: 7pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">% <b>echo {1..10}</b></p><p class="s33" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">1 2 3 4 5 6 7 8 9 10</p><p class="s33" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">zsh% <b>echo {01..10}</b></p><p class="s33" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">01 02 03 04 05 06 07 08 09 10</p><p style="padding-top: 8pt;padding-left: 60pt;text-indent: 0pt;text-align: left;">This is often used in conjunction with files. The following creates 10 files from <span class="s33">data1.txt</span></p><p style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">to <span class="s33">data10.txt</span>:</p><p class="s33" style="padding-top: 8pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">% <b>touch data{1..10}.txt</b></p><p style="padding-top: 8pt;padding-left: 42pt;text-indent: 18pt;line-height: 115%;text-align: left;">Finally, there is a slightly more esoteric <span class="s33">zsh </span>option, <span class="s33">braceccl</span>, which is used with braces that don’t contain either a comma or two dots. The name is a little hard to remember, but the <span class="s33">ccl </span>stands for “character class.” With this option turned on, the shell generates the set of characters in the braces. The character <span class="s33">- </span>is special and turns into the range of characters, in the standard ASCII order, between the two:</p><p class="s33" style="padding-top: 7pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">zsh% <b>setopt braceccl</b></p><p class="s33" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">zsh% <b>echo BEFORE{a-e.}AFTER</b></p><p class="s33" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">BEFORE.AFTER BEFOREaAFTER BEFOREbAFTER BEFOREcAFTER BEFOREdAFTER BEFOREeAFTER</p><p style="padding-top: 8pt;padding-left: 42pt;text-indent: 18pt;line-height: 115%;text-align: left;">Note the characters are expanded in ASCII order regardless of the order they appear inside the braces.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part204.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part206.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
