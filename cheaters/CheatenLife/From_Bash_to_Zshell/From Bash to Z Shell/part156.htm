<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>The Special Prompt TIMEFORMAT</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part155.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part157.htm">Next &gt;</a></p><p class="s35" style="padding-left: 40pt;text-indent: 0pt;text-align: left;"><a name="bookmark297">The Special Prompt TIMEFORMAT</a></p><p style="padding-top: 5pt;padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">There’s a shell command <span class="s33">time </span>that you will find useful if you care how long programs take to execute. If you preface a command (strictly a pipeline, in other words either one command or a set of commands joined by <span class="s33">|</span>) with <span class="s33">time</span>, the shell tells you how long it took, possibly together with some other information about the commands that ran. We mention this here since <span class="s33">time </span>works by printing out the time taken in a format given by the variable <span class="s33">TIMEFORMAT</span>. The format works in a similar way to prompt escapes: the variable contains a string, with various escape sequences for information to output. In this case, the escape sequences are introduced by percent signs. Here is an example:</p><p class="s33" style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">bash$ <b>TIMEFORMAT=&quot;real: %3lR; user %3lU; system %3lS&quot;</b></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">bash$ <b>time sleep 5</b></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">real: 0m5.003s; user 0m0.000s; system 0m0.002s</p><p style="padding-top: 8pt;padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">This shows that the command we used—an instruction to do nothing for 5 seconds—actually took slightly over 5 seconds of real time (the value after <span class="s33">real:</span>). It took very little processing time, as shown by the values after <span class="s33">user: </span>and <span class="s33">system:</span>. The difference between these two numbers is more useful in programs you write yourself in C or another language that is compiled; in that case, the <span class="s33">user </span>time is the time taken for the code you see, and the <span class="s33">system </span>for functions that call into the system. For more on <span class="s33">TIMEFORMAT</span>’s behavior, see the <span class="s33">bash </span>manual (type <span class="s33">man  bash </span>and search for <span class="s33">TIMEFORMAT</span>). Note this is a compilation option for <span class="s33">bash</span>, so is not always available inside the shell.</p><p class="s29" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark326"><span class="s27">148 </span></a>C HA P T E R 7 <span class="s28">■ </span>P R O M P T S</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part155.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part157.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
