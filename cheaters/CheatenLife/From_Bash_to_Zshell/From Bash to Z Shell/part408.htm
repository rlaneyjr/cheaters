<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Messages and Guards</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part407.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part409.htm">Next &gt;</a></p><p class="s35" style="padding-left: 42pt;text-indent: 0pt;text-align: left;"><a name="bookmark760">Messages and Guards</a></p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;line-height: 115%;text-align: left;">Sometimes, it isn’t useful or possible to complete anything but it can still be handy if the completion system prompts users to let them know what they are expected to type. We saw this in the NEdit example for completion after <span class="s33">-line </span>where it prompts the user with “line number”. For printing such prompts, there is a helper function named <span class="s33">_message</span>, and using it is easy.</p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 10pt;text-align: left;">For example:</p><p class="s33" style="padding-top: 8pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">_message &#39;line number&#39;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 42pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="504" height="1" alt="image" src="Image_303.png"/></span></p><p class="s21" style="padding-top: 4pt;padding-left: 41pt;text-indent: 0pt;line-height: 114%;text-align: justify;">■<span class="s23">Note </span><span class="s19">You may see _message used with a -e option and a tag. This is an extension in version 4.2 of zsh that allows it to work with matches added using the fake style mentioned in the section “Defining Different Words to Complete” in Chapter 10.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 42pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="504" height="1" alt="image" src="Image_304.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">One issue that occasionally arises with these messages is that if they are used at the same time as completing something else, the message actually blocks completion from being unam- biguous. An example of this occurs in the completion for the <span class="s33">pine </span>e-mail program. There is a <span class="s33">-c </span>option that takes a numeric argument immediately after it, but there are also other options beginning with a “c” such as <span class="s33">-conf</span>. If you don’t have <span class="s33">pine </span>itself installed, its completion won’t work too well so try the following function to demonstrate the problem:</p><p class="s33" style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">#compdef pine</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s33" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">_arguments \</p><p class="s33" style="padding-top: 1pt;padding-left: 51pt;text-indent: 0pt;line-height: 115%;text-align: left;">&#39;-c+[specify  context  to  apply  to  -f  arg]:number&#39;  \ &#39;-conf[print  out  fresh  global  configuration]&#39;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 42pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="504" height="1" alt="image" src="Image_305.png"/></span></p><p class="s21" style="padding-top: 4pt;padding-left: 42pt;text-indent: 0pt;line-height: 117%;text-align: left;">■<span class="s23">Note </span><span class="s19">The plus sign after the -c is something we haven’t come across before. It specifies that the argument to -c can appear either immediately after “-c” or in the following word. In this position, you can also use a minus sign if the argument must be in the same word. An equals sign is also valid and specifies that the argument can be in the following word or the same word if there is an intervening equals sign (e.g., --from=file). Finally, there is =-, which restricts the argument to just this equals form.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 42pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="504" height="1" alt="image" src="Image_306.png"/></span></p><p class="s29" style="padding-top: 3pt;padding-left: 223pt;text-indent: 0pt;text-align: left;"><a name="bookmark802">CHAPTER 15 </a><span class="s28">■ </span>W RIT ING COMP LET ION F UNCTI ON S <span class="s27">391</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">Now try to complete the <span class="s33">-conf </span>option using this function. Here, we set the <span class="s33">format </span>style first because the descriptions help to illustrate what is happening:</p><p class="s33" style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">% <b>zstyle &#39;:completion:*:descriptions&#39; format %B%d%b</b></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">% <b>pine -co&lt;tab&gt; number</b></p><p class="s46" style="padding-left: 40pt;text-indent: 0pt;line-height: 10pt;text-align: left;">option</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">-conf -- print out fresh global configuration</p><p style="padding-top: 8pt;padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">It doesn’t complete because more than one type of thing is considered a candidate for completion: numbers and options. The helper function <span class="s33">_guard </span>works around this problem. It takes two arguments: the first specifies a pattern to match against what has been typed so far and the second specifies a message to display if the pattern matches. So for <span class="s33">pine</span>, we use the following specification:</p><p class="s33" style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">&quot;-c+[specify context to apply to -f arg]: :_guard &#39;[0-9]#&#39; number&quot;</p><p style="padding-top: 8pt;padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">Now, once the letter “o” of the <span class="s33">-conf </span>option has been typed, the pattern won’t match, thus allowing the option to be unambiguously completed.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part407.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part409.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
