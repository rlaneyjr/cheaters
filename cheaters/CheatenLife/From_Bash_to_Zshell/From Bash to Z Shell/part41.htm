<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Command History</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part40.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part42.htm">Next &gt;</a></p><h4 style="padding-left: 42pt;text-indent: 0pt;text-align: left;"><a name="bookmark51">Command History</a></h4><p style="padding-top: 6pt;padding-left: 42pt;text-indent: 0pt;line-height: 115%;text-align: left;">Thirty-some years ago, a typical Unix system didn’t have a mouse and a graphical terminal. In fact, it didn’t have a terminal at all. Many users used a teletype—that clattering machine, with a big keyboard and a roll of paper, used to send and receive telegrams. (It’s amazing, isn’t it, that Unix has scaled so well into the 21st century?)</p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">Back then, if you wanted to repeat all or part of a previous command line, or if you made a mistake that you needed to fix, the C shell (but not the original Bourne shell) let you rerun previous command lines, and edit them too, using <i>history substitution</i>.</p><p style="padding-left: 42pt;text-indent: 18pt;line-height: 115%;text-align: justify;">Modern shells with terminals and GUIs have more-sophisticated command-line editing, as the previous section explains. But the shell’s remembered history, and history substitution, are still so useful that almost every modern shell supports them. Let’s take a quick look.</p><p style="padding-left: 42pt;text-indent: 18pt;line-height: 115%;text-align: left;">When you enter a command line, the shell saves it in memory or in a disk file. Each line is assigned a number. To recall a previous command line, type the history expansion character <span class="s33">! </span>(an exclamation point, also called “bang”) followed by the history number or the first few letters of the command name. There are other shortcuts too—including <span class="s33">!! </span>to recall all of the previous command line, and <span class="s33">^x </span>to recall the previous command line and remove <i>x</i>.</p><p style="padding-left: 42pt;text-indent: 18pt;line-height: 115%;text-align: justify;">Let’s see a few examples. For these examples, we’ve configured the shell to put a blank line before prompts and to start each prompt with its history number. (If you want your shell set up this way, read Chapter 7.) First we’ll type a few command lines, then recall all or parts of them. After the shell does history substitution, it shows you the command line before running it. Each command is explained at the end of the examples; look for the boldfaced numbers.</p><p class="s29" style="padding-top: 3pt;padding-left: 258pt;text-indent: 0pt;text-align: left;"><a name="bookmark75">CHAPTER 1 </a><span class="s28">■ </span>INTRODUCTION TO SH ELLS <span class="s27">25</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s33" style="padding-left: 40pt;text-indent: 0pt;text-align: left;">33$ <b>cal 1222 1995</b></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">cal: illegal month value: use 1-12</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s33" style="padding-left: 40pt;text-indent: 0pt;text-align: left;">34$ <b>^22</b></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">cal 12 1995</p><p class="s33" style="padding-top: 1pt;padding-left: 58pt;text-indent: 0pt;text-align: left;">December 1995</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">Su Mo Tu We Th Fr Sa</p><p class="s32" style="padding-top: 1pt;padding-left: 49pt;text-indent: 0pt;text-align: left;">...calendar appears...</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s33" style="padding-left: 40pt;text-indent: 0pt;text-align: left;">35$ <b>pwd</b></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">/u/alison</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s33" style="padding-left: 40pt;text-indent: 0pt;text-align: left;">36$ <b>ls /usr/local/src</b></p><p class="s32" style="padding-top: 1pt;padding-left: 49pt;text-indent: 0pt;text-align: left;">...listing of /usr/local/src appears...</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s33" style="padding-left: 40pt;text-indent: 0pt;text-align: left;">37$ <b>!!/bigproj</b></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">ls /usr/local/src/bigproj</p><p class="s32" style="padding-top: 1pt;padding-left: 49pt;text-indent: 0pt;text-align: left;">...listing of /usr/local/src/bigproj appears...</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s33" style="padding-left: 40pt;text-indent: 0pt;text-align: left;">38$ <b>cp !$/somefile .</b></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">cp /usr/local/src/bigproj/somefile .</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s33" style="padding-left: 40pt;text-indent: 0pt;text-align: left;">39$ <b>!ca</b></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">cal 12 1995</p><p class="s33" style="padding-top: 1pt;padding-left: 58pt;text-indent: 0pt;text-align: left;">December 1995</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">Su Mo Tu We Th Fr Sa</p><p class="s32" style="padding-top: 1pt;padding-left: 49pt;text-indent: 0pt;text-align: left;">...calendar appears...</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s33" style="padding-left: 40pt;text-indent: 0pt;text-align: left;">40$ <b>ls -l !37:$</b></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">ls -l /usr/local/src/bigproj</p><p class="s32" style="padding-top: 1pt;padding-left: 49pt;text-indent: 0pt;text-align: left;">...listing of /usr/local/src/bigproj appears...</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">There was a mistake in <span class="s46">command 33</span>: two extra <span class="s33">2</span>s in the month. <span class="s46">Command 34 </span>used the shortcut <span class="s33">^22 </span>to remove <i>22 </i>and rerun the command; the shell shows the corrected command line. (You could have used command-line editing—pressed the up-arrow key, used the back-arrow key for a while, then pressed the Delete key twice. But history substitution takes fewer keystrokes in this case.)</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">Next, we look for a file in another directory that we need to copy. <span class="s46">Command 36 </span>shows a listing of the <span class="s33">/usr/local/src </span>directory, and there’s a subdirectory we want to look at. Instead of retyping the whole pathname, we ask the shell to replay the previous command line by typing <span class="s33">!!</span>—and we follow it with the rest of the pathname (a slash and the subdirectory name <i>bigproj</i>). The shell echoes the new, longer command line, then runs it.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 114%;text-align: left;">The file we want to copy is in this directory <span class="s33">/usr/local/src/bigproj</span>. We want to run the <span class="s33">cp </span>program instead of <span class="s33">ls</span>. The directory’s pathname is the last argument on the <span class="s33">ls </span>command line, and we can grab it by using the operator <span class="s33">!$</span>, which means “last argument on previous command line.” So, in <span class="s46">command 38</span>, the shell expands <span class="s33">!$/somefile </span>into the pathname <span class="s33">/usr/local/src/ bigproj/somefile </span>before running <span class="s33">cp </span>to copy the file. (We’ve added the last argument to <span class="s33">cp</span>,</p><p class="s29" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark76"><span class="s27">26 </span></a>CHAPTER 1 <span class="s28">■ </span>I N TR ODUC TION TO SHELLS </p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 39pt;text-indent: 0pt;line-height: 115%;text-align: right;">which tells <span class="s33">cp </span>where to put the copy: here, a dot (<span class="s33">.</span>), the pathname to the current directory, as explained in the section “Relative Pathnames and Your Current Directory” earlier in this chapter.)</p><p style="padding-left: 42pt;text-indent: 18pt;line-height: 114%;text-align: left;">In <span class="s46">command 39 </span>we rerun the previous <span class="s33">cal </span>command line (the corrected one, because it’s the most recent) by typing <span class="s33">! </span>followed by enough letters from the command name to make it unique. (<span class="s33">!c </span>wouldn’t be enough because that would match the <span class="s33">cp </span>command line.) Finally, in <span class="s46">command 40</span>, we run <span class="s33">ls -l </span>with the last argument from command line 37.</p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">These may seem cryptic, but the most common history substitutions are quick to learn: they follow a pattern of expressions (like the <span class="s33">$ </span>character, which often means “end”) used in many Unix commands. These little gems can sometimes (but not always) be much faster to type than the equivalent command-line editing we showed in the previous section. We suggest learning a few (from the section “‘Bang’ History: The Use of Exclamation Marks” in Chapter 6) and keeping them in mind.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part40.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part42.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
