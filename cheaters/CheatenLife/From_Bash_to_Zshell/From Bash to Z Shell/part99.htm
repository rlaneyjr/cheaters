<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Options for Editing</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part98.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part100.htm">Next &gt;</a></p><h4 style="padding-left: 42pt;text-indent: 0pt;text-align: left;"><a name="bookmark175">Options for Editing</a></h4><p style="padding-top: 6pt;padding-left: 42pt;text-indent: 0pt;line-height: 115%;text-align: left;">The shells have various other options for choosing the behavior of the editor. There’s not much in common between many of these, so this section will be something of a ragbag of possibilities.</p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">Customization of readline from within <span class="s33">bash </span>needs the shell to pass a complete string down to the readline library (the readline variables we mentioned in the sidebar “readline Configuration”). Let’s show an example to make this clear. You may have noticed that the shell makes a beeping noise when you make a mistake or try something the shell won’t permit.</p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 115%;text-align: left;">Many users find this effect infuriating and want to turn it off. In <span class="s33">bash</span>, this is done by setting the readline variable <span class="s33">bell-style </span>to <span class="s33">none</span>. Options to readline are set using <span class="s33">bind</span>; in this case the command is as follows:</p><p class="s33" style="padding-top: 7pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">bash$ <b>bind &#39;set bell-style none&#39;</b></p><p style="padding-top: 8pt;padding-left: 42pt;text-indent: 18pt;line-height: 114%;text-align: justify;">In contrast, options in <span class="s33">zle </span>are just ordinary shell options. We’ll introduce options properly in the section “Setting zsh Options with setopt” in Chapter 5. You set options using the <span class="s33">setopt </span>command. To turn off the beeping noise you need to set the option <span class="s33">nobeep </span>as follows:</p><p class="s33" style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">zsh% <b>setopt nobeep</b></p><p style="padding-top: 8pt;padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: justify;">An alternative to turning off the audible warning is to tell the shell or the terminal emulator to use a visible bell. This makes the screen flash at you. It’s a little less annoying than the noise. In <span class="s33">bash</span>, you can set the readline variable <span class="s33">bell-style</span>:</p><p class="s33" style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">bash$ <b>bind &#39;set bell-style visible&#39;</b></p><p style="padding-top: 8pt;padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: justify;">There’s no such variable in <span class="s33">zsh</span>, but you can make a terminal emulator derived from <span class="s33">xterm </span>use a visible indication instead of beeping. This is done with a line in the <span class="s33">.Xdefaults </span>file mentioned in the section “Choosing a Terminal Emulator” earlier in this chapter:</p><p class="s33" style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">*visualBell: true</p><p style="padding-top: 8pt;padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">Strictly, this turns on the visual bell for any application that has it, but that might be what you want. Put <span class="s33">xterm </span>in front of the <span class="s33">* </span>to restrict it to <span class="s33">xterm</span>-like programs, including <span class="s33">rxvt </span>and <span class="s33">aterm</span>. Alternatively, simply start <span class="s33">xterm </span>using</p><p class="s33" style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">xterm -vb</p><p style="padding-top: 8pt;padding-left: 41pt;text-indent: 18pt;line-height: 114%;text-align: left;">Add <span class="s33">&amp; </span>to the end of the line if you try this from the shell command line; otherwise your current shell will wait for the <span class="s33">xterm </span>to exit.</p><p class="s33" style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">zsh <span class="p">has a separate option, </span>hist_beep<span class="p">, to control whether it beeps (or otherwise signals) when you try to go past the end of the history.</span></p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">Finally, there are two <span class="s33">zsh </span>options to start up the line editor in a different way. The option <span class="s33">overstrike </span>starts the editor so that each printable character overwrites the character that was there before. (Normally, it pushes the rest of the line to the right.) You can swap in and out of this mode by using the <span class="s33">overwrite-mode </span>editor command (the one we bound to Insert in the section “Finding the Key Sequences for Function Keys” earlier in this chapter).</p><p class="s29" style="padding-top: 3pt;padding-left: 188pt;text-indent: 0pt;text-align: left;"><a name="bookmark214">CHAPTER 4 </a><span class="s28">■ </span>EN TERING AND ED ITING THE CO MMAND LIN E <span class="s27">99</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">How the shell retrieves its history is controlled by many options. These will be explained in Chapter 6, since there are several other ways of getting at the same information and all are affected. Also, options for completion will be discussed in Chapter 10 although they have a bearing on the line editor.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part98.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part100.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
