<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Building Pathnames by Completion</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part38.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part40.htm">Next &gt;</a></p><h4 style="padding-left: 42pt;text-indent: 0pt;text-align: left;"><a name="bookmark49">Building Pathnames by Completion</a></h4><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;line-height: 115%;text-align: left;">Many shells can finish parts of the command line after you type the first part. For instance, you can type the first few letters of a filename and press the Tab key once. (In <span class="s33">ksh</span>, press Esc twice; in the original <span class="s33">csh</span>, press Esc once.) If the shell can find only one filename that starts with the letters you typed, it fills in the rest of the name. This is called <i>completion</i>, and it’s a very handy tool. Different shells have different types of completion. We’ll explain filename completion and mention program name completion; Chapter 10 describes these and other kinds of completion.</p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">In your home directory, you can create any files and directories you want. Let’s go there (change the current directory to your home directory) and create an empty file named <i>this_is_a_long_filename</i>. (Use underscores instead of spaces because, as we’ve already seen, shells use space characters to separate command-line arguments. We’ll see how to use spaces in filenames when we cover quoting in the section “Control Shell Interpretation with Quoting” in Chapter 3.) Among other things, the <span class="s33">touch </span>program creates empty files:</p><p class="s33" style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">$ <b>cd</b></p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">$ <b>touch this_is_a_long_filename</b></p><p class="s29" style="padding-top: 3pt;padding-left: 258pt;text-indent: 0pt;text-align: left;"><a name="bookmark73">CHAPTER 1 </a><span class="s28">■ </span>INTRODUCTION TO SH ELLS <span class="s27">23</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">Next, let’s list the file by typing a little of its name and pressing Tab (or use Esc, as we explained, for the original <span class="s33">csh </span>and <span class="s33">ksh</span>). If there’s no other filename starting with <i>this</i>, the shell should output the rest of the name, add a space, and put your cursor after that:</p><p class="s33" style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">$  <b>ls  -l  thi&lt;tab&gt;</b></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">$  ls  -l  this_is_a_long_filename  <b>&lt;return&gt;</b></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">-rw-rw-r--  1 alison users 0 Nov 7 11:09 this_is_a_long_filename</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">You can type more (another filename, for instance; and you can use completion on it too)—or simply press Return to execute the command. On the other hand, if the shell beeps or seems to do nothing after you try to complete a name, here are two things to try:</p><p style="padding-top: 7pt;padding-left: 56pt;text-indent: 0pt;text-align: left;">• On <span class="s33">bash </span>and <span class="s33">ksh</span>, press Escape followed by the Equals key.</p><p style="padding-top: 8pt;padding-left: 56pt;text-indent: 0pt;text-align: left;">• On <span class="s33">zsh </span>and <span class="s33">tcsh</span>, press Ctrl-d (hold down the Ctrl key, then press the d key).</p><p style="padding-top: 8pt;padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">In those cases, the shell should list all possible matches. You can type a bit more of the name—enough to make it unique—then press Tab again to complete it. For instance, maybe there’s also a file called <i>thinking.txt</i>. You would see this:</p><p class="s33" style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">$  <b>ls  -l  thi&lt;tab&gt;</b></p><p class="s33" style="padding-top: 1pt;padding-left: 49pt;text-indent: 0pt;text-align: left;">...terminal beeps...</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">$  ls  -l  thi<b>&lt;tab&gt;&lt;tab&gt;</b></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">thinking.txt this_is_a_long_filename</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">$  ls  -l  thi<b>s&lt;tab&gt;</b></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">$  ls  -l  this_is_a_long_filename</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">If filename completion doesn’t work at all, you may need to configure your shell. To learn more, read Chapter 10 or your shell’s manual page.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">By the way, filename completion doesn’t replace wildcards. For instance, it can only expand a single pathname at once. It also can’t expand the first few characters of a pathname after you’ve entered the last few. If you learn both wildcards and completion, you’ll be able to choose.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="504" height="1" alt="image" src="Image_051.png"/></span></p><p class="s21" style="padding-top: 4pt;padding-left: 40pt;text-indent: 0pt;line-height: 114%;text-align: left;">■<span class="s23">Tip </span><span class="s19">Filename completion works in the File dialogs of some GUI Unix applications. For instance, the Open File dialog of the GIMP image editor lets you type the first few characters of an image filename and press Tab to complete it. Try it with your graphical programs!</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="504" height="1" alt="image" src="Image_052.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 6pt;padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">Your shell may also be able to complete command and program names. For instance, if you want to run <span class="s33">gunzip </span>(which we saw in the listing of <span class="s33">/bin </span>earlier), try typing <span class="s33">gu </span>or <span class="s33">gun </span>from a prompt, then pressing Tab. (You cancancel that command line by pressing Ctrl-c or backspacing over it. See the next section for more information about command-line editing.)</p><p class="s29" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark74"><span class="s27">24 </span></a>CHAPTER 1 <span class="s28">■ </span>I N TR ODUC TION TO SHELLS </p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part38.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part40.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
