<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Checking for New Mail</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part174.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part176.htm">Next &gt;</a></p><p class="s35" style="padding-left: 42pt;text-indent: 0pt;text-align: left;"><a name="bookmark316">Checking for New Mail</a></p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;line-height: 115%;text-align: left;">The shell can be used to notify the user when new mail arrives. <span class="s33">bash </span>and <span class="s33">zsh </span>offer a similar mechanism for doing so. If mail arrives, the shell prints a message just above the prompt. In the following example all the output comes from the shell. The cursor is placed after the prompt:</p><p class="s33" style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;line-height: 115%;text-align: left;">You have new mail in /var/spool/mail/pws bash$</p><p style="padding-top: 7pt;padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: justify;">First, you can set the variable <span class="s33">MAILCHECK </span>to how often you want it to check for mail, in seconds. Since the shell will in any case only check before the display of each new prompt, it’s perfectly reasonable to set this to 0 so that the shell will check on every prompt.</p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: justify;">You can set the variable <span class="s33">MAIL </span>to a file where your mail is kept, but it’s more powerful to use the variable <span class="s33">MAILPATH</span>, which you can give a list of places to check. This exists in both shells, and like the variable <span class="s33">PATH </span>it consists of pathnames concatenated with colons between the individual</p><p class="s29" style="padding-top: 3pt;padding-left: 39pt;text-indent: 0pt;text-align: right;"><a name="bookmark340">CHAPTER 7 </a><span class="s28">■ </span>PROMPT S <span class="s27">163</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">names. In <span class="s33">zsh</span>, <span class="s33">MAILPATH </span>has a companion variable <span class="s33">mailpath</span>. This is an array that contains the same information in a different form. (Many variables in <span class="s33">zsh </span>that contain colon-separated paths exist in pairs like this.) Arrays tend to be easier to deal with, so we recommend using <span class="s33">mailpath</span>.</p><p style="padding-left: 58pt;text-indent: 0pt;line-height: 10pt;text-align: left;">You need to know where the system stores your mail. Typically, this is somewhere like</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">/var/spool/mail/$USER <span class="p">or </span>/var/mail/$USER<span class="p">. You may need </span>$LOGNAME <span class="p">instead of </span>$USER <span class="p">on some systems, or just insert your own username directly.</span></p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">That may be the only place where mail arrives; you only need to check other files if they are specially configured. For example, if you run the command <span class="s33">procmail </span>to sort mail into a partic- ular file when it arrives, you can add those files to the mail path. Let’s suppose you have this or some other mail sorting program which filters mail from the <span class="s33">zsh </span>mailing list into the file</p><p class="s33" style="padding-left: 40pt;text-indent: 0pt;line-height: 10pt;text-align: left;">~/Mail/zsh-new<span class="p">. The following code will check for mail using either </span>bash <span class="p">or </span>zsh<span class="p">:</span></p><p class="s33" style="padding-top: 8pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">MAILPATH=/var/spool/mail/pws:\</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">~/Mail/zsh-new&#39;?New  zsh  list  mail&#39;</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 19pt;text-align: left;">The following code is supported only by <span class="s33">zsh</span>: <span class="s33">mailpath=(</span></p><p class="s33" style="padding-top: 1pt;padding-left: 49pt;text-indent: 0pt;text-align: left;">/var/spool/mail/pws</p><p class="s33" style="padding-top: 1pt;padding-left: 49pt;text-indent: 0pt;text-align: left;">~/Mail/zsh-new&#39;?New  zsh  list  mail&#39;</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">)</p><p style="padding-top: 8pt;padding-left: 58pt;text-indent: 0pt;text-align: left;">Note that as with all assignments in <span class="s33">bash </span>and <span class="s33">zsh </span>there is no space immediately before or</p><p style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">after the <span class="s33">= </span>in either case. There are quotes in both versions for the question mark and the text after; this is needed because of the special character <span class="s33">? </span>and the spaces inside the list item. As you probably guessed from the phrase, that text gives a message to be printed when the shell finds mail in the file named just before. We haven’t bothered giving the main mail file a prompt, since there’s a reasonable default. In <span class="s33">zsh </span>this is “You have new mail”. (Note that the variable <span class="s33">MAIL </span>doesn’t take a prompt; it must contain just a single filename.)</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">You can put the variable substitution <span class="s33">$_ </span>inside the prompt part and it will be turned into the filename. Make sure you use single quotes around this; as we explained for prompts, that prevents the variable from being expanded when you define <span class="s33">MAILPATH </span>or <span class="s33">mailpath</span>, which isn’t what you want.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part174.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part176.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
