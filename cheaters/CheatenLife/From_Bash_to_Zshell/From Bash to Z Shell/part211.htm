<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>File Descriptors as Files</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part210.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part212.htm">Next &gt;</a></p><p class="s35" style="padding-left: 42pt;text-indent: 0pt;text-align: left;"><a name="bookmark376">File Descriptors as Files</a></p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;line-height: 115%;text-align: left;">On many recent versions of Unix and Linux, the file descriptors for input and output can be read as special files. Where this is available, the syntax is <span class="s33">/dev/fd/</span><span class="s45">num </span>for file descriptor <i>num</i>, for example <span class="s33">/dev/fd/0 </span>for standard input. (On recent versions of Linux, the directory <span class="s33">/dev/fd </span>may actually be a symbolic link, but that doesn’t change the following description.) This probably seems a little strange—after all, file descriptor <span class="s33">0 </span>is already the input, so why would you need to access it as a file?</p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">One use is to send standard input to a command that only takes filenames and won’t read from standard input. The same goes for a program that only writes to a named file. You can give such a program the filename <span class="s33">/dev/fd/0 </span>as input or <span class="s33">/dev/fd/1 </span>as output. Then it can, for example, read from or write to a pipe.</p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">Here’s a demonstration of the feature that creates a file using <span class="s33">cat </span>to join three files. The first and last are existing files with some text that acts as the head and foot of the output text. In the middle, <span class="s33">cat </span>will take what you type at the terminal (press Ctrl-d to finish). In a script, it would use the input to the script at that point.</p><p class="s33" style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;line-height: 115%;text-align: left;">% <b>cat header.txt /dev/fd/0 footer.txt Here is a message typed at the terminal.</b></p><p class="s46" style="padding-left: 41pt;text-indent: 0pt;line-height: 10pt;text-align: left;">^D</p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;line-height: 115%;text-align: left;">These are the contents of header.txt Here is a message typed at the terminal. These are the contents of footer.txt</p><p style="padding-top: 7pt;padding-left: 59pt;text-indent: 0pt;text-align: left;">Note that, even on systems that don’t support the <span class="s33">/dev/fd </span>special devices, <span class="s33">bash </span>and <span class="s33">zsh</span></p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: left;"><span class="p">will emulate them when they are used in a redirection or in </span>[[ <i>… </i>]] <span class="p">style conditional expressions.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part210.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part212.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
