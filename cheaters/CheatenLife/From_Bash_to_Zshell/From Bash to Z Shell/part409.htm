<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Running External Commands</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part408.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part410.htm">Next &gt;</a></p><p class="s35" style="padding-left: 40pt;text-indent: 0pt;text-align: left;"><a name="bookmark761">Running External Commands</a></p><p style="padding-top: 5pt;padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: justify;">When the completion system calls external commands to generate completion matches, it can sometimes be very useful for the user to be able to intercept this and have a different command run or the same command run but with different arguments. The possible uses for this are wide ranging. An option to the command may apply a filter, restricting or expanding the number of matches. It may be that the command’s output format can be changed, affecting the descrip- tions given to matches. Perhaps a command such as <span class="s33">ssh </span>is used to access a remote system but the remote system doesn’t run an <span class="s33">ssh </span>server, so it is useful to substitute the <span class="s33">rsh </span>command.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">As an example, consider completion of process IDs. For this, matches are generated by running the <span class="s33">ps </span>command without any arguments. On its own, <span class="s33">ps </span>typically only lists those processes associated with the current terminal. This is often not very many. However, it is possible to configure this with the <span class="s33">command </span>style:</p><p class="s33" style="padding-top: 6pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">zstyle &#39;:completion:*:processes&#39; command &#39;ps -e&#39;</p><p style="padding-top: 8pt;padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">This will cause every process on the system to be matched. As another example, the following changes the output format but only applies when completing process IDs for the <span class="s33">kill </span>command:</p><p class="s33" style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">zstyle &#39;:completion:*:kill:*:processes&#39; command &#39;ps -o pid,s,nice,stime,args&#39;</p><p style="padding-top: 8pt;padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: justify;">The <span class="s33">_call_program </span>helper function does the job of looking up this style. It acts as a simple wrapper around any call to an external program. So if you look inside <span class="s33">_pids</span>, the function that completes process IDs, you will see this line:</p><p class="s33" style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">out=( &quot;${(@f)$(_call_program processes ps 2&gt;/dev/null)}&quot; )</p><p class="s29" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark803"><span class="s27">392 </span></a>CHAPTER 15 <span class="s28">■ </span>W RIT ING COMP LET ION F UNCTI ON S</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 42pt;text-indent: 18pt;line-height: 115%;text-align: left;">Similarly, for our <span class="s33">tar </span>completion example in the section “Multiple Parts” earlier in this chapter, we might use the following when extracting the list of files in an archive:</p><p class="s33" style="padding-top: 7pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">files=(  $(_call_program  files  tar  tf  $words[3])  )</p><p style="padding-top: 8pt;padding-left: 42pt;text-indent: 18pt;line-height: 115%;text-align: justify;">The first argument to <span class="s33">_call_program </span>is a tag: this is the last component of the zstyle context when the command style is looked up. Subsequent arguments specify the default command to run when the style isn’t set.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part408.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part410.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
