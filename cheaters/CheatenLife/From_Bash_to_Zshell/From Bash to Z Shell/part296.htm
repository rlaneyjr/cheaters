<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Suspending the Shell Itself</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part295.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part297.htm">Next &gt;</a></p><p class="s35" style="padding-left: 40pt;text-indent: 0pt;text-align: left;"><a name="bookmark547">Suspending the Shell Itself</a></p><p style="padding-top: 5pt;padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">One thing you may have wondered about is why pressing Ctrl-z when you are at the shell prompt doesn’t suspend the shell itself. The shell disables this because if the shell stops, the terminal is unlikely to be picked up by another process. This would be annoying because it is then not very convenient to arrange for the shell to be sent a <span class="s33">SIGCONT </span>signal so that it can start again. We showed how you can start one shell from another back in the section “Starting Shells” in Chapter 5. If you do this, perhaps because you are comparing features of <span class="s33">bash </span>and <span class="s33">zsh</span>, it would be nice to be able to suspend a second shell and return to the first.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">We told you that Ctrl-z causes a signal to be sent to the foreground process. Since Ctrl-z doesn’t work, let’s try sending the signal directly. As we saw in the section “Expansion and Substitution” in Chapter 1, we can retrieve the shell’s process identifier from <span class="s33">$$</span>. So we can try this:</p><p class="s33" style="padding-top: 6pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">bash$ <b>zsh</b></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">zsh% <b>kill -STOP $$</b></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s33" style="padding-left: 40pt;text-indent: 0pt;text-align: left;">[1]+ Stopped zsh</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">bash$</p><p class="s29" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark567"><span class="s27">266 </span></a>CHAPTER 11 <span class="s28">■ </span>J O BS AN D PR OC E S S ES</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 42pt;text-indent: 18pt;line-height: 115%;text-align: left;">As an alternative, both shells have a <span class="s33">suspend </span>built-in that does the same. However, it is a tad cleverer. Try running it and it is likely you will see this:</p><p class="s33" style="padding-top: 7pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">% <b>suspend</b></p><p class="s33" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">suspend:  can&#39;t  suspend  login  shell</p><p style="padding-top: 8pt;padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">This makes sense because a login shell is typically not run from another shell. However, there are times when you use a command like <span class="s33">rlogin </span>or <span class="s33">telnet </span>to log in to a remote machine and it would be nice to suspend the connection and return to the shell on the local machine. Suspending the shell running on the remote machine is not going to help. What you need to do is suspend the actual <span class="s33">rsh </span>or <span class="s33">telnet </span>client. These are what your local shell is running. Fortu- nately, both can be suspended:</p><p style="padding-top: 7pt;padding-left: 57pt;text-indent: 0pt;text-align: left;">• When you run <span class="s33">telnet</span>, you may notice that it prints a line like the following:</p><p class="s33" style="padding-top: 8pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">Escape character is &#39;^]&#39;.</p><p style="padding-top: 8pt;padding-left: 67pt;text-indent: 0pt;line-height: 115%;text-align: left;">What that means is that you can press Ctrl-] to escape. Try pressing it and <span class="s33">telnet </span>will drop out of whatever you’re doing on the remote machine and print its own prompt.</p><p style="padding-left: 67pt;text-indent: 0pt;line-height: 115%;text-align: left;">If you type <span class="s33">help </span>at this prompt you will see that <span class="s33">telnet </span>actually has a range of its own commands. However, what we’re more interested in is that you can now press Ctrl-z to suspend <span class="s33">telnet</span>.</p><p style="padding-top: 7pt;padding-left: 67pt;text-indent: -10pt;line-height: 115%;text-align: left;">• <span class="s33">rlogin </span>has a number of special escape sequences. In their case, you need to type a tilde (<i>~</i>) followed by Ctrl-z. This has to be at the beginning of a line so you may need to press Return first. This sequence will get you straight out and back to the original shell. There are a number of other escape sequences. You might be able to use <span class="s33">~? </span>to list them. These escape sequences also work with <span class="s33">ssh </span>and with the remote shell command that is vari- ously either <span class="s33">rsh </span>or <span class="s33">remsh</span>.</p><p style="padding-top: 7pt;padding-left: 42pt;text-indent: 18pt;line-height: 115%;text-align: left;">To return to the suspended shell, use <span class="s33">fg </span>or any of the special forms, just like with any other command.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part295.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part297.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
