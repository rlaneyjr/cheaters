<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Menu Selection</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part273.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part275.htm">Next &gt;</a></p><p class="s35" style="padding-left: 40pt;text-indent: 0pt;text-align: left;"><a name="bookmark495">Menu Selection</a></p><p class="s33" style="padding-top: 5pt;padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">zsh <span class="p">has an extension of menu completion: menu selection. On one level, menu selection is the same as menu completion in that repeatedly pressing the Tab key cycles through the possibilities. Menu selection also takes over the list of matches below the prompt and operates it in a manner more befitting the term “menu.” This means the currently selected match is highlighted and you can use the cursor keys to move around and select the appropriate match. Figure 10-1 shows menu selection being used to select an option to the </span>bzip2 <span class="p">command. This is a compression command similar to </span>gzip<span class="p">. At the moment the </span>--stdout <span class="p">option is highlighted. If the Up Arrow key is pressed, the </span>--quiet <span class="p">option will be highlighted.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 0pt;text-align: left;"><span><img width="438" height="228" alt="image" src="Image_210.gif"/></span></p><p class="s13" style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">Figure 10-1. <span class="s32">Terminal window showing menu selection in action</span></p><p class="s29" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark523"><span class="s27">244 </span></a>CHAPTER 10 <span class="s28">■ </span>COMPLETION </p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 42pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="504" height="1" alt="image" src="Image_211.png"/></span></p><p class="s21" style="padding-top: 4pt;padding-left: 41pt;text-indent: 0pt;line-height: 115%;text-align: justify;">■<span class="s23">Note </span><span class="s19">A nice feature of zsh 4.2 is that matches are listed on the same line as any other matches that have the same description. The result of this is shown in Figure 10-1. There, options to the command bzip2 are listed as completion matches. As an example, you can see that both -c and --stdout appear on the same line. The two options have the same purpose, so they have same description.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 42pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="507" height="1" alt="image" src="Image_212.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">Like completion list scrolling, menu selection is a feature of the <span class="s33">zsh/complist </span>module so you will need to load that with <span class="s33">zmodload</span>. To enable menu selection, you then need to set the <span class="s33">menu </span>style:</p><p class="s33" style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">zstyle &#39;:completion*:default&#39; menu &#39;select=0&#39;</p><p style="padding-top: 8pt;padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">The number (0 in this example) specifies how many matches there should be before menu selection is started. You can also use the word “long” in place of the number to start menu selection only if the list of matches is too long to fit on the screen. With these exceptions, menu selection is started whenever menu completion starts.</p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: justify;">To allow the behavior of keys in menu selection to be configured, the <span class="s33">zsh/complist </span>module defines a <span class="s33">menuselect </span>keymap. You just need to ensure the module is loaded and then bind keys in that keymap. For example:</p><p class="s33" style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">bindkey  -M  menuselect  &#39;\C-o&#39;  accept-and-menu-complete</p><p style="padding-top: 8pt;padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: justify;">Now, if you press Ctrl-o while in menu selection, it will <i>accept </i>the currently selected match, but remain in menu selection allowing you to select another match from the same list to form the next word on the line. This is often useful when you want to pass several files from the same directory as arguments to a command: you won’t have to retype the name of the directory.</p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">You may choose to use a different key combination, of course. We suggested Ctrl-o because the behavior is reminiscent of that of <span class="s33">accept-line-and-down-history </span>first discussed in the section “Executing Commands” in Chapter 4.</p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">Menu selection is particularly suited to completing things that are not meaningful words so typing them is not natural. Examples of this are process IDs and X window IDs. Using the <span class="s33">menu </span>style with a suitable context, we can enable menu completion (and hence menu selection) for these cases. To demonstrate this we’ll use the <span class="s33">xkill </span>command. <span class="s33">xkill </span>allows you to kill a window on your display. Normally, it asks you to select a window interactively with the mouse but using the <span class="s33">-id </span>option, you can specify a window using its unique ID number. When added as completion matches, X window IDs have the tag <span class="s33">windows</span>, so we use that in the tag part of the context:</p><p class="s33" style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">zstyle &#39;:completion:*:windows&#39; menu on=0</p><p style="padding-top: 8pt;padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">The number in the style’s value is again a minimum number of matches before the menu completion is started. The <span class="s33">menu </span>style can also be used to disable menu completion in specific contexts. Try completion after <span class="s33">xkill -id </span>with and without this style to see the difference. To do so, you might find the <span class="s33">zstyle -d </span>option useful. It allows you to delete a style. Usage is just the same except that the style’s value is missing:</p><p class="s33" style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">zstyle -d &#39;:completion:*:windows&#39; menu</p><p class="s29" style="padding-top: 3pt;padding-left: 304pt;text-indent: 0pt;text-align: left;"><a name="bookmark524">CHAPTER 10 </a><span class="s28">■ </span>COMPLE TION <span class="s27">245</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">You can also leave out the name of the style, but that will remove any other styles that use the same context:</p><p class="s33" style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">zstyle -d &#39;:completion:*:windows&#39;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part273.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part275.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
