<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Preface</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part6.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part8.htm">Next &gt;</a></p><p class="s17" style="padding-top: 13pt;padding-left: 40pt;text-indent: 0pt;text-align: left;"><a name="bookmark15">Preface</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><h2 style="padding-top: 23pt;padding-left: 40pt;text-indent: 0pt;line-height: 88%;text-align: left;">A<span class="p">shell is a sophisticated way to control your computer—Unix, Linux, Microsoft Windows, Mac OS X, and others. If you do more than the most basic operations, you can do many of them</span></h2><p style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">more powerfully and quickly with a shell and your keyboard than by using a mouse.</p><p style="padding-top: 1pt;padding-left: 40pt;text-indent: 17pt;line-height: 115%;text-align: left;">The history of shells goes back some 30 years. In the early days of the Unix operating system, choosing and customizing your interface to a computer was a new idea. (It still <i>is </i>new to many people today, users of “one-size-fits-all” window systems that can be changed only superficially.) Before windows and a mouse were common, programmers began developing an interface that used the keyboard: typing one or a few words to run programs, then reading results from the same screen. As time went on, more shells were developed, giving users more choices.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">New features have been added continually over the years, making the modern shell an incredibly rich environment that saves power users hours of time and frustration. Tasks that take lots of repetitive work with a mouse can be automated. For example, shell features such as <i>completion </i>let you accomplish a lot with little typing.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">A shell can work in two ways. You can use it interactively to do things by hand. You can also automate a task by packaging those same operations into a <i>script </i>or <i>function</i>. Learning shell features lets you do both of those because a shell is a user interface and a programming language in one.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">The shells we discuss run on many operating systems. What you learn about shells will let you use all of these operating systems in the same way. If you use more than one operating system, a shell gives you a powerful and familiar interface to all of them.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">There are several major shells. Because each has its differences, covering all of the shells could make a book that’s both confusing and unwieldy. We’ve concentrated on <span class="s33">bash </span>and <span class="s33">zsh</span>, two of the most modern and powerful shells. Both are freely available; in fact, they’re installed on many of the systems we’ve listed and can be downloaded from the Internet for the rest.</p><p style="padding-top: 7pt;padding-left: 66pt;text-indent: -10pt;line-height: 115%;text-align: justify;">• <span class="s33">bash </span>is the de facto standard shell on Linux. <span class="s33">bash </span>runs most scripts written for other Bourne-type shells, including the original Unix shell <span class="s33">sh</span>, and it has a growing list of features.</p><p style="padding-top: 7pt;padding-left: 66pt;text-indent: -10pt;line-height: 115%;text-align: justify;">• <span class="s33">zsh</span>, also called Z shell, is an extremely powerful shell that’s not as well known as <span class="s33">bash</span>. <span class="s33">zsh </span>combines most of the best features of several shells, including C-type shells such as <span class="s33">tcsh</span>. However, its basic usage is similar to <span class="s33">bash</span>.</p><p style="padding-top: 7pt;padding-left: 66pt;text-indent: 0pt;line-height: 115%;text-align: left;">This book provides the first comprehensive Z shell coverage that we know of. If you consider yourself a power user (or if, after reading what shells can do, you want to <i>become </i>a power user!), you owe it to yourself to get familiar with all that <span class="s33">zsh </span>can do to make your work easier.</p><p style="padding-top: 7pt;padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">Covering both <span class="s33">bash </span>and <span class="s33">zsh </span>shows you what features the two shells have in common as well as their different approaches to the same tasks.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s27" style="padding-left: 39pt;text-indent: 0pt;text-align: right;">xvii</p><p class="s27" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">xviii         <span class="s28">■</span><span class="s29">PREFACE </span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part8.htm">How This Book Is Structured</a><a class="toc1" href="part9.htm">Chapter 1: Introduction to Shells</a><a class="toc1" href="part10.htm">Chapter 2: Using Shell Features Together</a><a class="toc1" href="part11.htm">Chapter 3: More Shell Features</a><a class="toc1" href="part12.htm">Chapter 4: Entering and Editing the Command Line</a><a class="toc1" href="part13.htm">Chapter 5: Starting the Shell</a><a class="toc1" href="part14.htm">Chapter 6: More About Shell History</a><a class="toc1" href="part15.htm">Chapter 7: Prompts</a><a class="toc1" href="part16.htm">Chapter 8: Files and Directories</a><a class="toc1" href="part17.htm">Chapter 9: Pattern Matching</a><a class="toc1" href="part18.htm">Chapter 10: Completion</a><a class="toc1" href="part19.htm">Chapter 11: Jobs and Processes</a><a class="toc1" href="part20.htm">Chapter 12: Variables</a><a class="toc1" href="part21.htm">Chapter 13: Scripting and Functions</a><a class="toc1" href="part22.htm">Chapter 14: Writing Editor Commands</a><a class="toc1" href="part23.htm">Chapter 15: Writing Completion Functions</a><a class="toc0" href="part24.htm">Who Should Read This Book</a><a class="toc0" href="part25.htm">Prerequisites</a><a class="toc0" href="part26.htm">Tips for Reading Technical Material</a><a class="toc0" href="part27.htm">Contacting the Authors</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part6.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part8.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
