<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Negated Matches</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part233.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part235.htm">Next &gt;</a></p><p class="s18" style="padding-left: 42pt;text-indent: 0pt;text-align: left;"><a name="bookmark424">Negated Matches</a></p><p class="s33" style="padding-top: 5pt;padding-left: 42pt;text-indent: 0pt;line-height: 115%;text-align: justify;">zsh <span class="p">offers two ways of asking for something that doesn’t match a particular pattern. The simpler method is to put </span>^ <span class="p">in front of the pattern. For example, </span>^*.o <span class="p">matches every file in the directory except those ending in </span>.o<span class="p">. (This feature comes from </span>tcsh<span class="p">.)</span></p><p style="padding-left: 42pt;text-indent: 17pt;line-height: 115%;text-align: left;">The <span class="s33">^ </span>often comes at the beginning but doesn’t need to. The expression <i>pat1</i><span class="s33">^</span><i>pat2 </i>means that the pattern <i>pat1 </i>should be matched at the beginning, then anything that doesn’t match the pattern <i>pat2 </i>should be matched as the rest of the string. Let’s consider an example:</p><p class="s33" style="padding-top: 7pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">zsh% <b>ls</b></p><p class="s33" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;line-height: 115%;text-align: left;">AAreadme Areadme HeHiHo readme abba zsh% <b>echo A^r*</b></p><p class="s33" style="padding-left: 42pt;text-indent: 0pt;line-height: 10pt;text-align: left;">AAreadme</p><p style="padding-top: 8pt;padding-left: 42pt;text-indent: 18pt;line-height: 115%;text-align: left;">Of the two files starting with <span class="s33">A</span>, one had an r next and so failed to match. The <span class="s33">ksh </span>and <span class="s33">bash </span>equivalent for this is <span class="s33">A!(r*)</span>; note the <span class="s33">* </span>is inside the parentheses, which is why it is different from our first example of that syntax in the earlier section “Negative Pattern Matching.”</p><p style="padding-left: 60pt;text-indent: 0pt;line-height: 10pt;text-align: left;">You can use <span class="s33">^ </span>for directories in the middle of a path; it just applies to that path segment:</p><p class="s33" style="padding-top: 8pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">zsh% <b>ls /usr</b></p><p class="s33" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;line-height: 115%;text-align: left;">X11R6 bin etc games include lib local lost+found sbin share src tmp zsh% <b>print -l /usr/^*bin/A*</b></p><p class="s33" style="padding-left: 42pt;text-indent: 0pt;line-height: 10pt;text-align: left;">/usr/lib/ADVX</p><p class="s33" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">/usr/local/Acrobat4</p><p class="s33" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">/usr/local/Acrobat5</p><p class="s33" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">/usr/share/ADVX</p><p style="padding-top: 8pt;padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: justify;">All the directories in <span class="s33">/usr </span>except the ones ending in <span class="s33">bin </span>were searched for files (including other directories) beginning with <span class="s33">A</span>. We could also have used the pattern <span class="s33">/usr/^(bin|sbin)/A* </span>or even <span class="s33">/usr/^(s|)bin/A* </span>to exclude those two directories and arrived at the same result.</p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">Keep in mind that the ^ character is used to indicate control characters for the system’s <span class="s33">stty </span>command and the shell’s <span class="s33">bindkey </span>command. For example, in <span class="s33">stty intr ^c</span>, the last word was supposed to indicate Ctrl-c. Unfortunately, with the <span class="s33">extended_glob </span>option set, the text ^c expands to every file in the directory except one called <span class="s33">c</span>. Make sure you put quotes around words containing ^ if you use extended globbing.</p><p class="s29" style="padding-top: 3pt;padding-left: 280pt;text-indent: 0pt;text-align: left;"><a name="bookmark465">CHAPTER 9 </a><span class="s28">■ </span>PATTER N MATCHIN G <span class="s27">217</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part233.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part235.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
