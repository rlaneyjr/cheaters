<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>The Backspace and Erase Confusion</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part108.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part110.htm">Next &gt;</a></p><p class="s18" style="padding-left: 40pt;text-indent: 0pt;text-align: left;"><a name="bookmark185">The Backspace and Erase Confusion</a></p><p style="padding-top: 5pt;padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">You might have thought deleting the previous character using the Erase key was simple enough. However, this is not always the case. On traditional Unix keyboards, the key at the top right of the largest group of keys, marked as “delete” or “erase” or something similar, generates a certain character usually written as Ctrl-? (<span class="s33">^? </span>to <span class="s33">stty</span>) and described as “delete”. However, on a PC keyboard the key at that position, often marked with a backward arrow or something similar, sends a backspace, which is the same as Ctrl-h. To make it worse, some systems where the key would normally send Ctrl-h intercept it and send Ctrl-? instead.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">Luckily, both <span class="s33">zsh </span>and <span class="s33">bash </span>will delete the previous character when they receive either of those keys, so much of the time you don’t need to know. The time you do need to know which is which is when you are entering input that is not under the control of the shell. As explained earlier, <span class="s33">stty </span>only handles one special character for any function, in this case the function named <span class="s33">erase</span>, so the other won’t work in cooked mode—for example, when you are entering text to <span class="s33">cat</span>. The usual indication something has gone wrong is a series of <span class="s33">^H </span>or <span class="s33">^? </span>characters appearing when you try to delete. It is a strange fact about the universe that the erase value is almost always set incorrectly by default. However, putting it right is simple. One of the following will set the value you want:</p><p class="s29" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark221"><span class="s27">106 </span></a>CHAPTER 4 <span class="s28">■ </span>EN TERING AND ED ITING THE CO MMAND LINE </p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s33" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">% <b>stty erase &#39;^?&#39;</b></p><p style="padding-top: 8pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">or</p><p class="s33" style="padding-top: 8pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">% <b>stty erase &#39;^h&#39;</b></p><p style="padding-top: 8pt;padding-left: 42pt;text-indent: 18pt;line-height: 115%;text-align: left;">As the final part of this confusion, the key on a PC keyboard marked Delete or Del is different again. On a full-sized keyboard you usually find it in the group of six over the cursor keys. It probably does nothing by default and you have to bind it yourself using the tricks in the section “Finding the Key Sequences for Function Keys” in this chapter.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part108.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part110.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
