<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Startup Files, Login and Interactive Shells</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part112.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part114.htm">Next &gt;</a></p><h4 style="padding-left: 42pt;text-indent: 0pt;text-align: left;"><a name="bookmark225">Startup Files, Login and Interactive Shells</a></h4><p style="padding-top: 6pt;padding-left: 42pt;text-indent: 0pt;line-height: 115%;text-align: justify;">If you know what a shell does when it starts, you can customize its behavior. Throughout the rest of the book, you will see short chunks of code that change the shell’s behavior, and you’ll think “That looks useful.” If you put the code in a <i>startup file</i>, it will be executed every time the shell starts to run. These startup files are sets of commands entered into a file just as you would type them at a prompt—but with no prompts.</p><p style="padding-left: 60pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Startup files differ from normal text (typed at a prompt) in two ways:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 72pt;text-indent: -12pt;line-height: 114%;text-align: left;"><span class="s13">1. </span>The history mechanism with <span class="s33">! </span>is not active, so you don’t need to quote exclamation marks (as introduced in the section “History” in Chapter 1). That makes sense, since there’s no reason why you’d ever use the history mechanism in a startup file.</p><p style="padding-top: 6pt;padding-left: 72pt;text-indent: -12pt;line-height: 114%;text-align: justify;"><span class="s13">2. </span>A startup file is likely to have a lot of <i>comments</i>. The shell ignores these pieces of text; they’re useful to you when you look at the file later. A comment, which starts with the character <span class="s33">#</span>, can occur at the start of a line or anywhere in a line preceded by a space.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 114%;text-align: left;">Although you can type comments interactively (at a prompt) in <span class="s33">bash</span>—and in <span class="s33">zsh</span>, too, if you have the <span class="s33">interactive_comments </span>option turned on—there’s usually not much point.</p><p style="padding-left: 42pt;text-indent: 0pt;line-height: 115%;text-align: left;">However, adding comments to a file is entirely useful, in case you look at it months or years later and wonder why you did something.</p><p style="padding-left: 42pt;text-indent: 17pt;line-height: 115%;text-align: left;">Here’s a simple chunk of text that sets an <i>environment </i>variable (see the section “Passing Info to Processes with Environment Variables” in Chapter 3) with a comment explaining what it’s doing:</p><p class="s33" style="padding-top: 7pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">#  <span class="s32">Tell  programs  to  pass  output  through  &#39;less&#39;  instead  of  &#39;more&#39;</span></p><p class="s33" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">export PAGER=less</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 42pt;text-indent: 18pt;line-height: 115%;text-align: left;">We met pagers in the section “Using Programs Together: Pipes” in Chapter 2. Now you know how to tell the system which one to use. First, though, you need to know one thing more: which startup file to put that shell code into.</p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: justify;">Which files a shell executes at startup depends on two things: whether it’s a <i>login </i>shell, or an <i>interactive </i>shell. We’ll introduce these two types of shells, and then show how the type influ- ences the files that the shell executes.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part114.htm">Login Shells</a><a class="toc0" href="part115.htm">Interactive Shells</a><a class="toc0" href="part116.htm">bash Startup Files</a><a class="toc0" href="part117.htm">zsh Startup Files</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part112.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part114.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
