<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Values for Prompt Variables</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part147.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part149.htm">Next &gt;</a></p><p class="s35" style="padding-left: 40pt;text-indent: 0pt;text-align: left;"><a name="bookmark289">Values for Prompt Variables</a></p><p style="padding-top: 5pt;padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">A prompt variable can contain ordinary text, which will be output unchanged. You can have a newline in a prompt, too—this makes it easy to have a prompt spread over multiple lines.</p><p style="padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">Many people do this so that they can have a lot of information on one line, and still keep plenty of space to type on the line below. Consider the following simple example of setting <span class="s33">PS1</span>:</p><p class="s33" style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">bash$  <b>PS1=&quot;Enter  a  new  command  line  below.</b></p><p class="s46" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">? &quot;</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">Enter a new command line below.</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">?</p><p style="padding-top: 8pt;padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">The cursor appears after the question mark and a space. Users of one of the C-shell family (<span class="s33">csh </span>and <span class="s33">tcsh</span>) should notice that in <span class="s33">bash </span>and <span class="s33">zsh </span>you can simply put a newline directly into a string like any other character.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">Strings only give you the same information every time, however. They can’t identify changes between two prompts, such as the current directory or the time. For this the shells have a system referred to as <i>prompt escapes </i>(or <i>escape sequences</i>). These give you a shorthand for telling the shell to substitute the information you want at a place in the string. Unfortu- nately, <span class="s33">bash </span>and <span class="s33">zsh </span>have different escape sequences, so we will discuss the shells separately. However, the escape sequences are the same in the prompts within each shell. (This is not true of the special variables <span class="s33">TIMEFORMAT</span>, <span class="s33">TIMEFMT</span>, and <span class="s33">WATCHFMT </span>shown in Table 7-1. We will discuss those separately.)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part147.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part149.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
