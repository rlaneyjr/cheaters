<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Completing Parts of Words</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part262.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part264.htm">Next &gt;</a></p><p class="s35" style="padding-left: 40pt;text-indent: 0pt;text-align: left;"><a name="bookmark484">Completing Parts of Words</a></p><p style="padding-top: 5pt;padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">For the purposes of completion, the shell breaks the command line into suitable chunks. For the most part, this means that just the current word is completed. This isn’t the whole story, though. As you have probably already seen, for file completion, the word is split at slashes so that you can complete files within a directory. <span class="s33">bash </span>also breaks words at colons. This lets <span class="s33">bash </span>do completion correctly in something like this:</p><p class="s33" style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">$ <b>PATH=/bin:/usr/bin:/usr/lo</b>&lt;tab&gt;</p><p style="padding-top: 8pt;padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;"><a href="http://to/" class="a" target="_blank">Unfortunately, this can be inconvenient when colons are used in other contexts. For example, when completing URLs, you would not want the colon in </a><a href="http://to/" class="s34" target="_blank">http:// </a>to be handled as a separator. There’s not much you can do about the problem except quote any troublesome colons with a backslash. The backslash will have no effect on how the shell interprets the line when you finish it and press Return but it does stop completion from breaking up the word.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">Command arguments sometimes take the form <span class="s33">var=value</span>. In this case, it can be useful to have files completed for the value part, ignoring anything up to and including the equals sign. <span class="s33">bash </span>will do this by default. In <span class="s33">zsh</span>, this is enabled as a side effect of setting the <span class="s33">magic_equal_subst </span>option. The main purpose of <span class="s33">magic_equal_subst </span>is to enable tilde expansion after an equals. In <span class="s33">zsh</span>, you will see many more places where only parts of words are completed.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">In <span class="s33">bash </span>version 3, it is possible to configure the range of characters that delimit words for the purposes of completion. The characters are listed in the variable <span class="s33">COMP_WORDBREAKS</span>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part262.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part264.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
