<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Making a Script File</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part52.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part54.htm">Next &gt;</a></p><h4 style="padding-left: 42pt;text-indent: 0pt;text-align: left;"><a name="bookmark87">Making a Script File</a></h4><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;line-height: 115%;text-align: justify;">If you want to try running this example code, you should probably use a Unix text editor—consider using a basic editor like <span class="s33">pico </span>or <span class="s33">xedit</span>, or a more sophisticated editor like <span class="s33">vi </span>or Emacs. Choose a filename for the program; this is the name you’ll type at a shell prompt when you want to run the code. Just don’t choose a name that’s already used for another program. To check that, run <span class="s33">type </span>if you use the <span class="s33">bash </span>or <span class="s33">ksh </span>shells; otherwise use <span class="s33">which</span>. You’re looking for an answer some- thing like one of the following, which means your name hasn’t been taken yet:</p><p class="s33" style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">$ <b>type make_prog_list</b></p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">bash:  type:  make_prog_list:  not  found</p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">$</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s33" style="padding-left: 41pt;text-indent: 0pt;text-align: justify;">% <b>which make_prog_list</b></p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">which:  no  make_prog_list  in  /bin:/usr/bin:/usr/local/bin:/proj/bin</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">To make this code work no matter what shell you normally use on your terminal (Bourne-type or C-type), put the code into an executable <i>shell script </i>file. You can choose the shell that reads the code by putting its absolute pathname in a special format, starting at the left edge (the beginning of) the first line of the file. The first two characters must be <span class="s33">#!</span>; this tells Unix that the pathname of an interpreter program (often a shell, but not always) is coming next on the line. Because this is Bourne shell code and all Unix systems have a Bourne-type shell at the absolute pathname <span class="s33">/bin/sh</span>, the first line should be <span class="s33">#!/bin/sh</span>.</p><p style="padding-left: 59pt;text-indent: 0pt;line-height: 10pt;text-align: left;">A comment line starts with a <span class="s33"># </span>(hash or sharp sign).<span class="s43">4 </span>It’s a good idea to start a program with</p><p style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;line-height: 115%;text-align: left;">comment lines that explain what it does and how to use it. You can fill in whatever you like (including nothing).</p><p style="padding-left: 59pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Ready? Here’s the file with the finished code:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 42pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="226" height="1" alt="image" src="Image_079.png"/></span></p><p class="s14" style="padding-top: 5pt;padding-left: 53pt;text-indent: -12pt;line-height: 108%;text-align: left;">4. This isn’t true for all Unix program interpreters—but almost all. That it’s usually true is part of why the special two-character sequence <span class="s29">#! </span>was chosen: that line is interpreted by the Unix kernel, but shells and other program interpreters ignore it as a comment.</p><p class="s29" style="padding-top: 3pt;padding-left: 224pt;text-indent: 0pt;text-align: left;"><a name="bookmark111">CHAPTER 2 </a><span class="s28">■ </span>USING SHELL FEATURES TOGETHER <span class="s27">47</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s33" style="padding-left: 40pt;text-indent: 0pt;text-align: left;">#!/bin/sh</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;"># <span class="s32">put comments here, one or many lines,</span></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;"># <span class="s32">to describe this program and how to run it</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s33" style="padding-left: 40pt;text-indent: 0pt;text-align: left;">outfile=&quot;$HOME/proglist&quot;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s33" style="padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">for dir in `echo &quot;$PATH&quot; | tr &#39;:&#39; &#39; &#39;` do</p><p class="s33" style="padding-left: 49pt;text-indent: 0pt;line-height: 10pt;text-align: left;">cd &quot;$dir&quot;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s33" style="padding-left: 49pt;text-indent: 0pt;line-height: 115%;text-align: left;">for file in * do</p><p class="s33" style="padding-left: 58pt;text-indent: 0pt;line-height: 115%;text-align: left;">if [ -x &quot;$file&quot; -a ! -d &quot;$file&quot; ] then</p><p class="s33" style="padding-left: 67pt;text-indent: 0pt;line-height: 10pt;text-align: left;">echo &quot;$file&quot;</p><p class="s33" style="padding-top: 1pt;padding-left: 49pt;text-indent: 8pt;line-height: 115%;text-align: left;">fi done</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s33" style="padding-left: 40pt;text-indent: 0pt;text-align: left;">done | sort &gt; $outfile</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 58pt;text-indent: 0pt;text-align: left;">Once you have the script file ready, make it executable. For example, if the filename is</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">make_proglist<span class="p">:</span></p><p class="s33" style="padding-top: 8pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">%  chmod  +x  make_proglist</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part52.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part54.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
