<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Prefix Completion</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part278.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part280.htm">Next &gt;</a></p><p class="s35" style="padding-left: 40pt;text-indent: 0pt;text-align: left;"><a name="bookmark500">Prefix Completion</a></p><p style="padding-top: 5pt;padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">If the cursor is positioned in the middle of a word when completion is invoked, there are a number of different ways in which that can be treated from the perspective of deciding which possibilities match. In <span class="s33">bash</span>, the suffix is considered when matching but is strangely also preserved after completion. Here is an example of the <span class="s33">bash </span>behavior:</p><p class="s33" style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">bash$ <b>ls -d /usr/l*</b></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">/usr/lib    /usr/local    /usr/lost+found bash$  <b>cd  /usr/l</b>&lt;tab&gt;<b>oc</b></p><p class="s67" style="padding-left: 49pt;text-indent: 0pt;line-height: 10pt;text-align: left;">➤ <span class="s33">cd /usr/local/oc </span><span class="s32">with the cursor positioned over the second o</span></p><p style="padding-top: 8pt;padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">The default in <span class="s33">zsh </span>is to handle matching as if the cursor is at the end of the word. So in the previous example, it would complete the word to <span class="s33">/usr/local/</span>. With the <span class="s33">complete_in_word </span>option turned on, however, matching is done by expecting the characters after the cursor to be at the end of any matches. The option is off by default because it can take a little while to get used to but once you are accustomed to using it, you’ll find it can be very powerful. To give an example, if you complete <span class="s33">h.html </span>with the cursor positioned over the dot, it will complete to any</p><p class="s29" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark529"><span class="s27">250 </span></a>CHAPTER 10 <span class="s28">■ </span>COMPLETION </p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 115%;text-align: justify;">files starting with <span class="s33">h </span>and with an <span class="s33">.html </span>extension. I often find it is useful with the <span class="s33">look </span>or <span class="s33">dict </span>commands: try completing <span class="s33">fless </span>with the cursor over the <span class="s33">l </span>and it will match words starting with <span class="s33">f </span>and ending in <span class="s33">less</span>.</p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">An alternative approach is provided by the <span class="s33">_prefix </span>completer. It performs completion with any suffix completely ignored. You can use it instead of the normal <span class="s33">_complete </span>completer, but it is quite common to use it after <span class="s33">_complete </span>so that it will only be used if that failed. To use it, you need to have the <span class="s33">complete_in_word </span>option turned on. <span class="s33">_prefix </span>doesn’t actually do comple- tion itself. Instead, it looks up the <span class="s33">completer </span>style and calls other completers to do completion; it just hides any suffix first. To set it up you can use the following:</p><p class="s33" style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">setopt complete_in_word</p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;line-height: 115%;text-align: left;">zstyle  &#39;:completion:::::&#39;  completer  _complete  _prefix zstyle  &#39;:completion::prefix:::&#39;  completer  _complete</p><p style="padding-top: 7pt;padding-left: 41pt;text-indent: 17pt;line-height: 115%;text-align: left;">If you want to keep the number of styles down and don’t want a different set of completers to be used with <span class="s33">_prefix</span>, you could replace the two styles with this one:</p><p class="s33" style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">zstyle &#39;:completion::*:::&#39; completer _complete _prefix</p><p style="padding-top: 8pt;padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">Adding the star (asterisk) to the completer component of the context here allows this style to match when looked up by the <span class="s33">_prefix </span>completer. <span class="s33">_prefix </span>knows to miss out the <span class="s33">_prefix </span>completer itself so you don’t need to worry about it calling itself again.</p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">The following is an example of a case where <span class="s33">_prefix </span>can be useful. We want to add the command <span class="s33">sudo </span>to the front of a command line, to force the operation in the rest of the command line to be run as <span class="s33">root</span>:</p><p class="s33" style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">% <b>chmod 644 file</b>&lt;ctrl-a&gt;</p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">% <b>sud</b>&lt;tab&gt;<b>chmod 644 file</b></p><p class="s67" style="padding-top: 1pt;padding-left: 30pt;text-indent: 0pt;text-align: center;">➤ <span class="s33">sudochmod  644  file</span></p><p style="padding-top: 8pt;padding-left: 59pt;text-indent: 0pt;text-align: left;">The Ctrl-a took the cursor back to the beginning of the line (at least in emacs mode). Without</p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;line-height: 115%;text-align: left;">_prefix<span class="p">, if you wanted completion to work here, you would otherwise have to insert a space and then move back a character. In this example, you would want to insert a space after </span>sudo<span class="p">. This will not always be the case, but if you want a space to be inserted automatically for you, the following style will do that:</span></p><p class="s33" style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">zstyle &#39;:completion:*:prefix:*&#39; add-space true</p><p style="padding-top: 8pt;padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">There is also an <span class="s33">expand-or-complete-prefix </span>editor command. This is like <span class="s33">_prefix </span>but is only useful nowadays if you don’t run <span class="s33">compinit</span>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part278.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part280.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
