<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Device Files</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part186.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part188.htm">Next &gt;</a></p><p class="s35" style="padding-left: 40pt;text-indent: 0pt;text-align: left;"><a name="bookmark352">Device Files</a></p><p style="padding-top: 5pt;padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">If you look in the directory <span class="s33">/dev </span>on a Unix system, you’ll see a lot of files with cryptic names. (On many modern systems they’re mostly in subdirectories rather than in <span class="s33">/dev </span>itself.) Running <span class="s33">ls -l </span>will show you lines beginning with <span class="s33">b </span>and <span class="s33">c </span>that correspond to special files, among other files. They refer to hardware <i>devices </i>that operate by blocks of characters (the lines with a <span class="s33">b </span>in the first column) and by individual characters (the lines with a <span class="s33">c </span>in the first column). A device is usually some peripheral attached to the computer. Unix is a little unusual in making devices look like files in this fashion.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">For example, the terminal on most systems is known as a character device; if you write to the device, instead of the text ending up on the disk, it appears on the screen:</p><p class="s33" style="padding-top: 6pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">% <b>echo Hello there &gt;/dev/tty</b></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">Hello there</p><p style="padding-top: 8pt;padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: justify;">This is the same as if you hadn’t redirected it. It’s more useful in a command where most of the output goes somewhere else. For example, you could use the previous lines in a function or script that you use to create output for a file.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">The special file named <span class="s33">/dev/tty </span>always refers to the terminal of the process writing to it, so it can be a different physical device for each process.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">If you’re using Cygwin, you won’t find anything of interest in <span class="s33">/dev</span>, because Windows doesn’t work that way. However, Unix programmers are so used to being able to use <span class="s33">/dev/tty </span>and other fixed paths that Cygwin pretends they exist and tries to do the right thing anyway. So don’t be surprised to see references to <span class="s33">/dev </span>in scripts and functions that run on Cygwin.</p><p class="s29" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark386"><span class="s27">172 </span></a>CHAPTER 8 <span class="s28">■ </span>FILES AND DIRECTORIES </p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">On Unix, disks, mice, modems, and printer ports can also be accessed by special files. They are very rarely used directly from the shell, however. We’ll now discuss a few devices that are useful in the shell.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part188.htm">The Null Device</a><a class="toc0" href="part189.htm">The Zero Device</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part186.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part188.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
