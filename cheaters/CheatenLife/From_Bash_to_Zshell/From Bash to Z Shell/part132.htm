<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Verifying and Quoting History References</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part131.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part133.htm">Next &gt;</a></p><p class="s35" style="padding-left: 40pt;text-indent: 0pt;text-align: left;"><a name="bookmark258">Verifying and Quoting History References</a></p><p style="padding-top: 5pt;padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">Both shells support a very useful option, <span class="s33">histverify</span>, which lets you check the line after modi- fication. (In <span class="s33">bash</span>, set this with <span class="s33">shopt -s histverify</span>.) When the option is set, any history substitution involving <span class="s33">!</span>’s or <span class="s33">^’</span>s causes the modified line to appear in the line editor. You can edit the line or simply press Return to execute it.</p><p class="s33" style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">bash <span class="p">supports a relative of </span>histverify<span class="p">, named </span>histreedit<span class="p">. In this case, you are given a line to edit if the history modification failed. This can happen either because a modifier did nothing, or because you referred to a line or word that wasn’t there. Since history expansion occurs so early in processing, a failed history expansion usually just disappears. It’s not saved in the history because it was never executed.</span></p><p class="s33" style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: justify;">zsh <span class="p">doesn’t support </span>histreedit<span class="p">. It also complains (more than </span>bash<span class="p">) about failed modifiers. For example, it complains if you use a </span>:h <span class="p">modifier on a word with no slash. </span>bash <span class="p">just gives you the whole word.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s37" style="text-indent: 0pt;text-align: right;">r</p><p class="s29" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark277"><span class="s27">132 </span></a>CHAPTER 6 <span class="s28">■ </span>MORE ABOUT SHELL HI STORY </p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: justify;">If you want your exclamation marks to be treated normally, the simplest thing to do is put a <span class="s33">\ </span>in front. However, quoting an expression with single quotes also renders exclamation marks harmless. Hence, for example:</p><p class="s33" style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;line-height: 115%;text-align: left;">echo  What  a  line  that  was&#39;!!&#39;    Full  of  interesting  commands\!\! What  a  line  that  was!!  Full  of  interesting  commands!!</p><p style="padding-top: 7pt;padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: justify;">Using double quotes does <i>not </i>have this effect; <span class="s33">!’</span>s in double quotes are subject to history substitution:</p><p class="s33" style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">% <b>echo unrepeatable</b></p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">unrepeatable</p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">% <b>echo &quot;!:1&quot;</b></p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;line-height: 115%;text-align: left;">echo &quot;unrepeatable&quot; unrepeatable</p><p class="s33" style="padding-left: 41pt;text-indent: 0pt;line-height: 10pt;text-align: left;">% <b>echo &#39;!!&#39;</b></p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">!!</p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">% <b>echo \!\!</b></p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">!!</p><p style="padding-top: 8pt;padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">It’s also possible to turn off this form of history completely. In <span class="s33">bash </span>it’s accomplished with the following command:</p><p class="s33" style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">set +H</p><p style="padding-top: 8pt;padding-left: 59pt;text-indent: 0pt;text-align: left;">In <span class="s33">zsh </span>it’s easiest to set the option by name:</p><p class="s33" style="padding-top: 8pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">setopt no_bang_hist</p><p style="padding-top: 8pt;padding-left: 41pt;text-indent: 17pt;line-height: 115%;text-align: left;">This disables both the <span class="s33">! </span>(bang) forms and the substitution shortcut using <span class="s33">^</span>. <span class="s33">bash </span>actually allows you to turn off all forms of history by <span class="s33">set +o history</span>. After this it won’t store history lines at all. (There’s no obvious reason for doing this.)</p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">Note that noninteractive shells don’t do any form of history at all. All lines are read one at a time and then forgotten, and <span class="s33">! </span>is not a special character. This applies any time the input doesn’t come from the keyboard. For example, <span class="s33">! </span>characters aren’t special in startup files.</p><p style="padding-left: 59pt;text-indent: 0pt;line-height: 10pt;text-align: left;">In <span class="s33">zsh</span>, putting <span class="s33">!&quot; </span>on a line stops any <span class="s33">!’</span>s after it from being substituted. Hence for example:</p><p class="s33" style="padding-top: 8pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">% <b>echo Bang, you\&#39;re dead.</b></p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">Bang you&#39;re dead.</p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;line-height: 115%;text-align: justify;">% <b>echo !:1 Bang !&quot;!! </b>echo Bang, Bang \!\! Bang, Bang !!</p><p style="padding-top: 7pt;padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: justify;">The first <span class="s33">! </span>was active. The <span class="s33">!&quot; </span>was removed from the line, but prevented the following <span class="s33">!! </span>from being used for history expansion. It doesn’t take word identifiers or modifiers; a colon after it is a normal colon.</p><p class="s29" style="padding-top: 3pt;padding-left: 247pt;text-indent: 0pt;text-align: left;"><a name="bookmark278">CHAPTER 6 </a><span class="s28">■ </span>MORE AB OU T SHELL HISTOR Y <span class="s27">133</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="504" height="1" alt="image" src="Image_153.png"/></span></p><p class="s21" style="padding-top: 4pt;padding-left: 40pt;text-indent: 0pt;line-height: 117%;text-align: left;">■<span class="s23">Tip </span><span class="s19">Both shells offer an editor command called magic-space, designed to be bound to the spacebar. It inserts a space into the current line, as the spacebar normally does. The “magic” part is that it also performs history expansion on the current line, resolving all uses of ! for history that are present. This makes the command line much easier to read. In bash, the command bind &#39;&quot; &quot;: magic-space&#39; turns on this effect. In zsh, use the command bindkey &#39; &#39; magic-space instead.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="504" height="1" alt="image" src="Image_154.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part131.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part133.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
