<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Forcing History to be Read or Written</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part139.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part141.htm">Next &gt;</a></p><p class="s35" style="padding-left: 40pt;text-indent: 0pt;text-align: left;"><a name="bookmark266">Forcing History to be Read or Written</a></p><p style="padding-top: 5pt;padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">Both shells have the ability to force the history to be read from the history file or written back to it. One reason for doing this is to make commands executed in one terminal window avail- able in another. Save the history file from one window, switch to the other, and read it; the commands you typed in the first window are now available in the second.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">In <span class="s33">bash</span>, reading and writing history is done with the commands <span class="s33">history -r </span>and <span class="s33">history -w</span>. Because <span class="s33">bash </span>doesn’t have history sharing, these commands are probably more useful than the <span class="s33">zsh </span>counterparts.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">In <span class="s33">zsh</span>, the command to read and write history is less memorable. Before all the line-editing and <span class="s33">!</span>-style history features appeared, the Korn shell had a command <span class="s33">fc </span>(standing for “fix command”) that offered some primitive control over history. You could select lines from the history to pass to a text editor, or to be reexecuted immediately. <span class="s33">zsh </span>has taken this over, but nowadays it is a very clumsy way of using the shell history and we won’t go into details.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">In <span class="s33">zsh</span>, the options <span class="s33">fc -R </span>and <span class="s33">fc -W </span>read and write the history file, respectively. This is quite useful if you don’t like the <span class="s33">share_history </span>option but sometimes need to share the history between shells. You can simply save it from one shell with <span class="s33">fc -W</span>, and then read it in the other shell with <span class="s33">fc -R</span>. Now the second shell’s history looks like the first’s. You can avoid ever using <span class="s33">fc -W </span>if you have the option <span class="s33">inc_append_history </span>set.</p><p class="s29" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark283"><span class="s27">138 </span></a>C HA P T E R 6 <span class="s28">■ </span>M OR E A B O U T S H EL L H I S T O R Y</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part139.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part141.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
