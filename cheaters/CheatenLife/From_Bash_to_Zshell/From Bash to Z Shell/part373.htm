<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Widgets and Functions</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part372.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part374.htm">Next &gt;</a></p><h4 style="padding-left: 40pt;text-indent: 0pt;text-align: left;"><a name="bookmark704">Widgets and Functions</a></h4><p style="padding-top: 6pt;padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: justify;">You’ll find the <span class="s33">zsh </span>documentation refers to line editing commands—including the ones we’ve already introduced with names like <span class="s33">up-line-or-history </span>and <span class="s33">universal-argument</span>—as <i>widgets</i>. This name is quite useful, since it allows us to be clear about whether we are talking about</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s27" style="padding-top: 4pt;padding-left: 39pt;text-indent: 0pt;text-align: right;">347</p><p class="s29" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark726"><span class="s27">348 </span></a>C HA P T E R 14 <span class="s28">■ </span>W R I T I N G E D I T O R CO M M A N D S</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 115%;text-align: left;">something the editor does when you hit a key. Words like “command” or “function” are more ambiguous since they can imply normal shell commands. So from now on, we’ll refer to all commands inside the line editor as <i>widgets</i>. If you’re not familiar with the word, it means much the same as “gadget,” and it was used by the X Window System for a completely different purpose (apparently a contraction of “window gadget”). The use in <span class="s33">zsh </span>is separate from any other.</p><p style="padding-left: 41pt;text-indent: 17pt;line-height: 115%;text-align: left;">The editor widgets introduced in Chapter 4, such as the two we mentioned in the previous paragraph, are built into the shell rather than written as shell functions. That makes them faster and more powerful, but unfortunately you can’t use them as examples for shell functions you write yourself. However, <span class="s33">zsh </span>ships with various widgets that are described in the manual in the section on user contributions toward the end (type <span class="s33">man  zshcontrib</span>). Most likely they are installed somewhere along your function path, so you can look at them for ideas of shell functions you might want to write to extend the editor. We’ll sometimes talk about <i>widget functions</i>, when we mean shell code written to extend the editor. Let’s be clear about the distinction:</p><p style="padding-top: 7pt;padding-left: 67pt;text-indent: -10pt;line-height: 115%;text-align: left;">• A <i>widget </i>is any editing command, whether implemented within the shell or added by you. All the editing commands that we’ve met before this chapter are implemented within the shell, with the exception of those related to the completion system.</p><p style="padding-top: 7pt;padding-left: 67pt;text-indent: -10pt;line-height: 115%;text-align: left;">• A <i>widget function </i>is a piece of shell code that extends the line editor by adding a new widget. It is always a shell function.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part372.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part374.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
