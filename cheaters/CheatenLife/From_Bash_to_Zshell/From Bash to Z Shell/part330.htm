<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Sorting Values</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part329.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part331.htm">Next &gt;</a></p><p class="s18" style="padding-left: 41pt;text-indent: 0pt;text-align: left;"><a name="bookmark595">Sorting Values</a></p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;line-height: 115%;text-align: justify;">When writing scripts, it is often useful to be able to do sorting. Using the <span class="s33">o </span>flag, it is possible to sort an array. It doesn’t have to be an array, though. <span class="s33">zsh </span>allows a command substitution to be nested inside a variable substitution. If you don’t quote the command substitution, word splitting will apply. The result of word splitting can be treated in much the same way as an array. So for example, the following will produce a sorted list of users from the password file:</p><p class="s33" style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">echo  ${(o)$(cut  -d:  -f1  /etc/passwd)}</p><p style="padding-top: 8pt;padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">(The <span class="s33">cut </span>command returns the first field from each line of <span class="s33">/etc/passwd</span>.) Compare this to the following, where we have quoted the command substitution. This means that the result is</p><p class="s29" style="padding-top: 3pt;padding-left: 314pt;text-indent: 0pt;text-align: left;"><a name="bookmark621">CHAPTER 12 </a><span class="s28">■ </span>VARIABLES <span class="s27">299</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">not split into separate words that can be sorted. The output of <span class="s33">cut </span>is not altered, so the result is one username per line:</p><p class="s33" style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">echo ${(o)&quot;$(cut -d: -f1 /etc/passwd)&quot;}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part329.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part331.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
