<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Login Shells</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part113.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part115.htm">Next &gt;</a></p><p class="s35" style="padding-left: 42pt;text-indent: 0pt;text-align: left;"><a name="bookmark226">Login Shells</a></p><p style="padding-top: 5pt;padding-left: 42pt;text-indent: 0pt;line-height: 115%;text-align: left;">First, is the shell a <i>login </i>shell? In the old days, that was simple to decide: when you logged into a computer on a dumb terminal, that was your login shell; if you decided to start another shell</p><p class="s29" style="padding-top: 3pt;padding-left: 275pt;text-indent: 0pt;text-align: left;"><a name="bookmark239">CHAPTER 5 </a><span class="s28">■ </span>STARTING THE SHELL <span class="s27">109</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">inside your login, it wasn’t. Nowadays, your shell probably runs in a window. This means that it probably isn’t a login shell—but it’s not quite that simple. It’s possible that the shell was started as a login shell anyway.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">The shell actually has two ways of deciding whether to act as a login shell. One is if it’s given an option, <span class="s33">-l</span>, or <span class="s33">--login </span>in <span class="s33">bash</span>. (This is a standard option, like the ones we saw back in the section “Command Lines” in Chapter 1; we’ll discuss the shell’s own options shortly. You can pass <span class="s33">-l </span>or <span class="s33">--login </span>to a shell just as you’d give it any other option, should you want to.) The shell can also be started under a name that begins with a dash (<span class="s33">-</span>). This probably seems a bit odd; it’s an old Unix convention. The Unix <span class="s33">login </span>program, which runs when you log into a Unix system, uses this convention to tell the shell that it should act like a login shell.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">If you’re wondering why this is useful, it’s because of a slightly odd feature of Unix. At the lowest level, you start a Unix program by telling the system two things: the pathname to the file that contains the executable program and the name to give the program. This allows a single Unix program to have multiple names, and to change its behavior by checking its name.</p><p style="padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">Although this may seem bizarre in today’s world of gigabyte memories, it was very useful when systems had extremely limited memory and storage space.</p><p style="padding-left: 58pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Apart from determining which startup files the shell runs, as we mentioned, you can type</p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">logout <span class="p">to leave a login shell, whereas you need to use </span>exit <span class="p">or </span>bye <span class="p">to leave any other shell.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="504" height="1" alt="image" src="Image_145.png"/></span></p><p class="s21" style="padding-top: 4pt;padding-left: 40pt;text-indent: 0pt;line-height: 114%;text-align: left;">■<span class="s23">Tip </span><span class="s19">If you aren’t worried whether you’re in a login shell—and most of the time you won’t be—use exit to leave the shell. That always works, and in a login shell the effect is the same as logout. So save yourself from worrying.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="504" height="1" alt="image" src="Image_146.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part113.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part115.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
