<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Executable Files</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part182.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part184.htm">Next &gt;</a></p><p class="s35" style="padding-left: 42pt;text-indent: 0pt;text-align: left;"><a name="bookmark348">Executable Files</a></p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;line-height: 115%;text-align: left;">The third type, executable files or external commands, is really just a subset of the second type. Unless you’re using Cygwin, the only distinction between a command or executable script and any other type of file is that the <i>execute permission </i>is set. We introduced the notion of an executable script file in the section “Making a Script File” in Chapter 2; as far as the permissions are concerned, the same idea applies for all other executable files. Let’s copy a command from another directory into the one shown in the previous listing (I simply copied it from <span class="s33">/usr/bin</span>, in fact):</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:39.4998pt" cellspacing="0"><tr style="height:24pt"><td style="width:56pt"><p class="s49" style="padding-left: 2pt;text-indent: 0pt;line-height: 10pt;text-align: left;">% <b>ls -l</b></p><p class="s49" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">total 8</p></td><td style="width:241pt" colspan="4"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:12pt"><td style="width:56pt"><p class="s49" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">-rwxr-xr-x</p></td><td style="width:45pt"><p class="s49" style="padding-left: 8pt;text-indent: 0pt;text-align: left;">1 pws</p></td><td style="width:50pt"><p class="s49" style="padding-left: 12pt;padding-right: 12pt;text-indent: 0pt;text-align: center;">users</p></td><td style="width:63pt"><p class="s49" style="padding-right: 4pt;text-indent: 0pt;text-align: right;">557656 Aug</p></td><td style="width:83pt"><p class="s49" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">5 22:48 cvs</p></td></tr><tr style="height:12pt"><td style="width:56pt"><p class="s49" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">-rw-r--r--</p></td><td style="width:45pt"><p class="s49" style="padding-left: 8pt;text-indent: 0pt;text-align: left;">1 pws</p></td><td style="width:50pt"><p class="s49" style="padding-left: 12pt;padding-right: 12pt;text-indent: 0pt;text-align: center;">users</p></td><td style="width:63pt"><p class="s49" style="padding-right: 4pt;text-indent: 0pt;text-align: right;">73 Aug</p></td><td style="width:83pt"><p class="s49" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">5 22:42 plain.txt</p></td></tr><tr style="height:11pt"><td style="width:56pt"><p class="s49" style="padding-left: 2pt;text-indent: 0pt;line-height: 10pt;text-align: left;">drwxr-xr-x</p></td><td style="width:45pt"><p class="s49" style="padding-left: 8pt;text-indent: 0pt;line-height: 10pt;text-align: left;">2 pws</p></td><td style="width:50pt"><p class="s49" style="padding-left: 12pt;padding-right: 12pt;text-indent: 0pt;line-height: 10pt;text-align: center;">users</p></td><td style="width:63pt"><p class="s49" style="padding-right: 4pt;text-indent: 0pt;line-height: 10pt;text-align: right;">4096 Aug</p></td><td style="width:83pt"><p class="s49" style="padding-left: 4pt;text-indent: 0pt;line-height: 10pt;text-align: left;">5 22:42 subdir</p></td></tr></table><p style="padding-top: 8pt;padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">That new first file, with all the <span class="s33">x</span>’s, is a command. Usually commands live in the directories given by the variable <span class="s33">PATH </span>rather than just lying around anywhere, but there’s nothing special about the directories in <span class="s33">PATH</span>. You can add any directory you like to <span class="s33">PATH</span>, regardless of what the directory contains. (You will need an absolute path to make sure it always refers to the same directory.)</p><p style="padding-left: 42pt;text-indent: 18pt;line-height: 115%;text-align: left;">Cygwin inherits the Windows requirement that executable files are those ending in <span class="s33">.exe</span>. (Windows can execute files with other suffixes such as <span class="s33">.bat </span>and <span class="s33">.com</span>. A <span class="s33">.bat </span>file is a set of commands like a script, and a <span class="s33">.com </span>file is a type of executable that is less common than an <span class="s33">.exe </span>file.) There is no real executable bit in the permissions; Cygwin just makes it up for you based on the suffix. It does a little bit extra, however; if you try to run <span class="s33">prog </span>as a program but it doesn’t exist, Cygwin will look for a file in the path called <span class="s33">prog.exe </span>and run that instead. This gives you a hybrid of Unix and Windows command handling. Actually, newer Windows filesystems do have the concept of an execute permission. What’s more, not just executables but shared libraries—<span class="s33">.dll </span>files, which provide support for programs—need to have execute permission.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part182.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part184.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
