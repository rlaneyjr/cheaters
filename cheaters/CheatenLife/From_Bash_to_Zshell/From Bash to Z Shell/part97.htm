<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Keymaps</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part96.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part98.htm">Next &gt;</a></p><p class="s35" style="padding-left: 40pt;text-indent: 0pt;text-align: left;"><a name="bookmark173">Keymaps</a></p><p style="padding-top: 5pt;padding-left: 40pt;text-indent: 0pt;line-height: 115%;text-align: left;">The vi insert mode and command mode are examples of <i>keymaps</i>. A keymap is a complete set of key bindings in use at the same time. Looked at this way, emacs mode is simply another keymap. These are the three you will meet most often, but in special operations, particularly in <span class="s33">zsh</span>’s completion system, you will come across others. Keymaps are completely independent; when you bind a key in a certain keymap, nothing happens to any other keymap.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">There are two things you most often want to do with a keymap: switch to it, or bind keys in it. You’ve already seen how to switch to vi or emacs keymaps, but let’s summarize the easiest ways in each case. These are shown in Table 4-11. (In the case of vi, you always start in the insert keymap.)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s13" style="padding-top: 4pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">Table 4-11. <span class="s32">Command to Change between emacs and vi Keymaps</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:40.2pt" cellspacing="0"><tr style="height:15pt"><td style="width:50pt;border-top-style:solid;border-top-width:1pt;border-bottom-style:solid;border-bottom-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:106pt;border-top-style:solid;border-top-width:1pt;border-bottom-style:solid;border-bottom-width:1pt"><p class="s56" style="padding-left: 29pt;text-indent: 0pt;text-align: left;">bash</p></td><td style="width:126pt;border-top-style:solid;border-top-width:1pt;border-bottom-style:solid;border-bottom-width:1pt"><p class="s56" style="padding-left: 25pt;text-indent: 0pt;text-align: left;">zsh</p></td></tr><tr style="height:17pt"><td style="width:50pt;border-top-style:solid;border-top-width:1pt"><p class="s58" style="padding-top: 2pt;text-indent: 0pt;text-align: left;">emacs</p></td><td style="width:106pt;border-top-style:solid;border-top-width:1pt"><p class="s58" style="padding-top: 2pt;padding-left: 29pt;text-indent: 0pt;text-align: left;">set -o emacs</p></td><td style="width:126pt;border-top-style:solid;border-top-width:1pt"><p class="s58" style="padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;">bindkey -e</p></td></tr><tr style="height:17pt"><td style="width:50pt;border-bottom-style:solid;border-bottom-width:1pt"><p class="s58" style="padding-top: 2pt;text-indent: 0pt;text-align: left;">vi</p></td><td style="width:106pt;border-bottom-style:solid;border-bottom-width:1pt"><p class="s58" style="padding-top: 2pt;padding-left: 29pt;text-indent: 0pt;text-align: left;">set -o vi</p></td><td style="width:126pt;border-bottom-style:solid;border-bottom-width:1pt"><p class="s58" style="padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;">bindkey -v</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">To bind keys in a particular keymap, the clearest way is to use the keymap’s name. In the case of emacs mode the name is just <span class="s33">emacs</span>. The two vi keymaps are called in <span class="s33">bash</span>, <span class="s33">vi-insert </span>and <span class="s33">vi-command </span>and in <span class="s33">zsh</span>, <span class="s33">viins </span>and <span class="s33">vicmd</span>. To bind a key in a keymap, use <span class="s33">bind -m </span>or <span class="s33">bindkey</span></p><p class="s33" style="padding-left: 40pt;text-indent: 0pt;line-height: 10pt;text-align: left;">-M <span class="p">followed by the keymap name, then the remaining arguments as normal.</span></p><p style="padding-top: 1pt;padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">For example, the commands below bind <span class="s33">B </span>to <span class="s33">backward-word </span>in the vi command keymap in each shell:</p><p class="s33" style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">bash$ <b>bind -m vi-command &#39;&quot;B&quot;: backward-word&#39;</b></p><p class="s33" style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">zsh% <b>bindkey -M vicmd B backward-word</b></p><p class="s29" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark211"><span class="s27">96 </span></a>CHAPTER 4 <span class="s28">■ </span>EN TERING AND ED ITING THE CO MMAND LINE </p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">(Actually, <i>B </i>is already bound to something similar (a vi version of <span class="s33">backward-word</span>) in both shells already.) All keymaps in both shells are case-sensitive, so this is not the same as binding</p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 115%;text-align: left;"><i>b</i>. If you don’t give a keymap, <span class="s33">bind </span>and <span class="s33">bindkey </span>always operate on the current one, which is usually <span class="s33">emacs </span>or <span class="s33">vi-insert</span>/<span class="s33">viins</span>. The shells never start up with <span class="s33">vi-command</span>/<span class="s33">vicmd </span>active. So to bind a key in the vi command keymap you need to specify the name of the keymap. There’s a shortcut in <span class="s33">zsh</span>: <span class="s33">bindkey -a </span>works like <span class="s33">bindkey -M vicmd</span>. The <span class="s33">vicmd </span>keymap is also known as the <i>alternate </i>keymap. We’ve avoided this since it’s less clear.</p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">You can use the <span class="s33">-m </span>and <span class="s33">-M </span>options with other <span class="s33">bind </span>and <span class="s33">bindkey </span>commands. For example, you can list the vi command keymap with the following commands for <span class="s33">bash </span>and <span class="s33">zsh</span>, respectively:</p><p class="s33" style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">bash$ <b>bind -m vi-command -p</b></p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">zsh% <b>bindkey -M vicmd</b></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">You never lose information simply by switching keymaps. As you switch between <span class="s33">bindkey -e </span>and <span class="s33">bindkey -v </span>in <span class="s33">zsh </span>the bindings in each keymap are preserved, including any you added yourself. The commands simply switch between the sets—they don’t perform any rebinding:</p><p class="s33" style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">zsh% <b>bindkey -e</b></p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">zsh% <b>bindkey &#39;\C-xf&#39; forward-word</b></p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">zsh% <b>bindkey -v</b></p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;line-height: 115%;text-align: left;">zsh% <b>bindkey &#39;\C-xf&#39; </b>&quot;^Xf&quot; undefined-key zsh% <b>bindkey -e</b></p><p class="s33" style="padding-left: 41pt;text-indent: 0pt;line-height: 10pt;text-align: left;">zsh% <b>bindkey &#39;\C-xf&#39;</b></p><p class="s33" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">&quot;^Xf&quot; forward-word</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 18pt;line-height: 115%;text-align: left;">We bound the key sequence <span class="s33">&#39;\C-xf&#39; </span>in the emacs keymap. We switched to vi mode, and found it wasn’t bound. Then we switched back to emacs mode, and found it was still there.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part98.htm">Creating Your Own Keymaps</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part96.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part98.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
