<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>zsh’s compinit</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part259.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part261.htm">Next &gt;</a></p><p class="s35" style="padding-left: 42pt;text-indent: 0pt;text-align: left;"><a name="bookmark481">zsh’s compinit</a></p><p style="padding-top: 5pt;padding-left: 42pt;text-indent: 0pt;line-height: 115%;text-align: left;">The <span class="s33">zsh </span>shell offers a collection of completion functions; a very much more extensive collection than <span class="s33">bash</span>, in fact. While the bash_completion project is maintained independently of <span class="s33">bash</span>, the <span class="s33">zsh </span>developers took a different approach and decided to distribute the completion functions with <span class="s33">zsh </span>itself. So you shouldn’t need to do anything to obtain them.</p><p style="padding-left: 42pt;text-indent: 18pt;line-height: 115%;text-align: left;">The <span class="s33">zsh </span>completion system is enabled ina slightly different manner. You have to run <span class="s33">compinit</span>, which is an autoloaded shell function. So the necessary lines, typically run from <span class="s33">.zshrc</span>, follow:</p><p class="s33" style="padding-top: 6pt;padding-left: 42pt;text-indent: 0pt;line-height: 115%;text-align: left;">autoload -U compinit compinit</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 42pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="226" height="1" alt="image" src="Image_204.png"/></span></p><p style="padding-top: 5pt;padding-left: 42pt;text-indent: 0pt;text-align: left;"><a href="http://www.caliban.org/bash/index.shtml#completion" class="s16" target="_blank">1.   bash_completion is available from </a><a href="http://www.caliban.org/bash/index.shtml#completion" class="s15" target="_blank">http://www.caliban.org/bash/index.shtml#completion</a><a href="http://www.caliban.org/bash/index.shtml#completion" class="s16" target="_blank">.</a></p><p class="s29" style="padding-top: 3pt;padding-left: 304pt;text-indent: 0pt;text-align: left;"><a name="bookmark512">CHAPTER 10 </a><span class="s28">■ </span>COMPLE TION <span class="s27">233</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">The <span class="s33">autoload </span>command here tells <span class="s33">zsh </span>that <span class="s33">compinit </span>is a function that it should automati- cally read in when the function is first run. Autoloadable functions are discussed in more detail later on in the section “Autoloadable Functions” in Chapter 13, so refer to that section if running <span class="s33">compinit </span>produces some sort of error message. The <span class="s33">-U </span>option is there to prevent any aliases from being expanded (that feature being the key reason why <span class="s33">compinit </span>is an autoloadable function and not a sourced script).</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">The <span class="s33">compinit </span>function can also take a number of options. None of these are particularly important to understand. They either give you control over a dump file used to speed up the running of <span class="s33">compinit </span>(you may have noticed <span class="s33">compinit </span>taking a little while to finish the first time you ran it) or over a security check on the file permissions of the completion functions.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">An alternative way to get started with the <span class="s33">zsh </span>completion system is to use the <span class="s33">compinstall </span>function. This is invoked in a similar way to <span class="s33">compinit</span>, first using <span class="s33">autoload</span>. As its principal function, <span class="s33">compinstall </span>guides you in an interactive manner through the many aspects of configuring completion under <span class="s33">zsh</span>. As its name is more suggestive of, though, it will also install the new completion system by adding the necessary lines to your startup file if they aren’t already there.</p><p style="padding-left: 40pt;text-indent: 18pt;line-height: 115%;text-align: left;">If you’re using a sufficiently recent version of <span class="s33">zsh</span>, you can also make use of completion definitions written for <span class="s33">bash</span>. There is a <span class="s33">bashcompinit </span>function that, when invoked <i>after </i><span class="s33">compinit</span>, emulates the bash built-ins related to completion. Though it will allow you to use the entire bash_completion project, we would not recommend you do that because it would override many better native <span class="s33">zsh </span>completion definitions. It is better to pick out any functions that are of particular interest to you.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part259.htm">&lt; Previous</a><span> | </span><a href="../From Bash to Z Shell.html">Contents</a><span> | </span><a href="part261.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
