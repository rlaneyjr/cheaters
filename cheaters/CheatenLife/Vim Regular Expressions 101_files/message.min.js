var gl_message_claim_details_text = {
	'en-US': 'Important Info*',
	'es-MX': 'Datos Importantes*',
	'es-PR': 'Datos Importantes*'
};

var gl_cta_text = {
	'en-US': 'Learn More',
	'es-MX': 'Conoce Más',
	'es-PR': 'Conoce Más'
};

var gl_offer_details_text = {
	'en-US': 'Important Info*',
	'es-MX': 'Datos Importantes*',
	'es-PR': 'Datos Importantes*'
};

var locale;
var details;
var ctaText;
var offerDetails;

gl_initMessage = function(gl) {
    
    var cta = '<div class="gl-offer-asset gl-offer-cta gl-{0}x{1}"></div>';
    cta = String.format(cta, gl.adWidth, gl.adHeight)
    
	var claim = '' +
		'<div class="gl-asset gl-message-asset gl-message-claim gl-message-claim-{0}" style="background:url({1}); opacity:0;">';
	var claim_ = claim +
		'<div class="gl-message-claim-legal gl-message-claim-legal-{0} gl-{3}x{4}" style="display:none;">{2}</div>' +
		'<div class="gl-message-claim-details gl-{3}x{4}">{5}</div>' +
		'</div>';
	claim += '</div>';

	locale = gl_locale || gl.locale;
	details = gl_message_claim_details_text[locale];
    ctaText = gl_cta_text[locale];
    offerDetails = gl_offer_details_text[locale]
    
	if (String.isNullOrEmpty(details)) {
		details = 'Important Info*';
	}
    
    if (String.isNullOrEmpty(ctaText)) {
		details = 'Learn More';
	}
    
	var d = '';
	gl_message_claims.forEach(function(c, i) {
		var u = String.format('{0}/{1}', gl_messagePath, gl_message_claims[i]);
		var l = (i < gl_message_claims_legal.length) ? gl_message_claims_legal[i] : '';
		if (String.isNullOrEmpty(l)) {
			d += String.format(claim, i, u);
		} else {
			d += String.format(claim_, i, u, l, gl.adWidth, gl.adHeight, details);
		}
	});

	var offer = '' +
		'<div class="gl-asset gl-offer gl-offer-{0}" data-index="{0}" style="background:url({1}); opacity:0;">'
	var offer_ = offer +
		'<div class="gl-offer-asset gl-offer-details gl-{2}x{3}"></div>' +
		'</div>';
	offer += '</div>';
//	var dualOfferCond = String.format('{0}/dualOffer/{1}_{2}x{3}.png?{4}', gl.brandIncludesPath, gl.dualOfferConditional, gl.adWidth, gl.adHeight, gl.getChangeId());
    var gl_dual_offer_cond = {
    'en-US': String.format('{0}/dualOffer/{1}_{2}x{3}.png?{4}', gl.brandIncludesPath, gl.dualOfferConditional, gl.adWidth, gl.adHeight, gl.getChangeId()),
	'es-MX': String.format('{0}/dualOffer/spanish/{1}_{2}x{3}.png?{4}', gl.brandIncludesPath, gl.dualOfferConditional, gl.adWidth, gl.adHeight, gl.getChangeId()),
	'es-PR': String.format('{0}/dualOffer/spanish/{1}_{2}x{3}.png?{4}', gl.brandIncludesPath, gl.dualOfferConditional, gl.adWidth, gl.adHeight, gl.getChangeId())
    }
    var dualOfferCond = gl_dual_offer_cond[locale];
	gl.offers.forEach(function(o, i) {
		d += String.format(o.hasDetails ? offer_ : offer, i, o.path + '.png?' + gl.getChangeId(), gl.adWidth, gl.adHeight);
		if (gl.isDualOffer && (i < (gl.offers.length - 1))) {
			d += String.format('<div class="gl-asset gl-offer gl-offer-dual-{0}" style="background:url({1}); opacity:0;"></div>', i, dualOfferCond);
		}
	});
    
    d = d + cta;

	var contents = gl.target.find('.gl-message-contents');
	contents
		.html(d)
		.find('.gl-message-claim-details')
		.on('click', function(e) {
			e.preventDefault();
			e.stopImmediatePropagation();
			var c = gl.target.find('.gl-message-claim');
			for (var i = c.length - 1; i >= 0; i--) {
				if (c[i].style.opacity > 0) {
					contents.find('.gl-message-claim-legal-' + i).show();
					break;
				}
			}
		});

	gl.target.find('.gl-message-logo').css('background', String.format('url({0})', gl.logoPath + '.png?' + gl.getChangeId()));
};

gl_initOffer = function(gl) {

	var contents = gl.target.find('.gl-message-contents');

	contents.find('.gl-offer')
		.on('click', function(e) {
			gl.messageEvent(GLEvent.CLICK_OUT);
		});
    contents.find('.gl-message-claim')
		.on('click', function(e) {
			gl.messageEvent(GLEvent.CLICK_OUT);
		});
	contents.find('.gl-offer-cta')
		.text(ctaText)
		.on('click', function(e) {
			gl.messageEvent(GLEvent.SHOW_DDL);
			return false;
		});
	contents.find('.gl-offer-details')
		.text(offerDetails)
		.on('click', function(e) {
			var idx = parseInt(e.target.parentElement.attr('data-index'));
			gl.messageEvent(GLEvent.SHOW_OFFER_DETAILS, idx);
			return false;
		});
};

gl_playMessage = function(gl) {

	var messageTimeline = new TimelineLite();
	var transitionTime = 1;
	var messageOnTime = '+=3';
	var showParams = {
		opacity: 1,
		ease: Power1.easeIn,
		onComplete: function() {
			this.target.css('pointer-events', 'auto');
		}
	};
	var hideParams = {
		opacity: 0,
		ease: Power1.easeIn,
		onStart: function() {
			//this.target.css('pointer-events', 'none');
		},
		onComplete: function() {
			gl.target.find('.gl-offer-details-overlay')
				.hide()
				.css('opacity', 1)
				.css('pointer-events', 'auto');
		}
	};
	var lastParams = {
		opacity: 1,
		ease: Power1.easeIn,
		onComplete: function() {
			this.target.css('pointer-events', 'auto');
			gl.messageEvent(GLEvent.MESSAGE_COMPLETE);
		}
	}
	var targets = [];

	gl.offers.forEach(function(o, i) {
		targets.push('.gl-offer-' + i);
		if (gl.isDualOffer && (i < (gl.offers.length - 1))) {
			targets.push('.gl-offer-dual-' + i);
		}
	});
	if (gl_message_claims.length > 0) {
		gl_message_claims.forEach(function(c, i) {
			targets.push('.gl-message-claim-' + i);
		});
		gl.offers.forEach(function(o, i) {
			targets.push('.gl-offer-' + i);
			if (gl.isDualOffer && (i < (gl.offers.length - 1))) {
				targets.push('.gl-offer-dual-' + i);
			}
		});
	}

	targets.forEach(function(t, i) {
		gl.target.find(t).css('pointer-events', 'none');
	});
	targets.forEach(function(t, i) {
		if (i < (targets.length - 1)) {
			var tt = transitionTime;
			var mt = messageOnTime;
			if (gl.isDualOffer && t.contains('dual')) {
				tt /= 2;
				mt = '+=2';
			}
			messageTimeline
				.to(t, tt, showParams)
				.to(t + ', .gl-offer-details-overlay', tt, hideParams, mt)
		}
	});

	messageTimeline
		.to(targets.pop(), transitionTime, lastParams);
};
