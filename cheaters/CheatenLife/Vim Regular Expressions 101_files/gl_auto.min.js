var lib, images, createjs, ss;
var canvas, stage, exportRoot;

var GLMobile = function(options) {

    var template =
        '<div class="swiper-container swiper-container-h gl-swiper gl-main">' +
        '<div id="swipe-animation" style="display:none;"><img id="swipe-hand"><div id="swipe-text">Swipe to Interact</div></div>' +
        '<div class="swiper-nav swiper-nav-prev gl-{0}x{1}" style="display:none;">&lt;</div>' +
        '<div class="swiper-nav swiper-nav-next gl-{0}x{1}" style="display:none;">&gt;</div>' +
        '<div class="swiper-wrapper">' +
        '<div class="swiper-slide gl-asset gl-message gl-{0}x{1}"></div>' +
        '<div class="swiper-slide gl-asset gl-video" style="display:none;">' +
        '<div class="gl-video-background gl-{0}x{1}"></div>' +
        '<div class="gl-video-fullscreen gl-{0}x{1}">Fullscreen Video</div>' +
        '<video id="gl-video" class="gl-{0}x{1}" controls preload="none" {2}></video>' +
        '<div class="gl-video-play gl-{0}x{1}">' +
        '<div class="gl-video-play-icon">' +
        '</div>' +
        '</div>' +
        '</div>' +
        '<div class="swiper-slide gl-asset gl-feature" style="display:none;"></div>' +
        '<div class="swiper-slide gl-asset gl-ddl gl-{0}x{1}" style="display:none;"></div>' +
        '<div class="swiper-slide gl-asset gl-coop gl-{0}x{1}" style="display:none;"></div>' +
        '</div>' +
        '<div class="swiper-pagination swiper-pagination-h gl-swiper-pagination gl-{0}x{1}"></div>' +
        '<div class="gl-static-logo gl-{0}x{1}"></div>' +
        '<div class="gl-static-logo-cta gl-{0}x{1}"></div>' +
        '</div>' +
        '<div class="gl-asset gl-offer-asset gl-offer-details-overlay gl-{0}x{1}" style="display:none;">' +
        '<div class="gl-offer-details-content"></div>' +
        '<div class="gl-offer-close"></div>' +
        '</div>';

    var videoSize = '';
    switch (options.width) {
        case 160:
            videoSize = 'width="160"';
            break;
        case 300:
            videoSize = 'width="300" height="216"';
            break;
        case 728:
            videoSize = 'height="90"';
            break;
        default:
            break;
    }

    var self = new GLMobileBase('gl_auto', String.format(template, options.width, options.height, videoSize), options);

    self.coop = null;
    self.dartCampaignId = options.dartCampaignId;
    self.ddl = null;
    self.ddlType = -1;
    self.dealerButtonText = '';
    self.dealerName = '';
    self.dealerPhone = '';
    self.dealers = [];
    self.featureSwiper = null;
    self.featureSwiperCount = 0;
    self.hasOfferDetails = false;
    self.hasVideo = false;
    self.insideDMA = '';
    self.isCoop = false;
    self.isDDL = false;
    self.offerDetailsButtonText = '';
    self.offerLegalText = '';
    self.offerLegalTextBold = '';
    self.offerType = '';
    self.serviceAmenities = '';
    self.servicePhoneNumber = '';
    self.swiper = null;
    self.swiperCount = 0;
    self.userChangedZip = 0;
    self.videoPath = '';

    self.getClickOutUrl = function() {
        if (self.isDDL && self.dealers.length > 0) {
            return self.dealers[0].clickUrl;
        }
        return self.clickUrl;
    };
    self.parseData = function(data) {
        self.ddlType = -1;
        self.dealers = [];
        for (var i = 0; i < data.data.length; i++) {
            var d = data.data[i];
            var o = d[0];
            switch (o.ObjectType) {
                case 'DEALER':
                    if (self.ddlType < 0) {
                        self.isDDL = true;
                        for (var j = 0; j < d.length; j++) {
                            var dealer = new GLMobileDealer(d[j]);
                            self.dealers.push(dealer);
                        }
                    }
                    break;
                case 'AD':
                    self.ddlType = parseInt(o.DDLType);
                    self.dealerButtonText = o.DealerButtonText || 'Shop Now';
                    self.dealerName = o.DealershipName;
                    self.dealerPhone = (o.DealerPhone || '').replace(" ","");
                    self.hasVideo = parseInt(o.VideoInd) == 1;
                    self.offerDetailsButtonText = o.OfferDetailsButtonText || 'Offer Details';
                    self.offerLegalText = o.OfferLegalText || '';
                    self.offerLegalTextBold = o.OfferLegalTextBold || '';
                    self.offerType = o.OfferType;
                    self.videoPath = o.VideoPath;

                    // o.Offers = [{
                    //     LegalText: 'legal text 1',
                    //     LegalTextBold: 'legal text bold 1',
                    //     Path: 'http://ddlrequest.goodwaygroup.com/Assets/TEST/GMC/Sierra_4WD_Dbl_Cab/2015/Flash/Offers/Offer0.swf'
                    // }, {
                    //     LegalText: 'legal text 2',
                    //     LegalTextBold: 'legal text bold 2',
                    //     Path: 'http://ddlrequest.goodwaygroup.com/Assets/TEST/GMC/Sierra_4WD_Dbl_Cab/2015/Flash/Offers/Offer2.swf'
                    // }];

                    if (o.Offers) {
                        self.offers = [];
                        for (var j = 0; j < o.Offers.length; j++) {
                            var offer = new GLMobileOffer(o.Offers[j]);
                            if (/Offer\d+/.test(offer.path.split('/').pop())) {
                                self.offers.push(offer);
                            }
                        }
                    }

                    self.hasOfferDetails = (self.offerLegalText.replace(/\s/g, '').length > 0);

                    self.isCoop = o.CoopInd == '1';
                    if (self.isCoop) {
                        self.serviceAmenities = o.ServiceAmenities;
                        self.servicePhoneNumber = o.ServicePhoneNumber;
                    }
                    break;
                default:
                    break;
            }
        }
        if (self.ddlType < 1) {
            self.isDDL = false;
        }
        if ((self.dealers.length == 1) && !self.dealers[0].isValid) {
            self.dealers[0].clickUrl = self.clickUrl;
            self.dealers[0].dealerName = self.dealerName;
        }
    };
    self.buildAd_ = self.buildAd;
    self.buildAd = function() {

        if (self.isCoop) {
            console.log("LOGO PATH " + self.logoPath)
            var a = self.logoPath.split('/');
            
            var logo = a.pop().split('_')[0]; // Logo
            var dn = a.pop(); // dealer #
            var nxg = a.pop(); // _NXG
            a.push(dn);
            //adds nxg to the path if it isn't there already
            a.push(nxg);
            a.push(logo);
            self.logoPath = a.join('/');
        }

        self.buildAd_();

        // debug...
        // self.messagePath = 'http://localhost/documents/GoodwayGroup/Goodway.Development/Applications/Goodway.Templates/HTML5/NXG/_brands/Subaru/message0_300x250';
        // self.serviceAmenities = 'hello world';
        // self.servicePhoneNumber = '(111) 222-3333';

        // self.hasFeature = true;
        // gl_featurePath = '//ddlrequest.goodwaygroup.com/Assets/TEST/Subaru/COOP_Forester/2015/html5/_NXG/Features'
        // self.featurePath = gl_featurePath + '/feature0_300x250';
        // self.messagePath = gl_messagePath + '/message0_300x250';
        // self.hasVideo = true;
        // self.videoPath = '//ddlrequest.goodwaygroup.com/assets/TEST/cadillac/swipe_test/img/video.mp4';
        // self.videoPath = '//ddlrequest.goodwaygroup.com/assets/TEST/Chevrolet/Silverado_All_Star_Edition/2015/HTML5/videos/video1.mp4';
        // ...debug

        if (gl_isMobile) {
            // self.target.getElementById('swipe-hand').src = String.format('{0}/libs/swipeHand.svg?{1}', gl_url, self.getChangeId());
            // self.target.getElementById('swipe-animation').show();
        }

        switch (self.adSize) {
            case '160x600':
            case '300x600':
                self.target.find('.gl-static-logo-cta')
                    .html(self.dealerButtonText)
                    .on('click', function(e) {
                        e.preventDefault();
                        e.stopImmediatePropagation();
                        self.showDDL();
                    });
            case '728x90':
                self.target.find('.gl-static-logo')
                    .css('background', String.format('url({0}) no-repeat', self.staticLogo + '.jpg?' + self.getChangeId()))
                    .on('click', function(e) {
                        self.clickOut();
                    });
                break;
            case '300x250':
                break;
            default:
                break;
        }

        self.initMessage();

        if (self.hasFeature) {
            gl_get(self.featurePath + '.json?' + self.getChangeId(), function(data) {
                self.initFeature(JSON.parse(data));
            });
            self.target.find('.gl-feature').show();
        } else {
            self.target.find('.gl-feature').removeClass('swiper-slide');
        }

        if (self.hasVideo && self.adSize == '300x250' || self.hasVideo && self.adSize == '300x600') {
            self.target.find('.gl-video').show('inherit');
            self.initVideo();
        } else {
            self.target.find('.gl-video').removeClass('swiper-slide');
        }

        if (self.isDDL) {
            self.target.find('.gl-ddl').show();
            self.initDDL();
        } else {
            self.target.find('.gl-ddl').removeClass('swiper-slide');
        }

        if (self.isCoop) {
            self.target.find('.gl-coop').show();
            self.target.find('.gl-static-logo-cta').hide();
            self.initCOOP();
        } else {
            self.target.find('.gl-coop').removeClass('swiper-slide');
        }

        if (self.hasFeature || self.hasVideo || self.isDDL || self.isCoop) {
            self.target.find('.swiper-nav')
                .show()
                .on('click', function() {
                    if (self.swiper) {
                        self.swiper.stopAutoplay();
                    }
                });
            self.initSwiper();
        }
    };

    // message
    self.initMessage = function() {

        // gl_loadHtml('http://localhost/documents/GoodwayGroup/Goodway.Templates/HTML5/NXG/_brands/Chevrolet/message0_300x250.html?' + self.getChangeId(), self.target.find('.gl-message'), function() {
        // gl_loadHtml('http://localhost/documents/GoodwayGroup/Goodway.Templates/HTML5/NXG/src/html/Chevrolet/message_300x250.html?' + self.getChangeId(), self.target.find('.gl-message'), function() {
        gl_loadHtml(self.messagePath + '.html?' + self.getChangeId(), self.target.find('.gl-message'), function() {
            self.target.find('.gl-message')
                .css('background', String.format('url({0})', self.backgroundPath + '.jpg?' + self.getChangeId()))
                .evalScript();

            self.target.find('.gl-offer-close').on('click', function() {
                self.hideOfferDetails();
            });

            for (var i = 0; i < gl_message_manifest.length; i++) {
                var m = gl_message_manifest[i];
                var id = m.id.toLowerCase();
                if (id.endsWith('placeholder')) {
                    var p = id.replace('placeholder', 'Path');
                    m.src = self[p] + '.png';
                } else {
                    m.src = String.format('{0}/{1}', gl_messagePath, m.src);
                }
                m.src += ('?' + self.getChangeId());
            }

            if (gl_initMessage) {
                gl_initMessage(self);
            }

            if (gl_initOffer) {
                gl_initOffer(self);
                self.initOffer();
            }

            if (gl_playMessage) {
                gl_playMessage(self);
            }
        });
    };
    self.messageEvent = function(type) {
        switch (type) {
            case GLEvent.CLICK_OUT:
                self.clickOut();
                break;
            case GLEvent.MESSAGE_COMPLETE:
                if (self.isInit && self.swiper) {
                    self.swiper.params.autoplay = 2500;
                    self.swiper.startAutoplay();
                    self.isInit = false;
                }
                self.target.find('.gl-offer-details').show();
                break;
            case GLEvent.SHOW_DDL:
                self.showDDL();
                break;
            case GLEvent.SHOW_OFFER_DETAILS:
                var idx = arguments[1];
                self.showOfferDetails(idx);
                break;
            default:
                break;
        }
    };
    self.addMessageHotspot = function(x, y, width, height, callback) {
        var div = document.createElement('div');
        div.className = 'gl-message-hotspot';
        div.style.left = x;
        div.style.height = height;
        div.style.top = y;
        div.style.width = width;
        div.on('click', function(e) {
            callback(e);
        });

        self.target.find('.gl-message').append(div);
    };

    // offer
    self.initOffer = function() {
        self.target.find('.gl-offer .gl-asset')
            .width(self.adWidth)
            .height(self.adHeight);

        if (self.hasOfferDetails) {
            self.target.find('.gl-offer-close')
                .on('click', function() {
                    self.hideOfferDetails();
                });
        }

        self.buildAdComplete();
    };
    self.showOfferDetails = function(idx) {
        var offer = {
            legalText: self.offerLegalText,
            legalTextBold: self.offerLegalTextBold
        };
        if (self.offers.length > 0) {
            if (idx == undefined) {
                idx = 0;
            }
            if (self.isDualOffer) {
                idx = Math.min(1, idx);
            }
            offer = self.offers[idx];
            if (!offer.hasDetails) {
                self.clickOut();
                return;
            }
        }
        self.target.find('.gl-offer-details-content').html(offer.legalTextBold + offer.legalText);
        self.target.find('.gl-offer-details-overlay').show();
    };
    self.hideOfferDetails = function() {
        self.target.find('.gl-offer-details-overlay').hide();
    };

    // video
    self.initVideo = function() {
        self.target.find('.gl-video-background')
            .css('background', String.format('url({0}_{1}x{2}.{3})', self.videoPath, self.adWidth, self.adHeight, 'jpg?' + self.getChangeId()));

        var v = self.target.getElementById('gl-video');
        v.setAttribute('preload', 'none');
        var s = HTMLElement.create('source', {
            id: 'gl-video-source',
            src: self.videoPath + '.mp4?' + self.getChangeId(),
            type: 'video/mp4'
        })
        v.append(s);
        v.on(VideoEvent.ENDED, function(e) {
            gl_counter(CounterVariable.VIDEO_COMPLETED);
            if (self.swiper) {
                self.swiper.slideNext(false);
            }
        }).on(VideoEvent.PLAYING, function(e) {
            self.target.find('.gl-video-play').hide();
        }).on(VideoEvent.TIME_UPDATE, function(e) {
            var v = e.target;
            var q = v.quartile();
            if (q < 4) {
                if (!v.quartiles[q]) {
                    v.quartiles[q] = true;
                    switch (q) {
                        case 0:
                            gl_counter(CounterVariable.VIDEO_STARTED);
                            break;
                        case 1:
                            gl_counter(CounterVariable.VIDEO_FIRST_QUARTILE);
                            break;
                        case 2:
                            gl_counter(CounterVariable.VIDEO_MIDPOINT);
                            break;
                        case 3:
                            gl_counter(CounterVariable.VIDEO_THIRD_QUARTILE);
                            break;
                        default:
                            break;
                    }
                }
            }
        });

        self.target.find('.gl-video-play')
            .on('click', function(e) {
                self.toggleVideoBackground(false);
                e.currentTarget.hide();
                if (self.swiper.autoplaying) {
                    self.swiper.stopAutoplay();
                }
                self.target.getElementById('gl-video').play();
                self.target.getElementById('gl-video').muted = false;
            });

        if (gl_isMobile) {
            self.target.find('.gl-video-play').hide();
        }
    };
    self.toggleVideoBackground = function(value) {
        if (value) {
            self.target.find('.gl-video-background').show();
        } else {
            self.target.find('.gl-video-background').hide();
        }
    };

    // feature
    self.initFeature = function(pages) {
        var n = self.featurePath.split('/').pop().split('_')[0];
        var d = '';
        for (var i = 0; i < pages.length; i++) {
            var p = pages[i];
            var hideToggle = (p.content.replace(/\s/g, '').length == 0) && (p.disclaimer.replace(/\s/g, '').length == 0)
            if (!p.hasOwnProperty('url')) {
                p.url = '';
            }
            d += String.format('<div class="swiper-slide" style="background:url({0}/{1}_{2}_{3}x{4}.jpg?{5});" data-url="{6}">', gl_featurePath, n, i, self.adWidth, self.adHeight, self.getChangeId(), p.url);
            d += String.format('<div class="gl-feature-page gl-{0}x{1}">', self.adWidth, self.adHeight);
            d += String.format('<div class="gl-feature-title {0}">{1}<i class="gl-feature-page-toggle gl-feature-page-collapsed"></i></div>', hideToggle ? 'gl-feature-no-content' : '', p.title);
            d += String.format('<p class="gl-feature-content">{0}</p>', p.content);
            d += String.format('<p class="gl-feature-disclaimer">{0}</p>', p.disclaimer);
            d += '</div></div>';
        }
        d =
            '<div class="swiper-container swiper-container-v gl-feature-swiper">' +
            '<div class="swiper-wrapper">' +
            d +
            '</div>' +
            String.format('<div class="swiper-pagination swiper-pagination-v gl-feature-pagination gl-{0}x{1}"></div>', self.adWidth, self.adHeight) +
            '</div>';
        self.target.find('.gl-feature').html(d);

        if (self.adSize == '300x250') {
            self.target.find('.gl-feature-title')
                .on('click', function(e) {
                    var title = e.currentTarget;
                    var toggle = title.find('.gl-feature-page-toggle');
                    var feature = title.parentElement;
                    if (toggle.hasClass('gl-feature-page-collapsed')) {
                        TweenLite.to(feature, 0.5, {
                            top: 0,
                            onComplete: function() {
                                toggle
                                    .addClass('gl-feature-page-expanded')
                                    .removeClass('gl-feature-page-collapsed');
                            }
                        });
                        TweenLite.to(feature.find('.gl-feature-content, .gl-feature-disclaimer'), 0.3, {
                            delay: 0.4,
                            opacity: 1
                        });
                    } else {
                        TweenLite.to(feature, 0.5, {
                            top: self.adHeight - 70,
                            onComplete: function() {
                                toggle
                                    .addClass('gl-feature-page-collapsed')
                                    .removeClass('gl-feature-page-expanded');
                            }
                        });
                        TweenLite.to(feature.find('.gl-feature-content, .gl-feature-disclaimer'), 0.3, {
                            opacity: 0
                        });
                    }
                });
        }

        self.featureSwiper = new Swiper('.gl-feature-swiper', {
            direction: 'vertical',
            pagination: '.gl-feature-pagination',
            paginationClickable: true,
            preventClicks: false,
            loop: true,
            autoplayDisableOnInteraction: true,
            spaceBetween: 50,
            onInit: function(swiper) {
                var b = self.target.find('.gl-feature-swiper').find('.swiper-pagination-bullet')[0];
                var h = b.clientHeight;
                switch (self.adSize) {
                    case '160x600':
                        var p = self.target.find('.gl-feature-pagination');
                        break;
                    case '300x250':
                        break;
                    case '728x90':
                        break;
                    default:
                        break;
                }
            },
            onClick: function(swiper, e) {
                var t = e.target;
                var isPaginationBullet = t.hasClass('swiper-pagination-bullet');
                var isPage = t.hasClass('gl-feature-page');
                var isPageToggle = t.hasClass('gl-feature-page-toggle')
                var isTitle = t.hasClass('gl-feature-title');
                if (!isPaginationBullet && !isPage && !isPageToggle && !isTitle) {
                    var s = swiper.slides[swiper.activeIndex];
                    var u = s.getAttribute('data-url').replace(/\s/g, '');
                    if (u.length > 0) {
                        gl_exit(ExitId.FEATURE_CLICKED, u);
                    } else {
                        self.clickOut();
                    }
                }
            },
            onSlideChangeEnd: function(swiper) {
                self.resetFeature();
                if (self.featureSwiperCount > 0) {
                    gl_counter(CounterVariable.FEATURE_SWIPE);
                }
                self.featureSwiperCount++;
            }
        });
    };
    self.resetFeature = function() {
        if (self.adSize == '300x250') {
            self.target.find('.gl-feature-page')
                .css('top', self.adHeight - 70);
            self.target.find('.gl-feature-page-toggle')
                .addClass('gl-feature-page-collapsed')
                .removeClass('gl-feature-page-expanded');
            self.target.find('.gl-feature-content, .gl-feature-disclaimer')
                .css('opacity', 0);
        }
    };

    // DDL
    self.initDDL = function() {
        gl_reportCustomVariableCount1((self.dealers.length == 0) ? ((self.dealerName == '' ? 'None' : self.dealerName)) : self.dealers[0].dealerName);
        gl_loadScript(String.format('{0}/js/gl_ddl.min.js?', gl_url), function() {
            self.ddl = new GLMobileDDL({
                isDebug: self.isDebug,
                isGoLive: true,
                targetId: '.gl-ddl'
            });
            self.ddl.render(self);
        });
    };
    self.showDDL = function() {
        if (self.isDDL) {
            for (var i = self.swiper.slides.length - 1; i >= 0; i--) {
                var s = self.swiper.slides[i];
                if (s.hasClass('gl-ddl')) {
                    self.swiper.slideTo(i);
                    break;
                }
            }
        } else {
            self.clickOut();
        }
    };
    
    self.showMessage = function() {
        self.swiper.slideTo(0);
    };
    
    self.ddlEvent = function(type) {
        switch (type) {
            case GLEvent.SEARCH_ZIP:
                var zip = arguments[1];
                if (self.userZip != zip) {
                    self.userChangedZip = 1;
                    self.userZip = zip;
                    self.getData(function(data) {
                        self.parseData(data);
                        self.ddl.render(self);
                    });
                }
                break;
            case GLEvent.SHOW_MESSAGE:
                self.showMessage();
                break;
            case GLEvent.DEALER_CLICKED:
                self.clickOut(ExitId.DEALER_CLICKED, arguments[1]);
                break;
            default:
                break;
        }
    };

    // coop
    self.initCOOP = function() {
        gl_loadScript(String.format('{0}/js/gl_coop.min.js?{1}', gl_url, self.getChangeId()), function() {
            self.coop = new GLMobileCOOP({
                isDebug: self.isDebug,
                targetId: '.gl-coop'
            });
            self.coop.render(self);
        });
    };
    self.coopEvent = function(type) {
        switch (type) {
            case GLEvent.CLICK_OUT:
                self.clickOut();
                break;
            case GLEvent.COOP_PHONE_CLICKED:
                var url = arguments[1];
                
                if(gl_isMobile) {
                    var callURL = 'https://cdn.goodwaygroup.com/assets/SharedAssets/call.html?num=' + url;
                    Enabler.exitOverride('Call Exit', callURL)
                    

                } else {
                    self.clickOut(ExitId.MAIN_EXIT, {
                    clickUrl: url
                  });
                }
                break;
            case GLEvent.COOP_URL_CLICKED:
                self.clickOut();
                break;
            default:
                break;
        }
    };

    // swiper
    self.initSwiper = function() {
        new Swiper('.gl-swiper', {
            pagination: '.gl-swiper-pagination',
            paginationClickable: true,
            preventClicks: false,
            spaceBetween: 50,
            loop: false,
            resistance: false,
            autoplayDisableOnInteraction: true,
            onInit: function(swiper) {
                self.swiper = swiper;
                if (gl_isMobile) {
                    TweenMax.from(self.target.find('#swipe-hand'), 2, {
                        rotation: '+=80',
                        x: '+=95',
                        onComplete: function() {}
                    });
                }

                self.buildAdComplete();
            },
            onClick: function(swiper, e) {
                self.isInit = false;
                if (swiper.autoplaying) {
                    swiper.stopAutoplay();
                }
                // var t = self.getSlideType(swiper);
                // switch (t) {
                //     case 'message':
                //         break;
                //     case 'offer':
                //         break;
                //     case 'video':
                //         break;
                //     case 'feature':
                //         break;
                //     case 'ddl':
                //         break;
                //     default:
                //         break;
                // }
            },
            onSlideChangeStart: function(swiper) {
                if (self.hasVideo) {
                    self.target.getElementById('gl-video').pause();
                }
            },
            onSlideChangeEnd: function(swiper) {
                if (self.featureSwiper) {
                    self.resetFeature();
                }
                var t = self.getSlideType(swiper);
                switch (t) {
                    case 'message':
                        if (self.swiper) {
                            self.swiper.stopAutoplay();
                        }
                        break;
                        // case 'offer':
                        //     break;
                        // case 'video':
                        //     break;
                        // case 'feature':
                        //     break;
                        // case 'ddl':
                        //     break;
                    default:
                        break;
                }
                if (!swiper.autoplaying && (self.swiperCount >= swiper.slides.length)) {
                    gl_counter(CounterVariable.USER_SWIPE);
                }
                self.swiperCount++;
            },
            onTouchStart: function(swiper) {
                if (gl_isMobile) {
                    TweenLite.to(self.target.getElementById('swipe-animation'), .2, {
                        alpha: 0,
                        ease: Linear.easeNone,
                        onComplete: function() {
                            self.target.getElementById('swipe-animation').hide();
                        }
                    });
                }
            }
        });

        function _swiper_nav(dir) {
            self.isInit = false;
            if (gl_stopMessage) {
                gl_stopMessage();
            }
            if (self.swiper.autoplaying) {
                self.swiper.stopAutoplay();
            }
            if (dir < 0) {
                if (self.swiper.isBeginning) {
                    self.swiper.slideTo(self.swiper.slides.length - 1, self.swiper.params.speed, false);
                } else {
                    self.swiper.slidePrev(false);
                }
            } else {
                if (self.swiper.isEnd) {
                    self.swiper.slideTo(0, self.swiper.params.speed, false);
                } else {
                    self.swiper.slideNext(false);
                }
            }
        }
        self.target.find('.swiper-nav-prev').on('click', function() {
            var t = self.getSlideType(self.swiper);
            if ((t == 'feature') && self.featureSwiper && (self.featureSwiper.activeIndex > 1)) {
                self.featureSwiper.slidePrev(false);
            } else {
                _swiper_nav(-1);
            }
            gl_counter(CounterVariable.USER_CLICK_BACK);
        });
        self.target.find('.swiper-nav-next').on('click', function() {
            var t = self.getSlideType(self.swiper);
            if ((t == 'feature') && self.featureSwiper && (self.featureSwiper.activeIndex < (self.featureSwiper.slides.length - 2))) {
                self.featureSwiper.slideNext(false);
            } else {
                _swiper_nav(1);
            }
            gl_counter(CounterVariable.USER_CLICK_NEXT);
        });
    };
    self.getSlideType = function(swiper) {
        var slide = swiper.slides[swiper.activeIndex];
        var t = '';
        var m = slide.className.match(/\bgl-(?!asset).*\b/g);
        if (m.length > 0) {
            var c = m[0];
            if (c.indexOf('gl-') >= 0) {
                t = c.split(' ')[0].split('-')[1];
            }
        }
        return t;
    };

    // click out
    self.clickOut = function(id, dealer) {
        if (id == undefined) {
            id = ExitId.MAIN_EXIT;
        }
        if (dealer == undefined) {
            if (self.dealers.length > 0) {
                dealer = self.dealers[0];
            } else {
                dealer = {
                    clickUrl: self.clickUrl,
                    dealerId: 0,
                    dealerName: self.dealerName,
                    insideDMA: self.insideDMA,
                    netacuityFlag: self.netacuityFlag,
                    ratioUsed: self.ratioUsed
                }
            }
        }
        if (dealer.dealerName == '') {
            dealer.dealerName = 'None';
        }
        if (self.isDDL) {
            self.trackZip(dealer);
            gl_reportCustomVariableCount2(dealer.dealerName);
        }
        gl_exit(id, dealer.clickUrl);
    };

    // zip tracker
    self.trackZip = function(dealer) {
        
        _LTracker.push({
            file: 'nxg_swiper_auto',
            zip: self.userZip,
            method: "dealerClick",
            campaignAdId: self.campaignAdId,
            value: dealer.dealerName,
            dartCampaignId: self.dartCampaignId,
            site: gl_getParameter('ttdSite')
        });
        
        var params = {
            CampaignAdId: self.campaignAdId,
            DartCampaignId: self.dartCampaignId,
            DealerId: dealer.dealerId,
            InsideDMA: dealer.insideDMA,
            NetacuityFlag: dealer.netacuityFlag,
            RatioUsed: dealer.ratioUsed,
            UserZip: self.userZip,
            UserChangedZip: self.userChangedZip,
            VersionID: 0
        };
                
        var a = [];
        for (var p in params) {
            a.push(String.format('{0}={1}', p, params[p]));
        }
        var url = String.format('//ddlrequest.goodwaygroup.com/2.0/GoLive/TrackZip?{0}', a.join('&'));

        gl_get(url, function(data) {
            console.log(data);
        });
    };

    return self;
};
