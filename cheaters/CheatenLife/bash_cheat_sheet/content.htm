<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-ca" lang="en-ca"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>bash_cheat_sheet</title><style type="text/css"> .a { color: #00007F; font-family:"Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: underline; font-size: 10pt; }
 .s1 { color: black; font-family:"Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 32pt; }
 .s2 { color: black; font-family:"Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 .s3 { color: black; font-family:"Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 15pt; }
 .s4 { color: black; font-family:"Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 14pt; }
 .p, p { color: black; font-family:"Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; margin:0pt; }
 .s5 { color: black; font-family:"Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 .s6 { color: black; font-family:"Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 7.5pt; }
 .s7 { color: black; font-family:"Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 5.5pt; vertical-align: 4pt; }
 .s8 { color: black; font-family:"Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 5.5pt; }
 .s9 { color: black; font-family:"Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9.5pt; }
 .s10 { color: black; font-family:"Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 .s11 { color: black; font-family:"Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s12 { color: black; font-family:"Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8.5pt; }
 li {display: block; }
 #l1 {padding-left: 0pt; }
 #l1> li:before {content: "• "; color: black; font-family:Symbol; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 td>p {display: inline; }
</style></head><body><p style="padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a href="http://freeworld.posterous.com/" class="a" target="_blank">freeworld.posterous.com</a></p><p style="text-indent: 0pt;line-height: 10pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="207" height="246" alt="image" src="Image_001.jpg"/></span></p><p class="s1" style="padding-left: 88pt;text-indent: 0pt;line-height: 36pt;text-align: left;"><a name="a0">Linux Bash Shell</a></p><p class="s1" style="padding-left: 141pt;text-indent: 0pt;text-align: left;">Cheat Sheet</p><p style="text-indent: 0pt;line-height: 8pt;text-align: left;"><br/></p><p class="s2" style="padding-top: 3pt;padding-left: 147pt;text-indent: 0pt;text-align: left;">(works with about every distribution, except for apt-get which is Ubuntu/Debian exclusive)</p><p style="text-indent: 0pt;line-height: 5pt;text-align: left;"><br/></p><p class="s3" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="a1">Legend:</a></p><p style="text-indent: 0pt;line-height: 8pt;text-align: left;"><br/></p><p class="s3" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Everything in “&lt;&gt;” is to be replaced, ex: &lt;fileName&gt; --&gt; iLovePeanuts.txt Don&#39;t include the &#39;=&#39; in your commands</p><p class="s3" style="padding-left: 5pt;text-indent: 0pt;line-height: 17pt;text-align: left;">&#39;..&#39; means that more than one file can be affected with only one command  ex: rm</p><p class="s3" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">file.txt file2.txt movie.mov .. ..</p><p style="text-indent: 0pt;line-height: 9pt;text-align: left;"><br/></p><p class="s4" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="a2">Basic Terminal Shortcuts                                           Basic file manipulation</a></p><p style="text-indent: 0pt;line-height: 14pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">CTRL  L  = Clear the terminal                                                                                 cat &lt;fileName&gt; = show content of file CTRL  D  = Logout                                                                                                                           (less, more)</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">SHIFT Page Up/Down = Go up/down the terminal                                                  head = from the top</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">CTRL  A  =  Cursor to start of line                                                                              -n &lt;#oflines&gt; &lt;fileName&gt; CTRL E = Cursor the end of line</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">CTRL  U  =  Delete left of the cursor                                                                    tail =  from the bottom</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">CTRL  K  =  Delete right of  the  cursor                                                                                     -n  &lt;#oflines&gt; &lt;fileName&gt; CTRL  W  =  Delete  word  on  the  left</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">CTRL  Y  =  Paste (after CTRL  U,K  or W)                                                                            mkdir =  create new  folder</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">TAB  = auto completion of file or command                                                         mkdir myStuff ..</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">CTRL  R  =  reverse search history                                                                       mkdir myStuff/pictures/ ..</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">!! = repeat last command</p><p class="s2" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">CTRL Z = stops the current command (resume with fg in foreground or bg in background)      <span class="p">cp image.jpg newimage.jpg = copy and rename a file</span></p><p class="s4" style="padding-left: 395pt;text-indent: -390pt;text-align: left;">Basic Terminal Navigation                                               <span class="p">cp image.jpg &lt;folderName&gt;/ = copy to folder cp image.jpg folder/sameImageNewName.jpg</span></p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;">ls -a = list all files and folders                                                            cp -R stuff otherStuff = copy and rename a folder</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">ls &lt;folderName&gt; = list files in folder                                                        cp *.txt stuff/ = copy all of *&lt;file type&gt; to folder ls -lh = Detailed list, Human readable</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">ls -l *.jpg = list jpeg files only                                                                mv file.txt Documents/ = move file to a folder</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">ls -lh &lt;fileName&gt;  =  Result  for file only                                                                 mv  &lt;folderName&gt;  &lt;folderName2&gt;  =  move  folder in <span class="s2">folder</span></p><p style="padding-left: 395pt;text-indent: 0pt;text-align: left;">mv  filename.txt  filename2.txt  =  rename  file</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">cd &lt;folderName&gt; = change directory                                                                        mv &lt;fileName&gt; stuff/newfileName</p><p style="padding-left: 5pt;text-indent: 35pt;text-align: left;">if folder name  has spaces use “ “                                                           mv  &lt;folderName&gt;/ .. = move  folder up in hierarchy cd / = go to root</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">cd .. = go up one folder, tip: ../../../                                  rm &lt;fileName&gt; .. = delete file (s)</p><p style="padding-left: 395pt;text-indent: 0pt;text-align: left;">rm -i &lt;fileName&gt; .. = ask for confirmation each file</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">du -h: Disk usage of folders, human  readable                                                 rm  -f &lt;fileName&gt; =  force deletion of a file du -ah: “         “     “   files &amp;  folders, Human  readable                                  rm  -r &lt;foldername&gt;/ =  delete folder</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">du -sh: only show disc usage of folders</p><p style="text-indent: 0pt;line-height: 11pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">pwd = print working directory</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">touch &lt;fileName&gt; = create or update a file</p><p style="text-indent: 0pt;line-height: 11pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">ln file1 file2 =  physical link</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">man &lt;command&gt; = shows  manual (RTFM)                                                                        ln -s file1 file2 = symbolic link</p><p style="text-indent: 0pt;line-height: 9pt;text-align: left;"><br/></p><p class="s4" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="a3">Researching Files                                                          Extract, sort and filter data</a></p><p style="text-indent: 0pt;line-height: 12pt;text-align: left;"><br/></p><p class="s5" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">The slow method (sometimes very slow):                                     <span class="p">grep &lt;someText&gt; &lt;fileName&gt; = search for text in file</span></p><p style="padding-left: 378pt;text-indent: 0pt;text-align: center;">-i = Doesn&#39;t consider uppercase words</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">locate &lt;text&gt; = search the content of all the files                                          -I = exclude binary files</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">locate &lt;fileName&gt; = search for a file                                                     grep -r &lt;text&gt; &lt;folderName&gt;/ = search for file names sudo updatedb = update database  of files                                                           with occurrence of the text</p><p style="text-indent: 0pt;line-height: 11pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">find = the best file search tool (fast)                                             <span class="s5">With regular expressions:</span></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">find -name “&lt;fileName&gt;”</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">find -name “text” = search for files who start with  the word text          grep -E ^&lt;text&gt; &lt;fileName&gt; = search start of lines find -name “*text” = “          “      “      “     end     “      “     “      “             with the word text</p><p style="padding-left: 387pt;text-indent: 0pt;text-align: center;">grep -E &lt;0-4&gt; &lt;fileName&gt; =<span class="s6">shows lines containing numbers 0-4</span></p><p class="s5" style="padding-left: 395pt;text-indent: -390pt;text-align: left;">Advanced Search:                                                                <span class="p">grep -E &lt;a-zA-Z&gt; &lt;fileName&gt; = retrieve all lines with alphabetical letters</span></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Search from file Size (in ~)</p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">find ~ -size +10M  =  search files bigger than.. (M,K,G)                     sort =  sort the content of files</p><p style="padding-left: 395pt;text-indent: 0pt;text-align: left;">sort  &lt;fileName&gt;  =  sort  alphabetically</p><p style="padding-left: 41pt;text-indent: -35pt;text-align: left;">Search from last access                                                                                      sort -o &lt;file&gt; &lt;outputFile&gt; = write result to a file find -name “&lt;filetype&gt;” -atime -5                                                       sort -r &lt;fileName&gt; = sort in reverse</p><p style="padding-left: 76pt;text-indent: 0pt;text-align: left;">(&#39;-&#39; = less than, &#39;+&#39; = more than and nothing = exactly)   sort -R &lt;fileName&gt; = sort randomly</p><p style="padding-left: 395pt;text-indent: 0pt;text-align: left;">sort -n &lt;fileName&gt; = sort numbers</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Search only files or directory’s</p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">find -type d --&gt; ex: find /var/log -name &quot;syslog&quot; -type d             wc = word count</p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">find -type f = files                                                                      wc &lt;fileName&gt; = nbr of line, nbr of words, byte size</p><p style="padding-left: 431pt;text-indent: 0pt;text-align: left;">-l (lines), -w (words), -c (byte size), -m</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">More info: man find, man locate                                                                            (number of characters)</p><p style="text-indent: 0pt;line-height: 11pt;text-align: left;"><br/></p><p style="padding-left: 395pt;text-indent: 0pt;text-align: left;">cut = cut a part of a file</p><p style="padding-left: 395pt;text-indent: 0pt;text-align: left;">-c --&gt; ex: cut -c 2-5 names.txt</p><p style="padding-left: 431pt;text-indent: 0pt;text-align: left;">(cut the characters 2 to 5 of each line)</p><p style="padding-left: 395pt;text-indent: 0pt;text-align: left;">-d (delimiter)            (-d &amp;  -f good for .csv files)</p><p style="padding-left: 395pt;text-indent: 0pt;text-align: left;">-f (# of field to cut)</p><p style="text-indent: 0pt;line-height: 11pt;text-align: left;"><br/></p><p style="padding-left: 395pt;text-indent: 0pt;text-align: left;">more info: man cut, man sort, man grep</p><p style="text-indent: 0pt;line-height: 9pt;text-align: left;"><br/></p><p class="s4" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="a4">Time settings                                                                   (continued)</a></p><p style="text-indent: 0pt;line-height: 12pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">date =  view &amp;  modify time (on your computer)                                              crontab =  execute a command  regularly</p><p style="padding-left: 431pt;text-indent: 0pt;text-align: left;">-e = modify the crontab</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">View:                                                                                                                        -l = view current crontab</p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">date “+%H”  --&gt; If it&#39;s 9  am,  then it will show  09                                               -r =  delete you  crontab date “+%H:%M:%Ss” = (hours, minutes, seconds)                              In crontab the syntax is</p><p style="padding-left: 5pt;text-indent: 35pt;text-align: left;">%Y  = years                                                                                             &lt;Minutes&gt; &lt;Hours&gt; &lt;Day of month&gt; &lt;Day of week (0-6, Modify:                                                                                                               0 = Sunday)&gt; &lt;COMMAND&gt;</p><p style="padding-left: 93pt;text-indent: 0pt;text-align: left;">MMDDhhmmYYYY</p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">Month | Day | Hours | Minutes | Year                                               ex, create the file movies.txt every day at 15:47:</p><p style="padding-left: 395pt;text-indent: 0pt;text-align: left;">47  15  *  *  *  touch  /home/bob/movies.txt</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">sudo date 031423421997 = March 14<span class="s7">t</span><span class="s8">h   </span>1997, 23:42                                               * * * * * --&gt; every minute</p><p style="padding-left: 395pt;text-indent: 0pt;text-align: left;">at 5:30 in the morning, from the 1<span class="s7">s</span><span class="s8">t  </span>to 15<span class="s7">t</span><span class="s8">h  </span><span class="s9">each month:</span></p><p class="s4" style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="a5">Execute programs at another time                                  </a><span class="p">30 5 1-15 * *</span></p><p style="padding-left: 395pt;text-indent: 0pt;text-align: left;">at midnight on Mondays, Wednesdays and Thursdays:</p><p style="padding-left: 395pt;text-indent: -390pt;text-align: left;">use &#39;at&#39; to execute programs in the future                                                    0 0 * * 1,3,4 every two hours:</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Step 1, write in the terminal: at &lt;timeOfExecution&gt; ENTER                         0 */2 * * *</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">ex --&gt; <b>at 16:45 </b>or <b>at 13:43 7/23/11 </b>(to be more precise)                      every 10 minutes Monday to Friday: or after a certain delay:                                                                              */10 * * * 1-5</p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">at now +5 minutes (hours, days, weeks, months, years)</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Step 2: &lt;ENTER  COMMAND&gt;  ENTER                                                                                           <span class="s4">Execute programs in the background</span></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">repeat step 2 as many times you need</p><p style="padding-left: 431pt;text-indent: -425pt;text-align: left;">Step 3: CTRL  D  to close input                                                                          Add  a &#39;&amp;&#39; at the end of a command ex --&gt; cp bigMovieFile.mp4 &amp;</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">atq = show a list of jobs waiting to be executed</p><p style="text-indent: 0pt;line-height: 11pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">nohup: <span class="s9">ignores the HUP  signal when  closing the console</span></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">atrm = delete a job n°&lt;x&gt;                                                                                          (process will still run if the terminal is closed) ex (delete job #42) --&gt; atrm 42                                                                                     ex --&gt; nohup cp bigMovieFile.mp4</p><p style="text-indent: 0pt;line-height: 11pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: -35pt;text-align: left;">sleep = pause between commands                                                                            jobs = know what is running in the background with  &#39;;&#39; you  can  chain  commands,  ex: touch  file; rm  file</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">you can make a pause between commands (<b>m</b>inutes, <b>h</b>ours, <b>d</b>ays)                   fg = put a background process to foreground</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">ex --&gt; touch  file; sleep 10; rm  file &lt;-- 10 seconds                                                    ex: fg (process 1), f%2 (process 2) f%3, ...</p><p style="text-indent: 0pt;line-height: 9pt;text-align: left;"><br/></p><p class="s4" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="a6">Process Management                                                          Create and modify user accounts</a></p><p style="text-indent: 0pt;line-height: 12pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">w  =  who  is logged on and what they are doing                                             sudo adduser bob =  root creates new  user</p><p style="padding-left: 5pt;text-indent: 390pt;text-align: left;">sudo passwd &lt;AccountName&gt; = change a user&#39;s password tload = graphic representation of system load average                              sudo deluser &lt;AccountName&gt; = delete an account</p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">(quit with CTRL C)</p><p style="padding-left: 395pt;text-indent: 0pt;text-align: left;">addgroup  friends  =  create  a  new  user  group</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">ps = Static process list                                                                delgroup friends = delete a user group</p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">-ef --&gt; ex: ps -ef | less</p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">-ejH --&gt; show process hierarchy                                                              usermod -g friends &lt;Account&gt; = add user to a group</p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">-u --&gt; process&#39;s from current user                                                   usermod -g bob boby = change account name</p><p style="padding-left: 395pt;text-indent: 0pt;text-align: left;">usermod -aG friends bob = add groups to a user with-</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">top = Dynamic process list                                                             out loosing the ones he&#39;s already in While in top:</p><ul id="l1"><li style="padding-left: 431pt;text-indent: -371pt;line-height: 16pt;text-align: left;"><p style="display: inline;">q to close top                                                                          <span class="s4">File Permissions</span></p></li><li style="padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;text-align: left;"><p style="display: inline;">h to show the help</p></li><li style="padding-left: 431pt;text-indent: -371pt;line-height: 12pt;text-align: left;"><p style="display: inline;">k to kill a process                                                             chown = change the owner of a file ex  --&gt; chown bob hello.txt</p></li></ul><p style="padding-left: 395pt;text-indent: -390pt;text-align: left;">CTRL  C to top a current terminal process                                                chown user:bob report.txt =  changes the user owning report.txt to &#39;user&#39; and the group  owning it to &#39;bob&#39;</p><p style="padding-left: 41pt;text-indent: -35pt;text-align: left;">kill = kill a process                                                                                             -R = recursively affect all the sub folders You need the PID # of the process                                                              ex --&gt; chown -R bob:bob /home/Daniel</p><p style="padding-left: 76pt;text-indent: 0pt;text-align: left;">ps -u &lt;AccountName&gt; | grep &lt;Application&gt;</p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">Then                                                                                                                     chmod = modify user access/permission – simple way</p><p style="padding-left: 76pt;text-indent: 0pt;text-align: left;">kill &lt;PID&gt; .. .. ..                                                   u = user</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">kill -9 &lt;PID&gt; = violent kill                                                                          g = group</p><p style="padding-left: 431pt;text-indent: 0pt;text-align: left;">o  =  other</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">killall = kill multiple process&#39;s</p><p style="padding-left: 431pt;text-indent: -389pt;text-align: left;">ex --&gt; killall locate                                                                          d = directory (if element is a directory) l = link (if element is a file link)</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">extras:                                                                                                                 r = read (read permissions)</p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">sudo halt &lt;-- to close computer                                                                       w  =  write (write permissions)</p><p style="padding-left: 431pt;text-indent: -389pt;text-align: left;">sudo reboot &lt;-- to reboot                                                                                  x = eXecute (only useful for scripts and programs)</p><p style="text-indent: 0pt;line-height: 9pt;text-align: left;"><br/></p><p class="s4" style="padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;"><a name="a7">File Permissions (continued)                                     Flow Redirection (continued)</a></p><p style="text-indent: 0pt;line-height: 9pt;text-align: left;"><br/></p><table style="border-collapse:collapse;width:544pt;margin-left:5.8pt" cellspacing="0"><tr><td colspan="6"><p class="s10" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">&#39;+&#39; means add a right</p></td><td><p class="s10" style="padding-top: 3pt;padding-left: 26pt;text-indent: 0pt;text-align: left;">terminal output:</p></td></tr><tr><td><p class="s10" style="padding-left: 2pt;text-indent: 0pt;line-height: 10pt;text-align: left;">&#39;-&#39;</p></td><td><p class="s10" style="padding-left: 2pt;text-indent: 0pt;line-height: 10pt;text-align: left;">means</p></td><td><p class="s10" style="padding-left: 2pt;text-indent: 0pt;line-height: 10pt;text-align: left;">delete</p></td><td><p class="s10" style="padding-left: 2pt;text-indent: 0pt;line-height: 10pt;text-align: left;">a right</p></td><td/><td/><td><p class="s10" style="padding-left: 26pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Alex</p></td></tr><tr><td><p class="s10" style="padding-left: 2pt;text-indent: 0pt;line-height: 10pt;text-align: left;">&#39;=&#39;</p></td><td><p class="s10" style="padding-left: 2pt;text-indent: 0pt;line-height: 10pt;text-align: left;">means</p></td><td><p class="s10" style="padding-left: 2pt;text-indent: 0pt;line-height: 10pt;text-align: left;">affect</p></td><td><p class="s10" style="padding-left: 2pt;text-indent: 0pt;line-height: 10pt;text-align: left;">a right</p></td><td/><td/><td><p class="s10" style="padding-left: 26pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Cinema</p></td></tr><tr><td/><td/><td/><td/><td/><td/><td><p class="s10" style="padding-left: 26pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Code</p></td></tr></table><p style="padding-left: 7pt;text-indent: 0pt;line-height: 10pt;text-align: left;">ex --&gt; chmod g+w someFile.txt                                                                               Game</p><p style="padding-left: 43pt;text-indent: 0pt;text-align: left;">(add to current group the right to modify someFile.txt)               Ubuntu</p><p style="text-indent: 0pt;line-height: 11pt;text-align: left;"><br/></p><p style="padding-left: 7pt;text-indent: 0pt;text-align: left;">more info: man chmod                                                                                                                Another example --&gt; wc -m &lt;&lt; END</p><p style="text-indent: 0pt;line-height: 11pt;text-align: left;"><br/></p><p class="s4" style="padding-left: 7pt;text-indent: 0pt;text-align: left;"><a name="a8">Flow redirection                                                               Chain commands</a></p><p style="text-indent: 0pt;line-height: 12pt;text-align: left;"><br/></p><p style="padding-left: 433pt;text-indent: -425pt;text-align: left;">Redirect results of commands:                                                                          &#39;|&#39; at the end of a command to enter another one ex --&gt; du | sort -nr | less</p><p style="padding-left: 7pt;text-indent: 0pt;text-align: left;">&#39;&gt;&#39; at the end of a command to redirect the result to a file</p><p style="padding-left: 43pt;text-indent: 0pt;text-align: left;">ex --&gt; ps -ejH &gt; process.txt                                                               <span class="s4">Archive and compress data</span></p><p style="padding-left: 7pt;text-indent: 0pt;text-align: left;">&#39;&gt;&gt;&#39; to redirect the result to the end of a file</p><p style="text-indent: 0pt;line-height: 11pt;text-align: left;"><br/></p><p class="s5" style="padding-left: 7pt;text-indent: 0pt;text-align: left;">Redirect errors:</p><p style="padding-left: 7pt;text-indent: 0pt;text-align: left;">Archive and compress data the long way:</p><p style="text-indent: 0pt;line-height: 14pt;text-align: left;"><br/></p><p style="padding-left: 7pt;text-indent: 0pt;text-align: left;">Step 1, put all the files you want to compress in</p><p style="padding-left: 43pt;text-indent: -35pt;text-align: left;">&#39;2&gt;&#39; at the end of the command to redirect the result to a file           the same folder: ex --&gt; mv *.txt folder/ ex  --&gt; cut -d , -f 1  file.csv &gt;  file 2&gt;  errors.log</p><p style="padding-left: 7pt;text-indent: 0pt;text-align: left;">&#39;2&gt;&amp;1&#39; to redirect the errors the same way as the standard output         Step 2, Create the tar file:</p><p style="padding-left: 397pt;text-indent: 0pt;text-align: left;">tar -cvf my_archive.tar folder/</p><p style="padding-left: 7pt;text-indent: 0pt;text-align: left;">Read progressively from the keyboard                                                                    -c : creates a .tar archive</p><p style="padding-left: 433pt;text-indent: 0pt;text-align: left;">-v : tells you what is happening (verbose)</p><p style="padding-left: 7pt;text-indent: 0pt;text-align: left;">&lt;Command&gt; &lt;&lt; &lt;wordToTerminateInput&gt;                                                                    -f : assembles the archive into one file</p><p class="s11" style="padding-left: 43pt;text-indent: 0pt;text-align: left;">ex --&gt; sort &lt;&lt; END &lt;-- This can be anything you want</p><p class="s12" style="padding-left: 78pt;text-indent: 0pt;text-align: left;">&gt; Hello                                                                                                               Step 3.1, create gzip file (most current):</p><p class="s12" style="padding-left: 78pt;text-indent: 0pt;text-align: left;">&gt; Alex                                                                                                                   gzip my_archive.tar</p><p class="s12" style="padding-left: 78pt;text-indent: 0pt;text-align: left;">&gt; Cinema                                                                                                                             to decompress: gunzip my_archive.tar.gz</p><p class="s12" style="padding-left: 78pt;text-indent: 0pt;text-align: left;">&gt;  Game</p><p class="s12" style="padding-left: 78pt;text-indent: 0pt;text-align: left;">&gt; Code                                                                                                                  Step 3.2, or create a bzip2 file (more powerful but slow):</p><p class="s12" style="padding-left: 78pt;text-indent: 0pt;text-align: left;">&gt; Ubuntu                                                                                                                     bzip2 my_archive.tar</p><p class="s12" style="padding-left: 78pt;text-indent: 0pt;text-align: left;">&gt; END                                                                                                                                                to decompress: bunzip2 my_archive.tar.bz2</p><p style="text-indent: 0pt;line-height: 9pt;text-align: left;"><br/></p><p class="s4" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="a9">Archive and compress data (continued)                         Installing software</a></p><p style="text-indent: 0pt;line-height: 12pt;text-align: left;"><br/></p><p style="padding-left: 46pt;text-indent: -41pt;text-align: left;">step 4, to decompress the .tar file:                                                When software is available in the repositories: tar -xvf archive.tar archive.tar                                            sudo apt-get install &lt;nameOfSoftware&gt;</p><p style="padding-left: 431pt;text-indent: 0pt;text-align: left;">ex--&gt; sudo apt-get install aptitude</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Archive and compress data the fast way:</p><p style="text-indent: 0pt;line-height: 11pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">If you download it from the Internets in .gz format</p><p style="padding-left: 41pt;text-indent: -35pt;text-align: left;">gzip: tar -zcvf my_archive.tar.gz folder/                                            (or bz2) - “Compiling from source” decompress: tar -zcvf my_archive.tar.gz Documents/                    Step 1, create a folder to place the file:</p><p style="padding-left: 431pt;text-indent: 0pt;text-align: left;">mkdir /home/username/src &lt;-- then cd to it</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">bzip2: tar -jcvf  my_archive.tar.gz folder/</p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">decompress: tar -jxvf archive.tar.bz2 Documents/                         Step 2, with &#39;ls&#39; verify that the file is there</p><p style="padding-left: 395pt;text-indent: 0pt;text-align: left;">(if not, mv ../file.tar.gz /home/username/src/)</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Show  the  content  of  .tar, .gz  or  .bz2    without  decompressing  it:</p><p style="text-indent: 0pt;line-height: 11pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Step 3, decompress the file (if .zip: unzip &lt;file&gt;)</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">gzip:                                                                                                           &lt;--</p><p style="padding-left: 5pt;text-indent: 35pt;text-align: left;">gzip -ztf archive.tar.gz                                                                 Step 4, use &#39;ls&#39;, you should see a new directory bzip2:                                                                                                        Step 5, cd to the new directory</p><p style="padding-left: 5pt;text-indent: 35pt;text-align: left;">bzip2 -jtf archive.tar.bz2                                                                Step 6.1, use ls to verify you have an INSTALL file, tar:                                                                                            then: more INSTALL</p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">tar -tf archive.tar                                                                            If you don&#39;t have an INSTALL file:</p><p style="padding-left: 395pt;text-indent: 0pt;text-align: left;">Step 6.2, execute <b>./configure </b>&lt;-- creates a <span class="s11">makefile</span></p><p style="padding-left: 41pt;text-indent: -35pt;text-align: left;">tar extra:                                                                                                   Step 6.2.1, run make &lt;-- builds application binaries tar -rvf archive.tar file.txt = add a file to the .tar             Step 6.2.2 : switch to root --&gt; su</p><p style="padding-left: 5pt;text-indent: 390pt;text-align: left;">Step 6.2.3 : make install &lt;-- installs the software You can also directly compress a single file and view the file              Step 7, read the readme file</p><p style="text-indent: 0pt;text-align: left;"><span><img width="145" height="135" alt="image" src="Image_002.png"/></span></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">without decompressing:</p><p style="text-indent: 0pt;line-height: 11pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: -35pt;text-align: left;">Step 1, use gzip or bzip2 to compress the file: gzip numbers.txt</p><p style="text-indent: 0pt;line-height: 11pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Step 2, view the file without decompressing it:</p><p style="text-indent: 0pt;text-align: left;"><span><img width="101" height="35" alt="image" src="Image_003.jpg"/></span></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">zcat = view the entire file in the console (same as cat)</p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">zmore = view one screen at a time the content of the file (same as more) zless = view one line of the file at a time (same as less)</p></body></html>
