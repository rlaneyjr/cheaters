#!/usr/bin/env python

# list of packages that should be imported for this code to work
import cobra.mit.access
import cobra.mit.request
import cobra.mit.session
import cobra.model.fv
import cobra.model.pol
import cobra.model.vz
from cobra.internal.codec.xmlcodec import toXMLStr

# log into an APIC and create a directory object
ls = cobra.mit.session.LoginSession('https://1.1.1.1', 'admin', 'password')
md = cobra.mit.access.MoDirectory(ls)
md.login()

# the top level object on which operations will be made
topMo = cobra.model.pol.Uni('')


# build the request using cobra syntax
fvTenant = cobra.model.fv.Tenant(topMo, name=u'SnV')
fvCtx = cobra.model.fv.Ctx(fvTenant, name=u'Superverse')
fvBD = cobra.model.fv.BD(fvTenant, name=u'antigravity')
fvRsCtx = cobra.model.fv.RsCtx(fvBD, tnFvCtxName=u'Superverse')
fvSubnet = cobra.model.fv.Subnet(fvBD, ip=u'10.2.10.1/23', name=u'Subnet')
vzFilter = cobra.model.vz.Filter(fvTenant, name=u'http')
vzEntry = cobra.model.vz.Entry(vzFilter, etherT=u'ip', prot=u'tcp', dFromPort=u'http', name=u'tcp-80', dToPort=u'http')
vzFilter2 = cobra.model.vz.Filter(fvTenant, name=u'https')
vzEntry2 = cobra.model.vz.Entry(vzFilter2, etherT=u'ip', prot=u'tcp', dFromPort=u'https', name=u'tcp-443', dToPort=u'https')
vzFilter3 = cobra.model.vz.Filter(fvTenant, name=u'syslog')
vzEntry3 = cobra.model.vz.Entry(vzFilter3, etherT=u'ip', prot=u'udp', dFromPort=u'514', name=u'udp-514', dToPort=u'514')
vzFilter4 = cobra.model.vz.Filter(fvTenant, name=u'sql-server')
vzEntry4 = cobra.model.vz.Entry(vzFilter4, etherT=u'ip', prot=u'tcp', dFromPort=u'1433', name=u'tcp-1433', dToPort=u'1433')
vzFilter5 = cobra.model.vz.Filter(fvTenant, name=u'mqtt')
vzEntry5 = cobra.model.vz.Entry(vzFilter5, etherT=u'ip', prot=u'tcp', dFromPort=u'1883', name=u'tcp-1883', dToPort=u'1883')
vzFilter6 = cobra.model.vz.Filter(fvTenant, name=u'sql-browser')
vzEntry6 = cobra.model.vz.Entry(vzFilter6, etherT=u'ip', prot=u'udp', dFromPort=u'1434', name=u'udp-1434', dToPort=u'1434')
vzBrCP = cobra.model.vz.BrCP(fvTenant, name=u'web-ui')
vzSubj = cobra.model.vz.Subj(vzBrCP, name=u'http')
vzRsSubjFiltAtt = cobra.model.vz.RsSubjFiltAtt(vzSubj, tnVzFilterName=u'http')
vzSubj2 = cobra.model.vz.Subj(vzBrCP, name=u'https')
vzRsSubjFiltAtt2 = cobra.model.vz.RsSubjFiltAtt(vzSubj2, tnVzFilterName=u'https')
vzBrCP2 = cobra.model.vz.BrCP(fvTenant, name=u'object-store')
vzSubj3 = cobra.model.vz.Subj(vzBrCP2, name=u'http')
vzRsSubjFiltAtt3 = cobra.model.vz.RsSubjFiltAtt(vzSubj3, tnVzFilterName=u'http')
vzSubj4 = cobra.model.vz.Subj(vzBrCP2, name=u'https')
vzRsSubjFiltAtt4 = cobra.model.vz.RsSubjFiltAtt(vzSubj4, tnVzFilterName=u'https')
vzBrCP3 = cobra.model.vz.BrCP(fvTenant, name=u'api-gateway')
vzSubj5 = cobra.model.vz.Subj(vzBrCP3, name=u'http')
vzRsSubjFiltAtt5 = cobra.model.vz.RsSubjFiltAtt(vzSubj5, tnVzFilterName=u'http')
vzSubj6 = cobra.model.vz.Subj(vzBrCP3, name=u'https')
vzRsSubjFiltAtt6 = cobra.model.vz.RsSubjFiltAtt(vzSubj6, tnVzFilterName=u'https')
vzSubj7 = cobra.model.vz.Subj(vzBrCP3, name=u'mqtt')
vzRsSubjFiltAtt7 = cobra.model.vz.RsSubjFiltAtt(vzSubj7, tnVzFilterName=u'mqtt')
vzBrCP4 = cobra.model.vz.BrCP(fvTenant, name=u'logging')
vzSubj8 = cobra.model.vz.Subj(vzBrCP4, name=u'syslog')
vzRsSubjFiltAtt8 = cobra.model.vz.RsSubjFiltAtt(vzSubj8, tnVzFilterName=u'syslog')
vzBrCP5 = cobra.model.vz.BrCP(fvTenant, name=u'message-broker')
vzSubj9 = cobra.model.vz.Subj(vzBrCP5, name=u'mqtt')
vzRsSubjFiltAtt9 = cobra.model.vz.RsSubjFiltAtt(vzSubj9, tnVzFilterName=u'mqtt')
vzBrCP6 = cobra.model.vz.BrCP(fvTenant, name=u'user-data')
vzSubj10 = cobra.model.vz.Subj(vzBrCP6, name=u'sql-server')
vzRsSubjFiltAtt10 = cobra.model.vz.RsSubjFiltAtt(vzSubj10, tnVzFilterName=u'sql-server')
vzSubj11 = cobra.model.vz.Subj(vzBrCP6, name=u'sql-browser')
vzRsSubjFiltAtt11 = cobra.model.vz.RsSubjFiltAtt(vzSubj11, tnVzFilterName=u'sql-browser')
vzSubj12 = cobra.model.vz.Subj(vzBrCP6, name=u'mqtt')
vzRsSubjFiltAtt12 = cobra.model.vz.RsSubjFiltAtt(vzSubj12, tnVzFilterName=u'mqtt')
vzBrCP7 = cobra.model.vz.BrCP(fvTenant, name=u'analytics')
vzSubj13 = cobra.model.vz.Subj(vzBrCP7, name=u'mqtt')
vzRsSubjFiltAtt13 = cobra.model.vz.RsSubjFiltAtt(vzSubj13, tnVzFilterName=u'mqtt')
fvAp = cobra.model.fv.Ap(fvTenant, name=u'Evolution_X')
fvAEPg = cobra.model.fv.AEPg(fvAp, name=u'Web-UI')
fvRsCons = cobra.model.fv.RsCons(fvAEPg, tnVzBrCPName=u'api-gateway')
fvRsCons2 = cobra.model.fv.RsCons(fvAEPg, tnVzBrCPName=u'object-store')
fvRsCons3 = cobra.model.fv.RsCons(fvAEPg, tnVzBrCPName=u'logging')
fvRsPathAtt = cobra.model.fv.RsPathAtt(fvAEPg, tDn=u'topology/pod-1/protpaths-101-102/pathep-[SnV_FI-1B]', encap=u'vlan-110')
fvRsPathAtt2 = cobra.model.fv.RsPathAtt(fvAEPg, tDn=u'topology/pod-1/protpaths-101-102/pathep-[SnV_FI-1A]', encap=u'vlan-110')
fvRsDomAtt = cobra.model.fv.RsDomAtt(fvAEPg, tDn=u'uni/phys-SnV_phys')
fvRsBd = cobra.model.fv.RsBd(fvAEPg, tnFvBDName=u'antigravity')
fvRsProv = cobra.model.fv.RsProv(fvAEPg, tnVzBrCPName=u'web-ui')
fvAEPg2 = cobra.model.fv.AEPg(fvAp, name=u'Object-Store')
fvRsCons4 = cobra.model.fv.RsCons(fvAEPg2, tnVzBrCPName=u'logging')
fvRsPathAtt3 = cobra.model.fv.RsPathAtt(fvAEPg2, tDn=u'topology/pod-1/protpaths-101-102/pathep-[SnV_FI-1B]', encap=u'vlan-111')
fvRsPathAtt4 = cobra.model.fv.RsPathAtt(fvAEPg2, tDn=u'topology/pod-1/protpaths-101-102/pathep-[SnV_FI-1A]', encap=u'vlan-111')
fvRsDomAtt2 = cobra.model.fv.RsDomAtt(fvAEPg2, tDn=u'uni/phys-SnV_phys')
fvRsBd2 = cobra.model.fv.RsBd(fvAEPg2, tnFvBDName=u'antigravity')
fvRsProv2 = cobra.model.fv.RsProv(fvAEPg2, tnVzBrCPName=u'object-store')
fvAEPg3 = cobra.model.fv.AEPg(fvAp, name=u'API-Gateway')
fvRsCons5 = cobra.model.fv.RsCons(fvAEPg3, tnVzBrCPName=u'message-broker')
fvRsCons6 = cobra.model.fv.RsCons(fvAEPg3, tnVzBrCPName=u'logging')
fvRsPathAtt5 = cobra.model.fv.RsPathAtt(fvAEPg3, tDn=u'topology/pod-1/protpaths-101-102/pathep-[SnV_FI-1B]', encap=u'vlan-112')
fvRsPathAtt6 = cobra.model.fv.RsPathAtt(fvAEPg3, tDn=u'topology/pod-1/protpaths-101-102/pathep-[SnV_FI-1A]', encap=u'vlan-112')
fvRsDomAtt3 = cobra.model.fv.RsDomAtt(fvAEPg3, tDn=u'uni/phys-SnV_phys')
fvRsBd3 = cobra.model.fv.RsBd(fvAEPg3, tnFvBDName=u'antigravity')
fvRsProv3 = cobra.model.fv.RsProv(fvAEPg3, tnVzBrCPName=u'api-gateway')
fvAEPg4 = cobra.model.fv.AEPg(fvAp, name=u'Logging')
fvRsPathAtt7 = cobra.model.fv.RsPathAtt(fvAEPg4, tDn=u'topology/pod-1/protpaths-101-102/pathep-[SnV_FI-1B]', encap=u'vlan-113')
fvRsPathAtt8 = cobra.model.fv.RsPathAtt(fvAEPg4, tDn=u'topology/pod-1/protpaths-101-102/pathep-[SnV_FI-1A]', encap=u'vlan-113')
fvRsDomAtt4 = cobra.model.fv.RsDomAtt(fvAEPg4, tDn=u'uni/phys-SnV_phys')
fvRsBd4 = cobra.model.fv.RsBd(fvAEPg4, tnFvBDName=u'antigravity')
fvRsProv4 = cobra.model.fv.RsProv(fvAEPg4, tnVzBrCPName=u'logging')
fvAEPg5 = cobra.model.fv.AEPg(fvAp, name=u'Message-Broker')
fvRsCons7 = cobra.model.fv.RsCons(fvAEPg5, tnVzBrCPName=u'api-gateway')
fvRsCons8 = cobra.model.fv.RsCons(fvAEPg5, tnVzBrCPName=u'user-data')
fvRsCons9 = cobra.model.fv.RsCons(fvAEPg5, tnVzBrCPName=u'analytics')
fvRsCons10 = cobra.model.fv.RsCons(fvAEPg5, tnVzBrCPName=u'logging')
fvRsPathAtt9 = cobra.model.fv.RsPathAtt(fvAEPg5, tDn=u'topology/pod-1/protpaths-101-102/pathep-[SnV_FI-1B]', encap=u'vlan-114')
fvRsPathAtt10 = cobra.model.fv.RsPathAtt(fvAEPg5, tDn=u'topology/pod-1/protpaths-101-102/pathep-[SnV_FI-1A]', encap=u'vlan-114')
fvRsDomAtt5 = cobra.model.fv.RsDomAtt(fvAEPg5, tDn=u'uni/phys-SnV_phys')
fvRsBd5 = cobra.model.fv.RsBd(fvAEPg5, tnFvBDName=u'antigravity')
fvRsProv5 = cobra.model.fv.RsProv(fvAEPg5, tnVzBrCPName=u'message-broker')
fvAEPg6 = cobra.model.fv.AEPg(fvAp, name=u'User-Data')
fvRsCons11 = cobra.model.fv.RsCons(fvAEPg6, tnVzBrCPName=u'message-broker')
fvRsCons12 = cobra.model.fv.RsCons(fvAEPg6, tnVzBrCPName=u'logging')
fvRsPathAtt11 = cobra.model.fv.RsPathAtt(fvAEPg6, tDn=u'topology/pod-1/protpaths-101-102/pathep-[SnV_FI-1B]', encap=u'vlan-115')
fvRsPathAtt12 = cobra.model.fv.RsPathAtt(fvAEPg6, tDn=u'topology/pod-1/protpaths-101-102/pathep-[SnV_FI-1A]', encap=u'vlan-115')
fvRsDomAtt6 = cobra.model.fv.RsDomAtt(fvAEPg6, tDn=u'uni/phys-SnV_phys')
fvRsBd6 = cobra.model.fv.RsBd(fvAEPg6, tnFvBDName=u'antigravity')
fvRsProv6 = cobra.model.fv.RsProv(fvAEPg6, tnVzBrCPName=u'user-data')
fvAEPg7 = cobra.model.fv.AEPg(fvAp, name=u'Analytics')
fvRsCons13 = cobra.model.fv.RsCons(fvAEPg7, tnVzBrCPName=u'message-broker')
fvRsCons14 = cobra.model.fv.RsCons(fvAEPg7, tnVzBrCPName=u'logging')
fvRsPathAtt13 = cobra.model.fv.RsPathAtt(fvAEPg7, tDn=u'topology/pod-1/protpaths-101-102/pathep-[SnV_FI-1B]', encap=u'vlan-116')
fvRsPathAtt14 = cobra.model.fv.RsPathAtt(fvAEPg7, tDn=u'topology/pod-1/protpaths-101-102/pathep-[SnV_FI-1A]', encap=u'vlan-116')
fvRsDomAtt7 = cobra.model.fv.RsDomAtt(fvAEPg7, tDn=u'uni/phys-SnV_phys')
fvRsBd7 = cobra.model.fv.RsBd(fvAEPg7, tnFvBDName=u'antigravity')
fvRsProv7 = cobra.model.fv.RsProv(fvAEPg7, tnVzBrCPName=u'analytics')


# commit the generated code to APIC
print toXMLStr(topMo)
c = cobra.mit.request.ConfigRequest()
c.addMo(topMo)
md.commit(c)