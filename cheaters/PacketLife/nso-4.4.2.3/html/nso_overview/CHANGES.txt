NSO-4.4.2.3 [September 1, 2017]
===============================

Corrections:

  - ncs: Time to execute Maapi.setValues() used to grow quadratically with the
    size of the provided ConfXMLParam array. This has been fixed so the
    growth is now linear.

  - Java API: XML namespace declarations are now taken into account when
    producing ConfXMLParam array with NavuParser.

    (Issue tracker: #29637)

NSO-4.4.2.2 [August 22, 2017]
=============================

Enhancements:

  - CDB: Increased the buffer size used to load CDB. In many cases, this
    substantially decreases ConfD startup time.

    (Issue tracker: #29297)

  - ncs: NSO is now more robust at startup against potential errors in stored
    commit-queue items.

    (Issue tracker: #29388)

Corrections:

  - Java API: ConfIPv6(String) constructor accepted any string value even if it
    was not a valid IPv6 address. As one of the consequences ConfPath
    constructor could not handle a domain-name value for a list key of type
    inet:host. This has been fixed.

    (Issue tracker: #28031)

  - Java API: NavuParser did not correctly handle leaf-lists of type
    enumeration. NavuParser could also sometimes drop whitespace characters
    in element values. Both issues have now been fixed.

    (Issue tracker: #29440)

  - ncs: Previously an internal error would happen if an abort when sending the
    reverse diff failed in the commit-queue. This has now been fixed.

    (Issue tracker: #29388)

NSO-4.4.2.1 [July 20, 2017]
===========================

Enhancements:

  - ncs: Parameters for improved security have been added to ncs.conf.

    (Issue tracker: #19913, #19896, #29101)

Corrections:

  - JSON-RPC: The method 'get_leafref_values' didn't always return values
    when it should. This has been fixed.

    (Issue tracker: #28158)

  - JSON-RPC: get_leafref_values for action parameters is no longer limited
    to 100 values returned.

    (Issue tracker: #28852)

  - ncs: Previously the rollback data for a commit queue item could be
    incorrectly calculated in a device cluster when the configuration change
    did not originate from a service. This has now been fixed.


NSO-4.4.2 [June 14, 2017]
=========================

Removals:

  - Examples: The incomplete and thus non-working nginx_proxy example has
    been removed.

Non-backwards compatible enhancements:

  - Java API: JAPI has introduced ConfBitBig for YANG bits datatype with
    bits having position 64 or higher. In the same a ConfBits base class
    has been introduced with is base class for ConfBit32, ConfBit64 and
    ConfBitBig. The string representation for these types was wrong and has
    been changed to 'bin<0x...>' with the hexadecimal representation of the
    bitset in little endian order.

    (Issue tracker: #26649, #26983, #27343)

Enhancements:

  - ncs: Added the CONFIG_OPER_ONLY flag for Maapi.saveConfig(), to save
    only operational data and ancestors to operational data nodes. This
    functionality is also available via the -O option to 'ncs_load'.

    (Issue tracker: #27797)

  - ncs: 'sync-from'/'sync-to'/'check-sync'/'partial-sync-from' actions now
    have a 'wait-for-lock' parameter that can be used to specify a timeout
    that the action waits until the device lock is released and any commit
    queue items that contain the device are done. If the 'wait-for-lock'
    parameter is not specified, the action will fail immediately for the
    device if the lock is taken for the device or if the device is placed
    in the commit queue.

    A commit now use the /devices/global-settings/commit-retries to wait
    for any device lock to be released.

    (Issue tracker: #27591)

  - ncs: Added action 'wait-until-completed' to
    /devices/commit-queue/queue-item.

    When a commit queue item has been deleted this is reported to the
    commit requestor.

  - ncs: Previously if any of the devices in a commit queue item failed,
    other devices still had the changes in the item pushed to them. This
    left the network in an inconsistent state.

    A commit queue item is now atomic in the sense that if any device
    fail, all device changes (in the queue item) pushed to the network are
    now reverted. This makes the queue item in atomic mode equivalent to a
    normal two-phase commit.

  - ncs: Performance of partial-sync-from has been improved.

  - ncs: Previously if any of the devices in a commit queue item failed,
    other devices still had the changes in the item pushed to them. This
    left the network in an inconsistent state.

    There is now possible to rollback atomic commit queue items locally or
    through an entire LSA or device cluster. To guarantee service integrity
    if we have overlapping data 'block-others' must be set on the queue
    item.

    Automatic/manual error recovery can be configured with
    /devices/global-settings/commit-queue/error-recovery. Automatic means
    that NSO will automatically try to rollback the failed transaction.
    Manual means that NSO will not try to rollback the failed transaction.
    The NB client needs to execute the the rollback action
    on/devices/device/commit-queue/completed/queue-item or correct the
    error in some other way. Not setting a recovery option corresponds to
    the legacy behaviour previous to NSO 4.4.2.

    Completed queue items can be viewed under
    /devices/commit-queue/completed. This list is not cleaned
    automatically. This needs to be done on a regular basis with
    /devices/commit-queue/completed/purge if using the commit queue.

  - ncs: A commit parameter 'atomic' is added when committing with
    commit-queue to set the atomic behaviour of the resulting queue item.
    The default is that the queue-item is atomic but this can be changed
    with /device/global-settings/commit-queue/atomic or by invoking the
    'set-atomic-behaviour' action in /devices/commit-queue and
    /devices/commit-queue/queue-item.

  - CLI: A new NED capability has been added. This capability allows NEDs
    to use the CLI parser in strict mode, which uses the indentation of
    given commands to enter and exit sub modes.

  - Java API: Improved error message when null is passed as a value to
    putQuoted method in TemplateVariables class.

    (Issue tracker: #27853)

  - Python API: The Python API is no longer dependent on the environment
    variable LD_LIBRARY_PATH.

    (Issue tracker: #27509)

  - Toolchain: Added a --keep-ncs-setup option to the NSO installer, to
    include the ncs-setup command in a "system install".

    (Issue tracker: #27937)

  - Toolchain: NCT: it is now possible for NCT to supply a password to a
    [sudo] password prompt when issuing remote SSH commands by the use of
    the flag/option "sudo-pass". Note that for 'nct ssh-cmd', you need to
    provide the 'sudo' command the '-S' flag. 'nct start' and 'nct stop'
    does this by default'

  - Toolchain: NCT: The 'start' and 'stop' command is now always executed
    from '/' instead of '$HOME' of the user issuing the command.

  - Toolchain: NCT: A new flag 'ssh-key-name' has been introduced which
    allows the user to name the public ssh-key file for NCT to use if using
    NCT with passphrase free SSH keys

Non-backwards compatible corrections:

  - NETCONF: NCS would reply with an incorrect reply to NETCONF's
    <partial-lock> RPC.  This bug has been fixed.

    (Issue tracker: #26598)

  - NETCONF: The <rpc-reply> to an action invocation was not RFC 7950
    compliant.  This bug has been fixed.

    (Issue tracker: #27139)

  - NETCONF: NETCONF "file" url operations used to be done as the OS user
    running NCS.  This is now changed so that the operations are done as
    the NETCONF user.

    (Issue tracker: #26087)

  - RESTCONF: Using PUT on ordered-by leaf-lists together with query
    parameters "insert" and "point" now works as intended. Previously, it
    was not possible to arbitrary insert elements into a leaf-list. Using
    "point" required the target resource to be prefixed with the RESTCONF
    root resource and "data", e.g. /restconf/data; this behaviour is no
    longer supported.

    (Issue tracker: #28149)

Corrections:

  - ncs: A mandatory type 'empty' leaf inside a case will abort all
    transactions changing the active case. This has now been fixed.

    (Issue tracker: #26233)

  - ncs: NSO could not handle YANG 'bits' types with highest 'position'
    value above 63 (rejected by the compiler). This has been fixed, however
    the highest 'position' value is still limited to 8191, since the
    bitmask representation used for internal and API values of type 'bits'
    is not feasible for use with arbitrarily high 'position' values.

    (Issue tracker: #26649, #26983, #27343)

  - ncs: Previously a re-deploy on a copied service instance would return
    an internal error. This has now been fixed.

    (Issue tracker: #27567)

  - ncs: NP-containers with when-expressions were not re-evaluated properly
    resulting in missed validation. This has now been fixed.

    (Issue tracker: #27521)

  - ncs: 'load override' of a xml file could cause internal errors. This
    has now been fixed.

    (Issue tracker: #27733)

  - ncs: In the CLI, piping show to 'display xml' and 'display json' could
    cause a deadlock if the operator was in configuration mode. This has
    been fixed.

    (Issue tracker: #27827)

  - ncs: Previously NSO got an internal error in a sync-from action on a
    single device when the connection was closed.

    (Issue tracker: #28011)

  - ncs: A default leaf with a when-expression could cause compare-config
    to fail for trim mode devices. This has now been fixed.

  - ncs: When using add-capability action to add a capability without an
    associated module an internal error occured. This has been fixed.

  - ncs: Previously for Network Element Drivers supporting partial show
    there was a log entry in the developer log saying there was unknown
    capability returned from NED. This has now been fixed.

  - ncs: NSO previously didn't trim duplicate paths for the NED showPartial
    call. This is now fixed.

  - ncs: Changed the order of NETCONF operations for leaf-lists. Before it
    was 'set' followed by 'delete', now it is 'delete' followed by 'set'
    when those operations are present. This change of order does not matter
    for correct implemented leaf-lists. The new order is crucial where the
    leaf-list item has semantics.

    (Issue tracker: #28662)

  - AAA: If transactions modifying AAA/NACM data were continuously
    committed, it was possible for the process of reloading the internal
    AAA cache to fall behind, causing an unrestricted growth of NSO's
    memory usage. This has been fixed - now this AAA cache reload is done
    within the transaction commit.

    (Issue tracker: #26419)

  - CLI: CLI completion does not list the proper range where the leaf range
    restriction shall override the typedef range restriction. This has now
    been fixed.

    (Issue tracker: #21956)

  - CLI: Using "display-level 1" did unnecessary deep resolution of data
    nodes which could impact performance in a clustered environment. This
    has been fixed.

    (Issue tracker: #22577)

  - CLI: CLI completion shows both old and new deviated type restriction
    description. This has now been fixed.

    (Issue tracker: #26164)

  - CLI: The extension tailf:cli-allow-join-with-key ignored the
    abbreviated command/keys configuration in the CLI. This has been fixed.

    (Issue tracker: #27382)

  - CLI: The attribute 'name' in the multiLinePrompt modification in the
    clispecs ncs.cli and ncs.c.cli has been updated to use the new type
    'ssh-private-key-iv'.

    (Issue tracker: #27678)

  - CLI: Command 'logout user' with a non-existing user sometimes causes an
    internal error. This has now been fixed.

    (Issue tracker: #27714)

  - CLI: When admin user applies command 'logout user all' when there is no
    such user logged in, CLI incorrectly sends logout message to all the
    other alive user sessions that are not supposed to receive the message.
    This has now been fixed.

    (Issue tracker: #27735)

  - CLI: Default values are not shown in the pipe command "show ... |
    details | display xml" or "show ... | details | display json". This has
    now been fixed.

    (Issue tracker: #27719, #28275, #19769, #28521)

  - CLI: Using xpath expressions and omitting keys to implicitly reference
    all keys would crash the CLI. This has been fixed.

  - CLI: The xpath eval command lists nodes in reversed system order. This
    has now been fixed.

  - CLI: In some cases, configuration lines would be missing from the
    configuration diff sent to the device when committing the configuration
    using a commit queue (eg. by running the C-style CLI command 'commit
    commit-queue sync'). This has been fixed.

  - CLI: CLI-spec commands with many optional parameters, where those
    parameters had default values, were slow to process. This has been
    fixed.

    (Issue tracker: #28095)

  - CLI: Caching mechanism used in the CLI could result in missing config
    entries during data alteration. This has been fixed.

    (Issue tracker: #28080, #28583)

  - CLI: Performance has been improved for southbound diff calculations.

    (Issue tracker: #27903)

  - Cluster: Validation was not performed on NSO service nodes for device
    connection configuration. This has now been fixed.

    (Issue tracker: #27752, #28125)

  - Cluster: If configuring a cluster remote node with an unresolvable
    name, NSO would crash. This has been fixed to instead raise an alarm
    indicating the problem.

  - Java API: ConfEnumeration.getEnumByLabel() failed when used with a path
    pointing to a leaf-list element. This has been fixed.

    (Issue tracker: #27963)

  - Java API: Maapi.getCase() failed with an Exception when used on a
    choice that has a default case defined in the YANG model when
    NO_DEFAULTS flag was in use. This has been fixed.

    (Issue tracker: #28218)

  - JSON-RPC: The method 'get_leafref_values' didn't work when providing
    the 'keys' parameter. Also the documentation was wrong. This has been
    fixed.

    (Issue tracker: #27506)

  - NETCONF: If an action invocation according to RFC 7950 contained
    unknown XML elements, the NETCONF session would crash instead of
    generating an error message.  This bug has been fixed.

    (Issue tracker: #27139)

  - Python API: It was  impossible to use negative enum values. This has
    been fixed.

    (Issue tracker: #27627)

  - Python API: It wasn't possible to call set_label() and set_comment() on
    a maapi.Transaction object. This has been fixed.

  - REST API: REST PUT added elements to a leaf-list instead of replacing
    them. This has now been fixed.

    (Issue tracker: #26613)

  - RESTCONF: The IETF RESTCONF YANG model is now up to date with RFC 8040
    The RESTCONF Protocol.

    (Issue tracker: #27424)

  - RESTCONF: A missing empty leaf in the Json Restconf reply has been
    fixed.

    (Issue tracker: #27782, #27976)

  - RESTCONF: Json syntax error in Restconf error replies is now corrected.

    (Issue tracker: #27826)

  - RESTCONF: Accept-Patch header is now sent in reply to a Restconf
    OPTIONS method call.

    (Issue tracker: #27875)

  - RESTCONF: Newline character in json Restconf error messages is now
    escaped.

    (Issue tracker: #27986)

  - RESTCONF: When using the 'fields' query parameter on deep nodes inside
    a list correct JSON is now emitted. Objects inside a list are no longer
    prepended with the list name.

    (Issue tracker: #27979)

  - RESTCONF: OPTIONS is now returned in the Allow Restconf header.

    (Issue tracker: #27875)

  - RESTCONF: Supplying the "content" query parameter with bad input data
    yielded an HTTP 500 Internal Error. Now it correctly responds with an
    HTTP 400 Bad Request and error-tag invalid-value.

    (Issue tracker: #28219)

  - RESTCONF: Supplying the "with-defaults" query parameter with bad input
    data yielded an HTTP 500 Internal Error. Now it correctly responds with
    an HTTP 400 Bad Request and error-tag invalid-value.

    (Issue tracker: #28152)

  - RESTCONF: Json strings are now encoding according to RFC 7159.

    (Issue tracker: #28332, #28398)

  - Toolchain: If the existence of the target node for an 'augment'
    statement was dependent on evaluation of 'if-feature' statements, the
    'augment' statement was required to have the same feature dependencies,
    in order to avoid errors when the target node didn't exist due to
    'if-feature' evaluation. This has been fixed - now the 'augment' is
    silently dropped if the target node has been removed due to
    'if-feature' evaluation. The same logic is also applied to 'deviation'
    and 'tailf:annotate'.

    Note: if the 'augment' and the target node are in different modules,
    both modules must be compiled with the same set of features for this
    logic to function correctly. (This is not an issue for 'deviation' and
    'tailf:annotate', since separate deviation and annotation modules must
    be compiled together with the target module, and thus the feature set
    is always the same for both modules.)

    (Issue tracker: #25936, #27441)

  - Toolchain: The YANG compiler would fail with "internal error" if a bits
    type exceeding the limit of supported 'position' values was defined in
    a typedef. This has been fixed.

    (Issue tracker: #26983)

  - Toolchain: If a YANG module had a leafref to another node in the same
    module, which in turn had a type that was defined as a leafref in a
    different module, package load/reload could fail, claiming that the
    target of the first leafref didn't exist. This has been fixed.

    (Issue tracker: #27613)

  - Toolchain: If YANG module A augmented module B, and module A was
    compiled with --deviation giving a module that removed the augment
    target in B via 'deviate not-supported', the compiler would fail with
    "internal error". This has been fixed - now the "problematic" augment
    is dropped, i.e. not included in the generated A.fxs.

    (Issue tracker: #27865)

  - Toolchain: NCT: The 'concurrent' option did not default to 'true'. This
    has been fixed.

  - Toolchain: ncsc and yanger now allows identifiers in YANG 1.1 modules
    to start with the characters 'xml'.

    (Issue tracker: #28338)

  - Web UI: Leafrefs with the current() statement on the same page were not
    updated correctly. This has now been fixed.

    (Issue tracker: #27506)

  - Web UI: The "Invoke" action button got disabled if there was an error
    with the input parameters. This has now been fixed.

    (Issue tracker: #27854)

  - Web UI: Empty leafs inside a container in action inputs did not work.
    This has now been fixed.

    (Issue tracker: #27915)

  - Web UI: Empty- and Enum-leafs didn't listen on nacm rules. This has now
    been fixed.

    (Issue tracker: #28112)


NSO-4.4.1.3 [May 25, 2017]
==========================

Corrections:

  - ncs: NSO cluster nodes stopped working properly when certain combinations of
    HA commands were executed in conjunction with commit queue enabled.
    This has been fixed.

    (Issue tracker: #28416)

  - ncs: NSO now terminates when it is unable to recover certain subsystems.

    (Issue tracker: #28416)

  - ncs: In the LSA commit-queue the underlying commit-queue items could
    be intermixed. The commit-queue item was successfully executed
    but the reporting could be wrong.


NSO-4.4.1.2 [May 7, 2017]
=========================

Corrections:

  - ncs: For commit-queue in LSA cluster the node-name was mismatched with
    the lsa-device name in the commit-queue notifications.
    This resulted in the commit-queue item never being reported as finished
    on the service-node.


NSO-4.4.1.1 [May 5, 2017]
=========================

Corrections:

  - ncs: When a slave was connected to the master,
    the master leaked a few file descriptors.

    (Issue tracker: #27284)

  - ncs: When using partial-sync-from, if the device's data model contains
    a choice with a non-presence container directly under it and the selected
    case is different on the device and in NSO CDB,
    the configuration could in some cases be imported incorrectly.

  - ncs: Previously NSO got the transaction id in the initialize call
    to the NED even though the no-overwrite commit flag was set.
    This has now been fixed.


NSO-4.4.1 [April 26, 2017]
==========================

Removals:

  - Web UI: Deprecated the NSO status view

    (Issue tracker: #25907)

Non-backwards compatible enhancements:

  - ncs: Non-backwards compatible correction:

    Web Server: Cipher suites using RC4 are no longer supported for the
    SSL/TLS server, since this algorithm is not considered secure.

Enhancements:

  - ncs: NSO is now integrated with Cisco Smart Licensing.

  - ncs: The Nano Services experimental feature have been introduced as a
    new way of executing/controlling Reactive FASTMAP services.

    See the Nano Services chapter in the Development Guide for more
    information on this.

  - ncs: The speed of the sync-from operation for CLI NEDs has been
    improved. Improvements are mainly for large configurations and has been
    measured to range from reducing the execution time by half to a fourth
    but the improvement varies greatly between different NEDs and
    configurations.

  - ncs: It is now possible to write directly into target transaction in
    CLI NED's show() callback in addition to returning the commands via
    worker.showCliResponse() call. The transaction ID can be accessed with
    worker.getToTransactionId().

  - ncs: When committing through the commit-queue on the top-node in a LSA
    cluster, this will now propagate to commit-queue commits on the
    lsa-nodes as well. This implies that top-node commit-queue queue-item
    will not finish before all related lsa-node commit-queue items has also
    finished.

  - ncs: A new device is now copied to the snapshot database when
    /ncs-config/cdb/snapshot/pre-populate = true.

  - ncs: Implemented 'partial-sync-from' action which allows to synchronize
    parts of the device's configuration by pulling from the network.

    (Issue tracker: #27878)

  - CLI: The yang extension tailf:default-ref has been ported to NSO. It is
    currently limited to relative paths and absolute paths will be ignored.

  - CLI: The southbound interfaces of the CLI are now started already in
    phase1. The northbound interfaces start in phase2 as before.

    (Issue tracker: #26023)

  - CLI: Increased performance during user interaction with the CLI.

    (Issue tracker: #27069)

  - Python API: Removed the undocumented limitation of only supporting
    implementation of validation callbacks in one Daemon per Python VM

    (Issue tracker: #26451)

  - Smart Licensing: An internal notification kicker that keeps track of
    licensing entitlements sent from sub components, such as ESC, was
    added. NSO aggregates the licensing entitlements and reports to the
    Cisco smart licensing cloud.

Corrections:

  - ncs: Previously, set-hooks weren't invoked for uncommitted nodes if
    they were deleted as a result of parent node deletion. Deleting the
    node with the set-hook explicitly invoked the set-hook. The behaviour
    is now consistent; regardless of why the node is deleted, set-hooks are
    invoked.

    (Issue tracker: #25655, #26971)

  - ncs: Trying to create a mandatory empty leaf with
    tailf:cli-hide-in-submode would result in an error. This has been
    fixed.

    (Issue tracker: #25759, #681387776)

  - ncs: If a data model had a symlink to a node that was augmented by
    another model, the augmented nodes would in some cases not appear under
    the symlink.  This bug has been fixed.

    (Issue tracker: #26689)

  - ncs: An un-escaped caret (`^`) was incorrectly treated as negation in a
    regular expression "character group" also when it was not the first
    character in the group. This has been fixed.

    (Issue tracker: #26949)

  - ncs: Previously NSO would get an internal error when trying to display
    the /devices/device-module list without read access to do so.

    (Issue tracker: #27059)

  - ncs: If an rpc or action was implemented via tailf:exec, and the input
    had a leaf augmented from another module into a 'choice', followed by
    non-augmented nodes, the invocation of the executable would fail. This
    has been fixed.

    (Issue tracker: #27138)

  - ncs: When redeploying a package the Python code (if any) contained in
    that package was not updated. This has been fixed.

    (Issue tracker: #27144)

  - ncs: When applying a 'device template', i.e the apply-template action
    on a device, from a service, the backpointers and ref-counters was not
    updated properly. This has been fixed.

  - ncs: Previously paths passed to the showPartial call in the CLI NED
    ignored leafs with hide-in-submode annotation. This has now been fixed.

  - ncs: If a YANG union (other than inet:ip-address) had both
    inet:ipv4-address and inet:ipv6-address member types, in that order,
    IPv6 addresses would be displayed with uppercase A-F instead of a-f.
    This has been fixed.

    (Issue tracker: #27718)

  - ncs: Previously commit queue blocked alarm was not cleared when a
    device reconnected or failed to reconnect. This has now been fixed.

    (Issue tracker: #27724)

  - ncs: Previously NSO could not read leaf-lists correctly in NETCONF
    notifications. This has now been fixed.

  - ncs: The YANG extension tailf:ned-ignore-compare-config excludes this
    model elements from comparison in e.g. /devices/device compare-config.
    This will also be excluded in device data comparison in a commit
    no-overwrite.

  - ncs: out-of-sync-behaviour = accept did not always suppress
    get-trans-id on the NED. This has been fixed.

  - C-API: String <-> value conversion for the type inet:ipv6-prefix could
    fail incorrectly in the C and Python APIs if the prefix length was not
    a multiple of 4. This has been fixed.

    (Issue tracker: #27184)

  - CLI: There is inconsistent behavior when it comes to the tailf:info
    string with backslash. Display of '{{{\\}}}n' is rendered as '\n' or
    'n' in different possible completions in the CLI output. This has now
    been fixed by rendering them all to '\n'. So in order to display one
    backslash character in the tailf:info output, it needs to define either
    '{{{\\}}}' (single quoted string) or "{{{\\\\}}}" (double quoted
    string) for the tailf:info in the yang file.

    (Issue tracker: #12142)

  - CLI: Creating a list instance containing a unique statement referring
    to one of the keys, would in some cases not be reflected when
    displaying the C-style configuration diff (i.e. 'commit dry-run
    outformat native'). This has been fixed.

    (Issue tracker: #24811)

  - CLI: Command "show running-config | extended" returns internal error.
    This has now been fixed.

    (Issue tracker: #26688)

  - CLI: When NSO sync-from a NED device which has unmodeled config that
    CLI fails to parse, the resulting syntax error entries are shown as
    info in the trace log.

  - CLI: Enforce "repeat" command to always suppress pagination.

    (Issue tracker: #27047)

  - CLI: Validation of leaf_list data nodes in the CLI has been added when
    processing parameters to actions.

    (Issue tracker: #27182)

  - CLI: Backslash character is always ignored in tailf:info output. This
    has now been fixed. So in order to display one backslash character in
    the tailf:info output, it needs to define either '{{{\\}}}' (single
    quoted string) or "{{{\\\\}}}" (double quoted string) for the
    tailf:info in the yang file.

    (Issue tracker: #27301)

  - CLI: The combination of using the extensions
    tailf:cli-sequence-commands and tailf:cli-incomplete-no would break the
    functionality of tailf:cli-incomplete-no extension. This has now been
    fixed.

    (Issue tracker: #27311)

  - CLI: TAB completion on enum with tailf:info terminates CLI connection
    abnormally. This has now been fixed.

    (Issue tracker: #27725)

  - Documentation: Support of following Browsers are deprecated:
    Safari older than 10.0
    Internet Explorer older than 11
    Firefox older than 45
    Chrome 50 and older

  - JSON-RPC: The method 'get_schema' couldn't handle a node with multiple
    when statements (through tailf:annotate). This has been fixed.

    (Issue tracker: #27518)

  - NETCONF: A leaf of type empty augmented from another module into the
    'input' of an rpc caused a northbound NETCONF session to terminate, and
    the same for an action was delivered to the callback as an empty
    container (i.e. with begin/end tags). These bugs have been fixed.

    (Issue tracker: #27057, #27068)

  - NETCONF: Invocation of an rpc or action where 'input' had a 'choice'
    child, and the first 'case' of that 'choice' was another 'choice',
    caused a northbound NETCONF session to terminate. This has been fixed.

    (Issue tracker: #27058)

  - Python API: The implementation of events.NOTIF_COMMIT_DIFF was broken.
    It was impossible use the contained tctx to attach to the current
    transaction. This has been fixed.

    (Issue tracker: #26992)

  - Python API: When an action- or service-callback timed out the
    connection to NSO was lost and the only way to restore the connection
    was to reload the affected package. This has been fixed, so now the
    Python-APIs data provider implementation automatically reconnects to
    NSO.

    (Issue tracker: #27012)

  - Python API: When enabling IPC access check in ncs.conf packages written
    in Python didn't work. This has been fixed.

    (Issue tracker: #27279)

  - Python API: When a python service is changed or re-deployed the back
    pointer and reference counter was lost. This has now been corrected.

    To correct this for already instantiated python services do:

    request /path-to-python-service * re-deploy

    If the '*' is not accepted as input the service YANG file needs to be
    updated by importing the tailf-common module:

    import tailf-common {

    prefix tailf; }

    and add the tailf:cli-allow-range annotation to the key leaf node of
    the service.

  - Python API: Some of Maagic's components failed to check for an existing
    MAAPI backend when used as input and output parameters for an Action.
    In some cases this lead to a raised Exception. This has been fixed.

  - Python API: Running NSO with a Python package using Python 3 failed
    with "AttributeError: module '_ncs' has no attribute
    "internal_connect". This has been fixed.

  - REST API: REST Query API fetch-query-result calls don't timeout after
    five seconds anymore, instead it adheres to the default timeout of 600
    seconds (10 minutes). Added timeout parameter to start-query and
    reset-query enabling a custom timeout.

    (Issue tracker: #26893)

  - REST API: An empty rollback file caused the REST(CONF) API to stop
    working. This has been fixed.

    (Issue tracker: #27520)

  - RESTCONF: If an action error response is customized by using
    confd_action_seterr_extended(), the error is now propagated by
    RESTCONF. Previously RESTCONF always responded with a HTTP 400 and
    error-tag "operation-failed".

    (Issue tracker: #27860, #27917)

  - RESTCONF: In some cases RESTCONF erroneously used the mediatypes
    text/xml and text/json. They have been replaced with the correct
    application/yang-data+xml and application/yang-data+json respectively.

  - Smart Licensing: When a 'packages reload' was issued, smart licensing
    failed to report NED packages correctly. This has been fixed.

    (Issue tracker: #24559)

  - SNMP Agent: When compiling yang modules augmenting other yang modules,
    the effective snmp-mib-module-name of any augment node was
    unconditionally inherited from the augment target node. This lead to
    MIB modules with no objects corresponding to the augment nodes, if the
    resulting fxs file was used with ncsc --emit-mib. This has been fixed,
    so that snmp-mib-module-name is only inherited if the current module
    doesn't have a snmp-mib-module-name statement.

    (Issue tracker: #25677)

  - Toolchain: When there was a chain of identities defined in a YANG
    module like a <- b <- c, the ncsc would sometimes not accept all
    derived identities in the "default" statement.  This bug has been
    fixed.

  - Web UI: List of supported browser now only exists in the installation
    guide.

  - Web UI: Lists on root level now works correctly.

    (Issue tracker: #26063, #26546)

  - Web UI: Leafref widgets now filteres items by regex.

    (Issue tracker: #26710)

  - Web UI: The leaf-list widget now handles special characters correctly.

    (Issue tracker: #27094)


NSO-4.4.0.2 [April 26, 2017]
============================

Corrections:

  - cluster: When-expressions in remote devices have been incorrectly
    evaluated on service node in cluster. This has been fixed.

    (Issue tracker: #27947)

  - ncs: When using 'commit no-overwrite' to commit a transaction towards a
    NETCONF device (or an lsa node), and that transaction contained changes
    to multiple list instances - the filter used to fetch the modified list
    instances would not be correctly built - resulting in an RPC error when
    trying to commit. This has been fixed.

    (Issue tracker: #27881)

  - Smart licensing: The Smart licensing high availability adaption could
    cause node crashes due to out of memory when switching a node from slave
    to master. This has been fixed.

    (Issue tracker: #27799)


NSO-4.4.0.1 [April 25, 2017]
============================

Corrections:

  - CLI: Un-deploying a service would in some cases cause the CLI to hang until
    host ran out of memory. This has been fixed.

    (Issue tracker: #27711)

  - ncs: Previously un-deploy dry-run did not actually show what the un-deploy
    action would do but rather like 'get-modifications reverse'. This has now
    been fixed.

    (Issue tracker: #27745)


NSO-4.4 [March 20, 2017]
========================

Removals:

  - ncs: Previously deprecated leaf device-modifications in service-data
    grouping has been removed. Action get-modifications should be used
    instead of it.

Non-backwards compatible enhancements:

  - ncs: In many cases it takes a long time to generate the changeset
    towards the device (especially for CLI devices) due to large
    configurations and/or quadratic dependency calculations. This means
    that in systems where there is a high demand on throughput we would
    like to calculate the changeset outside of the transaction lock. This
    gives us the benefit that the lock could be released almost as soon as
    the service code has been executed. It also gives us the benefit of
    being able to support 'from' (pre-commit running) and 'to' (running)
    transactions leveraged by the Network Element Drivers, no-overwrite
    feature and reverse diff calculation if the device fails in the queue.

    The key enabler to support these cases mentioned above is to allow
    different views of the database to live beyond the commit. This is
    implemented by keeping a snapshot database of the configuration tree
    for devices and store changesets towards this snapshot database on a
    per device basis. The snapshot database is updated when a device in the
    queue has been processed (typically when a queue item has been
    processed). This snapshot database is stored on disk for persistence
    (the S.cdb file in the cdb directory).

    In this scheme the snapshot database always represents the 'from'
    (pre-commit running) transaction. The changeset towards the device is
    the 'to' (running) transaction. When the device is processed the
    changeset is applied to its backend, the snapshot database. If the
    queue item or device has been removed from the queue the changeset
    still needs to be applied in the order it would have been executed so
    that the snapshot database still reflects how running looked at a
    certain point in time. Even when a commit with no changes bound for the
    commit queue is performed the snapshot database needs to be updated to
    be in sync with CDB.

    The snapshot database could be populated in two ways. This is
    controlled by the /ncs-config/cdb/snapshot/pre-populate setting in the
    ncs.conf file. This parameter controls if the snapshot datastore should
    be pre-populated during upgrade. Switching this on or off implies
    different trade-offs.

    If set to 'false', NCS is optimized for using normal transaction
    commits. The snapshot database is populated in a lazy manner (when a
    device is committed through the commit queue for the first time). The
    drawback is that this commit will suffer performance wise, which is
    especially true for devices with large configurations. Subsequent
    commits on the same devices will not have the same penalty.

    If 'true', NCS is optimized for systems using the commit queue
    extensively. This will lead to better performance when committing using
    the commit queue with no additional penalty for the first time commits.
    The drawbacks are that upgrade times will increase and an almost
    doubling of NCS memory consumption.

  - ncs: The no-overwrite now takes precedence over various kinds of
    check-sync flags (out-of-sync-commit-behaviour=accept,
    use-transaction-id=true, and commit no-out-of-sync-check). The
    no-overwrite could now also be enabled by default on a per device level
    with /devices/device/no-overwrite/enabled-by-default

    (Issue tracker: #24328)

  - ncs: NCS will now give an error on unknown attribute is encountered in
    a service or config template. This is done to prevent typos and logical
    mistakes e.g. when NETCONF 'operation' attribute is used instead of
    'tags' attribute.

    (Issue tracker: #24428)

  - ncs: NSO is now able to issue RPC requests to a group of devices.

    Added /devices/device-group/rpc

    (Issue tracker: #24725)

  - ncs: For devices the with want-reverse=true the reverse diff is now
    sent when the device fails in the commit queue.

  - ncs: The ncs-setup command is no longer included in a "system install",
    since it is not usable in such an installation.

    (Issue tracker: #26357)

  - ncs: The --etc-setup option has been removed from the ncs-setup command
    - this functionality is subsumed by the --system-install option to the
    installer.

  - JSON-RPC: The default for /ncs-config/webui/audit has been changed to
    "false".

    (Issue tracker: #21655)

  - Python API: Python 3 support has been improved. NCS now requires at
    least Python 3.4. In earlier releases only Python 3.3 was supported
    (even though the docs claimed otherwise).

    (Issue tracker: #24887)

  - Python API: Assigning binary leafs using maagic now requires the value
    to be in the same format as is  returned when reading the value.

  - Toolchain: The version of pyang that is included in the release no
    longer checks the tailf-specific statements.  Note that this does not
    affect the ncsc compiler.

  - Toolchain: By default, the YANG source module and submodules files are
    now included in the .fxs file by the compiler, when the module is
    exported to NETCONF or RESTCONF.  This means that it is no longer
    necessary to copy the YANG files to the loadPath in order to use
    <get-schema>.  If a YANG file is found both in the loadPath and in the
    .fxs file, the file in the loadPath is used by the system.

    The command line flag --no-yang-source can be used to not store the
    YANG source in the .fxs file. Also, ncsc --strip-yang-source can be
    used to remove the YANG source from an .fxs file.

Enhancements:

  - ncs: NCS now ensures that validation of service input parameters is
    done before the create code is called.

  - ncs: It is now possible to manually manipulate the list of device's
    capabilities during pre-provisioning (before the device is connected
    for the first time). This can be done with the help of new actions
    introduced with this feature:

      - /devices/device/copy-capabilities
      - /devices/device/find-capabilities
      - /devices/device/add-capability
      - /devices/device/capability/remove

    In addition to this it is now possible to configure capability
    profiles under /devices/profiles/capabilities-profile. For detailed
    description of these actions refer to tailf-ncs-devices.yang.

    (Issue tracker: #17466, #19525)

  - ncs: Configurable range of allowed group size, the SSH server responds
    to the client during a "diffie-hellman-group-exchange". The range will
    be the intersection of what the client requests, if there is none the
    key exchange will be aborted.

    (Issue tracker: #18489, #22149)

  - ncs: A new YANG extension, tailf:ned-default-handling ''mode'', has
    been added. If used it will override the NED's native default handling
    mode for that leaf.

    (Issue tracker: #25189)

  - ncs: The kickers are enhanced with a notification-kicker that makes it
    possible to trigger on received netconf notifications. For more on this
    see the development guide.

  - ncs: New Yang annotation: tailf:ned-ignore-compare-config that can be
    used to remove a changed leaf from compare-config.

    For the tailf:aes-cfb-128-encrypted-string and the
    tailf:des3-cbc-encrypted-string type, proper decryption/encryption will
    be made of the data exchanged with a Netconf device.

    (Issue tracker: #25826)

  - ncs: NSO can now make a show command to copy parts of the device
    configuration when doing no-overwrite for CLI and generic devices if
    the NED supports it.

  - ncs: It is now possible to execute commit dry-run outformat native
    without establishing connection to the actual device. NEDs need to
    implement this feature. It is implemented in NSO for NETCONF and SNMP
    devices, while CLI and generic NEDs will by default fall back to the
    previous behaviour which is to establish connection to the device.

    In order to be able to execute commit dry-run outformat native offline
    the implementation for NETCONF and SNMP devices requires the
    capabilities of the device to be known, i.e. /devices/device/capability
    list to contain relevant entries. This list is populated when
    connecting to the device for the first time, or it can be manually
    populated with add-capability or copy-capabilities actions. Other NEDs
    (CLI or generic) implementing this feature might not have this
    requirement, or have other requirements.

    (Issue tracker: #25280)

  - ncs: It is now possible to set the rollback "Label" and/or "Comment"
    via MAAPI. See Maapi.setLabel(), Maapi.setComment(),
    Maapi.candidateCommitInfo(), and Maapi.candidateConfirmedCommitInfo().

    (Issue tracker: #25510, #26378)

  - ncs: The information returned by Maapi.listRollback() now includes the
    "Label" and/or "Comment" for each rollback.

    (Issue tracker: #26378)

  - ncs: Previously out-of-band changes for a non-transactional device with
    a CLI or generic NED could be overwritten when a commit towards the
    device failed and the reverse diff-set was sent to the device. This has
    now been fixed.

  - ncs: It is now possible to specify a "guard" for an insert operation on
    ordered-by user list and leaf-list in service or API templates. A guard
    identifies a range of elements in ordered-by user list or leaf-list so
    that if all of the target elements to be inserted already exist in the
    same order within this range, then their current position is preserved.
    This is useful to avoid reordering a list or a leaf-list every time a
    service is re-deployed, while being able to impose constraints on
    elements' position in the list or leaf-list.

  - ncs: For services that also have a plan, there is a new container
    error-info in the plan container (see tailf-ncs-plan.yang). If a
    transaction (updating the service) fails then the plan data "failed"
    leaf is set and a reference to the service-log entry can be found in
    the error-info container.

  - ncs: The speed of the sync-from operation for CLI NEDs has been
    improved. Improvements are mainly for large configurations and has been
    measured to range from reducing the execution time by half to a fourth
    but the improvement varies greatly between different NEDs and
    configurations.

  - ncs: Memory usage and processing time when a large commit is done for a
    model with many 'when' expressions has been optimized.

    (Issue tracker: #27185, #27210)

  - CDB: Added CDB_GET_MODS_SUPPRESS_DEFAULTS flag for
    cdb_get_modifications(), see confd_lib_cdb(3) for details.

    (Issue tracker: #26542)

  - CLI: Do not print 'tailf:cli-show-obu-comments' comments if a list is
    currently being created.

    (Issue tracker: #24734)

  - CLI: Optimization to tailf:cli-diff-dependency. Making deletions faster
    by not evaluating unnecessary dependencies.

    (Issue tracker: #25131)

  - CLI: When the difference between newly loaded cfg file and the one
    existing on the device contains only comment, running 'show
    configuration' caused an internal error. The comment shall be treated
    as configuration difference in this case. This has now been fixed.

  - CLI: The southbound interfaces of the CLI are now started already in
    phase1. The northbound interfaces start in phase2 as before.

    (Issue tracker: #26023)

  - Cluster: Upgrade performance has been improved on service node in
    cluster.

    (Issue tracker: #25860)

  - Documentation: Clarified documentation on 'tailf:meta-data'.

    (Issue tracker: #26511)

  - JSON-RPC: The method 'set_value' didn't support native JSON types for
    the 'value' parameter. This is now supported.

    (Issue tracker: #26405)

  - NETCONF: It is now possible to invoke RPCs/actions on remote NETCONF
    devices with output parameters containing an anyxml node.

  - Python API: It was not possible to e.g. call an action from inside
    another action or service if they were both registered to the same
    ncs.dp.Daemon. This has been fixed.

  - Python API: It was possible to assign random attributes to a Maagic
    Node instance. This made it hard to spot code mistakes where attribute
    names were misspelled. Assigning an unknown attribute now results in a
    raised Exception.

  - RESTCONF: Updated RESTCONF documentation to reflect current
    implementation, based on RFC 8040. Also add sections briefly explaining
    capabilities, schema resource, and tailf extensions.

  - Smart Licensing: The NSO smart licensing integration now supports
    configuration of proxy servers.

  - Toolchain: ncsc now accepts deviation of unknown extension statements,
    and checks the grammar for validity of deviations of known extensions.

    (Issue tracker: #26728)

  - Web Server: The SSL server has been updated to use a stronger default
    prime number for Diffie-Hellman key exchange.

    (Issue tracker: #26779)

Non-backwards compatible corrections:

  - ncs: Previously you could get an internal error when configuring a
    timeout value with a very high number and then performing an action
    where this value is used, e.g. configuring the read-timeout value and
    then connecting to the device. This has now been fixed.

  - ncs: When a device supports transaction id we have the possibility to
    detect out of band changes. This is used in normal commits. Before this
    correction out of band changes were ignored when the commit queue was
    used. To get the old behavior set the out-of-sync-commit-behavior in
    the configuration:

    set devices device XXXX out-of-sync-commit-behaviour accept

  - Java API: NavuList.elem() method used to throw a runtime
    StringIndexOutOfBoundsException when the argument was empty string.
    This has been changed, so now it throws a NavuException instead.

    (Issue tracker: #26621)

  - Java API: Japi - CdbSubscription.getModification() methods only
    accepted one CdbGetModificationFlag as an argument instead of an
    EnumSet<CdbGetModificationFlag> to be able to set several flags in
    combination. This has been fixed and the old methods have been
    deprecated.

    Also the result of getModification() did not correctly represent
    deleted list entries which should be represented as a
    ConfXMLParamStartDel instance followed by a ConfXMLParamStop in the end
    of the listelement. This constitutes the backward incompatible change.

    (Issue tracker: #26542)

  - Python API: Creating or accessing a maagic list element with a single
    string key when the key value contained a space character wasn't
    possible without escaping the space. This has been fixed.

    (Issue tracker: #25282)

  - Toolchain: The treatment of backslash in double quoted strings in YANG
    modules has changed.  In YANG 1.1, it is illegal to have any character
    except 'n' 't' '"' or '\' immediately after the backslash.  In YANG 1
    this is a warning (see
    https://www.rfc-editor.org/errata_search.php?eid=4911)

    The ncsc compiler now detects this and gives a warning if such a
    string is found in a YANG version 1 module, and an error for a YANG
    version 1.1 module.

  - Web Server: Cipher suites using RC4 are no longer supported for the
    SSL/TLS server, since this algorithm is not considered secure.

Corrections:

  - ncs: A 'when'-expression could cause unsuccessful deletion of data
    during rollbacks. This has now been fixed.

  - ncs: A corrupt candidate (read-write mode) DB caused an internal error
    during startup. This has now been fixed.

    (Issue tracker: #24878)

  - ncs: Re-deploying a service using a NED having the default handling
    mode 'report-all' would in some cases cause the device to be out of
    sync. This has been fixed.

    (Issue tracker: #25189)

  - ncs: When using commit queues from JSON RPC and specifying sync the RPC
    would not wait until the transaction was done. This has been fixed.
    Also, if there were any errors when communicating with some devices
    they would not be reported, nor would they be displayed in the CLI when
    executing 'commit commit-queue sync'. This has been fixed. Also, the
    default behavior for commit queues was to perform an unlimited number
    of retries when a transient error occurred when communicating with a
    device. A new setting called

     devices global commit-queue connection-failure-reconnect-retries

    has been introduced to control this behavior. The default is
    'unlimited'. Also, any non-transient errors that occured when
    communicating with a device that initially could not be reached due to
    transient errors, would be silently ignored and the commit queue system
    would continue to try to reach the device. This has been fixed.

  - ncs: The rename command could fail if a set-hook was invoked creating
    node(s) that are currently being created by the rename command itself.
    This has now been fixed.

    (Issue tracker: #25519, #26634)

  - ncs: Previously NCS failed to re-deploy or un-deploy a service that had
    made changes to a leaf-list which through a schema upgrade was changed
    to a leaf of the same type. This has now been fixed.

    (Issue tracker: #26215, #26427)

  - ncs: When connecting a new HA slave and at the same time doing a
    controlled shutdown (e.g. ncs --stop) of the new to-be-slave, we could
    end up sending faulty synchronization data to the master node which
    could lead to a dead-lock in the master node. This has been fixed.

    (Issue tracker: #25908)

  - ncs: A 'choice' statement with a mandatory 'case' located beneath a
    'when' statement could cause an internal error. This has now been
    fixed.

    (Issue tracker: #26397)

  - ncs: Issuing certain commit queue actions would lead to an internal
    error in none or slave HA mode. This has now been fixed.

  - ncs: If NCS was started in a directory with frequently changing
    contents such as /tmp, it could eventually crash due to filling up its
    "atom table". This has been fixed.

    (Issue tracker: #26516)

  - ncs: If a data model had a symlink to a node that was augmented by
    another model, the augmented nodes would in some cases not appear under
    the symlink.  This bug has been fixed.

    (Issue tracker: #26689)

  - ncs: Removed spurious debug output from 'ncs_cmd'.

    (Issue tracker: #26724)

  - ncs: Previously error messaged when doing move operations on a Juniper
    devices was ignored. This has now been fixed.

    (Issue tracker: #26823)

  - ncs: NSO could sometimes fail during upgrade if there was inactive
    configuration to be upgraded. This has been fixed.

    (Issue tracker: #26794)

  - ncs: Calling the action "packages reload" via MAAPI (e.g. using the
    Python API) without providing input parameters resulted in an internal
    error. This has been fixed.

    (Issue tracker: #26697)

  - ncs: Fixed bug where setting
    /alarms/control/max-status-change-entries-per-alarm to 0 would generate
    a harmless error message.

  - ncs: When using dry-run for the device actions sync-to and sync-from
    the action ignored the dry-run input parameter if the outformat was not
    specified. This has now been corrected. The default cli format is used
    in this case.

  - ncs: An error was introduced in NSO 4.3 where RPC errors from Juniper
    devices was ignored. This has now been fixed.

    (Issue tracker: #27192, #27065, #26966)

  - ncs: Previously when doing an XPath query through a JSONRPC request and
    specifying a context node with an empty key an internal error would
    occur. This has now been fixed.

    (Issue tracker: #27063)

  - ncs: During a deep-check-sync operation NSO could complain about failed
    'when' expressions in an internal transaction used to evaluate the
    result. This has been fixed so the 'when' expression are not checked
    due to temporary nature of such transaction.

    (Issue tracker: #26973)

  - C-API: If tailf:meta-data was used on the first toplevel node in a YANG
    module, the loaded schema would have a pointer to invalid data for the
    meta-data. This has been fixed.

    (Issue tracker: #26839)

  - C-API: The confd_ha_connect() function could in some cases write a NUL
    character outside an array on the stack. This has been fixed.

    (Issue tracker: #26979)

  - CDB: Fix race condition for transactions involving *both* config true
    and false data.  Transactions involving only config true data were not
    affected.  The race condition could lead to CDB ending up in a hung
    state and a transaction commit never returning.  A lock for the
    operational part of CDB was partially and prematurely removed and other
    transactions waiting for the lock were never processed.

    Another side effect of the race condition was that some combinations
    of transactions, e.g., starting a new transaction in a subscriber might
    actually succeed (due to a lock being released prematurely), where it
    should not. This might affect existing code.

    To decrease the risk of deadlock for transactions involving
    operational (config false) data, the lock taking for the operational
    part of CDB has been moved to the commit, resulting in the lock being
    held for a shorter duration. Locks for the operational part of CDB have
    also been made (somewhat) more fine grained, so that a transaction
    writing only in one namespace will not lock the whole operational part
    CDB. Previously this might have been the case, depending on where in
    the tree data was written.

    The typical use-case where this fix can have an effect is with CDB
    subscribers. It is known that writing config true data to CDB (using
    Maapi) will deadlock if executed before the CDB_SUBSCRIBE_DONE call.
    There is now a risk for the same deadlock for config false data (using
    CDB or Maapi). To be safe all data written by a CDB subscriber should
    be done after the CDB_SUBSCRIBE_DONE call and in an separate thread.
    The recommendation is to use Kickers instead of CDB subscribers. Kicker
    are safe in respect of this deadlock scenario.

  - CDB: Fix bug when setting an operational choice using MAAPI. Changing
    the case value did not work as intended when using an ordinary
    transaction (allowing writes to both config true and false data).
    Using an operational (config false) only transaction was not affected.

  - CLI: When doing package upgrading, and then "commit dry-run outformat
    cli", an error was encountered in certain cases. This has been fixed.

    (Issue tracker: #17605, #20971, #24538, #25131, #26103, #25639)

  - CLI: Auto completion in the CLI could miss displaying a <cr> or other
    leafs when combining empty leafs with sequence commands. This has been
    fixed.

  - CLI: Add missing <cr> for '?' when displaying completion for leaf-list
    type.

    (Issue tracker: #22307)

  - CLI: Fixed internal error in the CLI, that appeared when
    'tailf:cli-flatten-container' was used and then
    'tailf:cli-drop-node-name' was used in a child leaf.

  - CLI: Description for the 'display' pipe 'service-meta-data' was
    incorrect. This has been fixed.

  - CLI: Combining lists with tailf:cli-sequence-commands and
    tailf:cli-compact-syntax the CLI could miss printing out some data
    nodes. This has been fixed.

    (Issue tracker: #25367)

  - CLI: The extension 'tailf:show-obu-comments' would sometimes not make
    NEDs change the order of lists. This has been fixed.

    (Issue tracker: #24289)

  - CLI: Japanese characters in error-message got corrupted. This has now
    been fixed.

    (Issue tracker: #26764)

  - CLI: Disallow empty string as a command when using abbreviated commands
    in the CLI.

    (Issue tracker: #26755)

  - CLI: The performance of the CLI caching that was introduced has
    degraded the overall performance of the CLI. This has been fixed.

  - CLI: When giving a *leaf* in a list the same name as the parent list,
    the CLI pipe target 'display xml' would not work properly. This has
    been fixed.

    (Issue tracker: #27056)

  - Cluster: NCS cluster service nodes left open NETCONF sessions when
    using dry-run. This has been fixed.

    (Issue tracker: #25400)

  - Cluster: If NSO was set up to run in cluster mode (i.e. when
    /cluster/remote-node list is not empty) and packages reload was
    initiated while NSO is running, then it would fail with "subagent
    error". This has been fixed.

  - Documentation: Corrected typo in kicker documentation.

    (Issue tracker: #26887)

  - Java API: Japi - Navu navigation over a choice with an empty case
    yielded a NullPointerException. This has been fixed.

    (Issue tracker: #26422)

  - Java API: Setting a leaf or leaf-list to a value containing unicode
    characters could fail with internal error. This has been fixed.

    (Issue tracker: #27066)

  - JSON-RPC: When a list had a key of type leafref the method
    'get_leafref_values' didn't always return the correct values. This has
    been fixed.

    (Issue tracker: #24557)

  - JSON-RPC: When calling "get_schema" with the option
    "evaluate_when_entries" set to true, the resulting
    "evaluated_when_entry" attribute was sometimes set to true when it
    shouldn't. This has been fixed.

    (Issue tracker: #25572)

  - JSON-RPC: When a list had a key of type leafref the method
    'get_leafref_values' didn't always return the correct values. This has
    been fixed.

    (Issue tracker: #26146, #26611)

  - JSON-RPC: Re-added possibility to receive "new_user" and "del_user"
    messages on the Comet channel when doing "subscribe_messages".

    (Issue tracker: #26668)

  - JSON-RPC: When calling an action through the 'run_action' method and
    the action was broken in such a way that it returned something other
    than was specified in the yang file, the session would be terminated
    and all subsequent calls on that session would fail (in the WebUI you
    would be logged out). This has been fixed.

  - NETCONF: If a NETCONF device only advertised YANG 1.1 modules to NCS,
    NCS would fail to connect to the device with the error:

    Device <dev> does not have a Network Element Driver registered

    This bug has been fixed.

  - NETCONF: A leaf of type empty augmented from another module into the
    'input' of an rpc caused a nortbound NETCONF session to terminate, and
    the same for an action was delivered to the callback as an empty
    container (i.e. with begin/end tags). These bugs have been fixed.

    (Issue tracker: #27057, #27068)

  - Python API: Iterating over a maagic container node didn't work and left
    the user with an error message that was hard to understand. This has
    been fixed by making all maagic nodes with children iterable.

    (Issue tracker: #26514)

  - Python API: A maagic Enum or Case could not be compared using the != or
    <> operators. This has been fixed.

    (Issue tracker: #26614)

  - Python API: When enabling IPC access check in ncs.conf packages written
    in Python didn't work. This has been fixed.

    (Issue tracker: #27279)

  - Python API: When a python service is changed or re-deployed the back
    pointer and reference counter was lost. This has now been corrected.

    To correct this for already instantiated python services do:

    request /path-to-python-service * re-deploy

    If the '*' is not accepted as input the service YANG file needs to be
    updated by importing the tailf-common module:

    import tailf-common {

    prefix tailf; }

    and add the tailf:cli-allow-range annotation to the key leaf node of
    the service.

  - REST API: If the candidate datastore is enabled and also the running
    datastore is writable (aka writable running), the candidate is a
    separate datastore which might be out-of-sync or empty. This would
    result in empty results or missing values from the unified datastore.

    To fix this, GET requests to the unified datastore now always query
    the running datastore even when candidate and writable running are
    enabled.

  - REST API: REST/RESTCONF may now return multiple error messages.

  - REST API: REST now returns more diversified error codes and messages at
    action failures.

    (Issue tracker: #26291)

  - REST API: If RESTCONF was enabled, but not the legacy REST API,
    accessing the resource /restconf/data/ietf-yang-library:modules-state
    would result in a 500 internal error.  This bug has been fixed.

  - REST API: After a package reload, the REST server would fail to
    correctly format some error responses.  This bug has been fixed.

  - RESTCONF: Fixed erroneous JSON output when depth query parameter was
    used together with containers.

  - RESTCONF: Reloading NCS configuration did not pick up RESTCONF
    configuration changes, this has now been fixed.

    (Issue tracker: #26371)

  - RESTCONF: If the candidate datastore is enabled and also the running
    datastore is writable (aka writable running), the candidate is a
    separate datastore which might be out-of-sync or empty. This would
    result in empty results or missing values from the unified datastore.

    To fix this, GET requests to the unified datastore now always query
    the running datastore even when candidate and writable running are
    enabled.

    (Issue tracker: #26681)

  - RESTCONF: The RESTCONF example had errors in the instructions, these
    are now fixed.

  - Toolchain: Strict ordering of elements in project-meta-data.xml is no
    longer required when using ncs-project.

    (Issue tracker: #26041)

  - Toolchain: The new YANG 1.1 functions "derived-from" and
    "derived-from-or-self" always returned false.  This bug has been fixed.

    (Issue tracker: #26264, #26927)

  - Toolchain: ncsc did not reject some invalid command-line arguments.
    This has been fixed.

  - Toolchain: A newline has been added after printing comments in pyang.

    (Issue tracker: #26484)

  - Web UI: Fixed various compatibility issues for IE9.

    (Issue tracker: #26573)

  - Web UI: Leafrefs pointing to leaf-lists were displayed as standard text
    input. This has now been fixed with a drop down.

    (Issue tracker: #25507)


NSO-4.3.1.1 [March 6, 2017]
===========================

Corrections:

  - ncs: Previously a race condition could occur if an alarm with the same
    key was written concurrently which would cause the transaction to crash.
    This has now been fixed.

    (Issue tracker: #26913)

  - ncs: Commit queue stopped working on a service NSO if commit queue was
    enabled by default on a device NSO. This has now been corrected.

    (Issue tracker: #27002)


NSO-4.3.1 [January 24, 2017]
============================

Non-backwards compatible enhancements:

  - ncs: Support for Layered Service Architecture (LSA) mode of operation
    for large scale deployments has been added. LSA can be enabled in
    ncs.conf under /ncs-config/large-scale/lsa.

    It is now possible to specify a ned-id for NETCONF type devices.
    Currently two ned-ids are supported: ned:netconf and ned:lsa-netconf.
    ned:lsa-netconf should be configured on the upper LSA node for devices
    represending lower LSA nodes, for all other devices ned:netconf should
    be used.

    Devices configured with ned-id lsa-netconf are handled in a special
    way when executing a transaction towards them. The commit parameters
    such as "dry-run", "no-networking", etc. do not take place on the local
    node, but are instead propagated and take place on the LSA nodes. These
    devices are also considered when executing service actions such as
    "get-modifications", "re-deploy", etc. on LSA services. This behaviour
    is configurable on a global, device profile or individual device basis
    and can be forced or canceled on a per-transaction basis.

    The format of commit dry-run output in all northbound interfaces has
    changed to be able to accomodate dry-run result from multiple LSA
    nodes. The output format of actions in tailf-ncs-services.yang module
    and the format of compliance reports has changed accordingly.

    Added LSA plugin for NSO compiler. Added support for LSA package
    skeletons in ncs-make-package.

    NSO now reports a LSA license in the Cisco Smart Licensing cloud when
    enabling LSA.

    For detailed information on LSA see Layered Service Architecture book
    in the NSO documentation bundle. See also
    service-provider/mpls-vpn-layered-service-architecture and
    developing-with-ncs/20-layered-service-architecture examples in the NSO
    example collection.

  - ncs: NSO or user specific code may choose to populate service log
    entries to indicate important events associated to it. Each service
    instance has a new container named 'log' where these log entries
    reside. The logging can be configured under /services/logging

    For new system installations there will be a default logger
    configured. For existing system installations it is recommended to
    configure a logger with a 'info' log-entry-level.

    API methods to populate the service log exists for Java, Python,
    Erlang and C.

    Added submodule tailf-ncs-log.yang.

Enhancements:

  - ncs: NSO is now integrated with Cisco Smart Licensing.

  - ncs: The commit log produced when /ncs-config/logs/audit-log-commit is
    set to "true" now also includes the "comment" and "label" for the
    commit, if any.

    (Issue tracker: #22355)

  - ncs: The Nano Services experimental feature have been introduced as a
    new way of executing/controlling Reactive FASTMAP services.

    See the Nano Services chapter in the Development Guide for more
    information on this.

  - ncs: Kickers can now have a set of variable bindings associated with
    the monitor and kicker expressions.

  - ncs: Merged multiple commit queue errors into one.

    When multiple errors occurs this will be presented as:

    Error: Multiple device errors:

    frob0: Failed to connect to device frob0: connection refused

    frob1: Failed to connect to device frob1: connection refused

    When a single error occurs:

    Error: Failed to connect to device frob1: connection refused

    This is governed by the setting:

    devices global-settings report-multiple-errors true

  - ncs: NSO is now more efficient when running out-of-sync check for
    multiple devices. Now NSO also is able to return multiple errors for
    this check.

  - ncs: When a NED was queried for a stats leaf there was no way for the
    NED to signal that the leaf did not have a value, with the result that
    the NED was queried multiple times for the same value, ie the non-
    value state was not cached. Also, there has not been a way for a NED to
    tell NSO that a list has been populated as part of another request.
    This has now been fixed. If a NED returns a TTL for a leaf then NSO
    will assume that the value in the cache holds. If there is no value,
    then NSO will assume that the leaf should not have a value. Similarly,
    if a TTL for the list itself, not a list instance, is returned, then
    NSO assumes that the list has been populated, ie that all instances has
    been created, and will not issue a showStatsList call for the list.
    These two changes will greatly reduce the communication between NSO and
    the NED and should improve performance for reading stats.

  - ncs: Added event notification NOTIF_REOPEN_LOGS, indicating that NSO
    will close and reopen its log files.

    (Issue tracker: #26358)

  - AAA: PAM authentication now supports a combined length of username and
    password up to 63 kB (was 8 kB).

    (Issue tracker: #25663)

  - C-API: If confd_mmap_schemas() had been used, it was not possible to
    call the function again, and calling confd_load_schemas() or
    maapi_load_schemas() without a preceding call of
    confd_mmap_schemas_setup() would cause a crash. This has been fixed.

    (Issue tracker: #20218)

  - C-API: Added a new return value, ITER_SUSPEND, to the iterator function
    that maapi_diff_iterate()/maapi_keypath_diff_iterate()/maapi_iterate()
    invokes. This provides a way of breaking out to the "main loop" when in
    a long iteration. When the caller is ready to continue, a new function
    maapi_diff_iterate_resume() or maapi_iterate_resume() must be called.
    See the confd_lib_maapi(3) manual page for details.

    (Issue tracker: #22798)

  - C-API: Added confd_free_schemas(), see the confd_lib_lib(3) manual
    page.

    (Issue tracker: #25229)

  - CLI: A new set of YANG extensions has been added. They are called:

    * tailf:cli-diff-before

    * tailf:cli-diff-set-before

    * tailf:cli-diff-create-before

    * tailf:cli-diff-modify-before

    * tailf:cli-diff-delete-before

    * tailf:cli-diff-after

    * tailf:cli-diff-set-after

    * tailf:cli-diff-create-after

    * tailf:cli-diff-modify-after

    * tailf:cli-diff-delete-after

    and can be used to control the output when displaying C-style
    configuration diffs (e.g. show configuration, commit dry-run outformat
    native).

  - CLI: The yang extension tailf:default-ref has been ported to NSO. It is
    currently limited to relative paths and absolute paths will be ignored.

  - CLI: A new YANG extension has been added. It is called
    tailf:cli-reset-full and is a sub-statement to
    tailf:cli-show-long-obu-diffs. If used, the list will be displayed in
    the configuration diff (ex. commit dry-run outformat native) as it will
    look like when transaction is committed, rather than the commands that
    would lead to the configuration change. This extension will only have
    effect in the C-style configuration diffs.

  - CLI: Building up the CLI menu was slow when using many clispec and fxs
    files. The performance of this has been improved.

    (Issue tracker: #24927)

  - CLI: The difference calculation of long lists has been optimized.

    (Issue tracker: #26077)

  - Documentation: Add the description of the quoting and escaping scheme
    to NCS user guide.

    (Issue tracker: #22179, #24229)

  - NED: Previously if the device closed connection (perhaps, by idle
    timeout) while NCS was preparing southbound diffs, then the transaction
    would be aborted due to closed connection. This has been changed so
    before sending the operations to the device NCS checks if the
    connection is still open and tries to re-establish connection
    otherwise.

    (Issue tracker: #26128)

  - NETCONF: Added /ncs-config/netconf-north-bound/write-timeout, to make
    it possible to terminate a northbound NETCONF session if the client
    does not consume the data sent (e.g. notifications).

    (Issue tracker: #22955)

  - NETCONF: Added support for running NETCONF/TCP sessions via the IPC
    port, making it possible to use the "IPC Access Check" to restrict the
    unauthenticated access that is needed by (e.g.) 'netconf-subsys'. See
    $NCS_DIR/src/ncs/netconf/netconf-subsys.c for details.

    (Issue tracker: #25704)

  - Python API: _ncs.xpath_pp_kpath available in the Python API.

  - REST API: Added RESTCONF API according to
    draft-ietf-netconf-restconf-18. As a result, the existing REST API has
    got an improved json encoding, which may cause backward incompatible
    changes.

  - REST API: Memory usage has been decreased when large amounts of data is
    returned from an action.

    (Issue tracker: #21569)

  - Toolchain: Enhancement of NSO bundle compilation. The
    --ncs-keep-callpoints flag has been added as an option to
    --ncs-compile-bundle.

Non-backwards compatible corrections:

  - ncs: The commit-queue container beneath a service has been replaced by
    the list commit-queue/queue-item. The list holds the last failed
    queue-items and any queued queue-items.

  - CLI: Deleting a mandatory leaf (from the CLI) in a list, would cause
    the entire list to be deleted. Instead, now it is possible to delete
    the leaf itself, but not to commit that change set.

    (Issue tracker: #25423)

  - CLI: The Cisco style CLI would sort container and list children without
    taking 'tailf:sort-priority' into account. This has been fixed.

    (Issue tracker: #25723)

  - REST API: GET and HEAD produce same headers.

    (Issue tracker: #25243)

  - RESTCONF: Disabled old-style REST key format for RESTCONF.

  - Toolchain: The YANG compiler would compile faulty paths without
    complaining. This has been fixed. The compiler will now emit an error
    in the case that a prefix is missing on a node located in an external
    module. This correction makes faulty tailf:link, tailf:symlink and
    leafref definitions impossible to compile. The fix is therefore non
    backwards compatible.

    (Issue tracker: #25210)

Corrections:

  - ncs: NACM rules were ignored when loading CLI config using "load
    override". This has been fixed.

    (Issue tracker: #21748, #21952)

  - ncs: If a Netconf notification subscription connection towards a device
    got stalled (e.g. if the device was removed from the network) after NCS
    having received an incomplete SSH packet from the device, the
    connection would hang until the TCP connection got closed (which could
    take a very long time). This has been fixed, in that such connections
    are dropped if hanging for more than 60 seconds.

    (Issue tracker: #22142, #25652)

  - ncs: If an invalid dependency for a 'must', 'tailf:validate',
    'tailf:cli-diff-dependency', or 'when' statement was encountered when
    loading a YANG module, NCS would either ignore the problem or fail the
    loading (for 'when'). This has been fixed - now an error message is
    logged in ncs.log.

    (Issue tracker: #21409, #22103, #21892, #25649)

  - ncs: Upon successful sync-from NCS used to print a "syncing from
    <device-name> error" in developer log. This has been fixed.

    (Issue tracker: #25861, #26059)

  - ncs: In very rare cases NCS could crash with a segmentation fault
    during garbage collection. This has been fixed.

    (Issue tracker: #25565)

  - ncs: NSO now adds completed devices to failure and completed
    notifications in the commit queue.

    (Issue tracker: #25048)

  - ncs: A bug was introduced where southbound locked devices did not get
    their transaction-id invalidated, this making the device report in-sync
    even though it wasn't. This has now been fixed.

    (Issue tracker: #25755)

  - ncs: The YANG compiler did not detect circular dependencies between
    modules that were caused by annotation or deviation modules, resulting
    in an "internal error" at load time. This has been fixed.

    (Issue tracker: #25796, #25823, #25638)

  - ncs: NCS used to print "operation aborted by user" entry in service log
    whenever this service was touched by commit dry-run. This has been
    fixed.

  - ncs: NCS was not able to handle list keys of type instance-identifier.
    This has been fixed.

    (Issue tracker: #26032)

  - ncs: Existing SSH private keys stored in /ssh/private-key/key-data were
    not automatically upgraded to use the random IV encryption method
    introduced in NSO-4.2, and could thus not be used for public-key
    authentication, or even displayed in northbound interfaces. Also, if
    passphrases for the keys had been configured, the CDB upgrade would
    fail completely with an internal error. This has been fixed, i.e. the
    key data is automatically upgraded when upgrading NSO to a version with
    this fix. Once upgraded, the key data can be used also in earlier
    versions in the NSO-4.2 and NSO-4.3 branches. Automatic downgrade is
    possible to NSO-4.1.5 or later in the 4.1 branch, or NSO-4.0.6 or later
    in the 4.0 branch.

    (Issue tracker: #26091)

  - ncs: There was a bug related to how service-list and lsa-service-list
    elements under a service instance were stored internally that would
    manifest itself when e.g. doing a Maapi.copy_tree on this service. This
    has been fixed. The currently stored data will be corrected on next
    service re-deploy.

    (Issue tracker: #26073)

  - ncs: Previously there was an internal error when running 'commit
    dry-run outformat native' on a device with commit-queue
    enabled-by-default. This has now been fixed.

  - ncs: If the XPath compiler detects that a kicker monitor expression
    will always fail (e.g., on the form
    /mylist[name=unquoted-string]/status), an internal error was generated.
     This type of error is now logged in the devel log.

  - ncs: Previously there was an internal error when running 'commit
    dry-run outformat native' and commit-queue was enabled-by-default
    globally. This has now been fixed.

    (Issue tracker: #26027)

  - ncs: When doing a re-deploy reconcile, NCS could treat leafs with
    default values as if they were configured manually, resulting in
    incorrect refcount values on such leaf's parent nodes. This has been
    fixed.

    (Issue tracker: #24540)

  - ncs: Previously when a device failed in the commit queue a log entry
    was written in all services that participated in the commit. NSO now
    only logs in the service that actually modified the device.

  - ncs: When syncing and comparing configuration from report-all
    devices,default values were not handled correctly. This has now been
    fixed.

  - ncs: Previously the scp-to and scp-from actions could fail due to
    options being sent which was not implemented on the remote host. This
    has now been fixed.

    (Issue tracker: #26392)

  - C-API: If a container or a leaf of type empty that was augmented from
    another module was returned via confd_data_reply_value_array(),
    confd_data_reply_next_object_array(), or
    confd_data_reply_next_object_arrays(), NSO would incorrectly reject the
    reply with a "Bad tag value" error. This has been fixed.

  - C-API: If a data provider replied to get_next_object() using
    confd_data_reply_next_object_arrays() or
    confd_data_reply_next_object_tag_value_arrays() with zero objects, an
    "internal error" would occur in NSO. This has been fixed - such reply
    calls will now return CONFD_ERR with confd_errno ==
    CONFD_ERR_PROTOUSAGE.

    (Issue tracker: #25512)

  - CLI: CLI tries to interpret 378 as octal. Everything bigger than 378
    gives "Error: internal error", e.g. \378 or \750. The correct error
    message for this case shall be "syntax error" where any octal bigger
    than 378 (actually should be 400) shall not be accepted in the CLI
    input and "syntax error" shall be prompted instead of "internal error".
    This has now been fixed.

  - CLI: If one escapes the backslash (i.e. where one actually wants a \ in
    the value), it will fail to rollback this setting because the saved
    string in the rollback file is not escaped, i.e. it has one backslash,
    resulting in 'internal error' when reading the same string written by
    NCS. This has now been fixed.

  - CLI: The CLI would experience an internal error when piping to the
    append command. This has been fixed.

    (Issue tracker: #25955)

  - Cluster: If device modifications done by services whose keypaths
    contained spaces or quotation marks, the back-references got mangled
    when the device config was set and subsequently read from the device
    node in a cluster. This led to various problems, out of which incorrect
    removal of device modifications was one. This has been fixed.

    (Issue tracker: #25206)

  - Documentation: Renamed the example 20-layered-service-architecture to
    22-layered-service-architecture. Updated the example and the LSA
    documentation to adhere to the updated example.

    (Issue tracker: #26189)

  - Java API: package reload for java packages containing application
    components had an inherent race condition which could remove class
    definitions before the application component finish() callback had
    completed. This could in some cases result in a NoClassDefFoundError.
    This has been fixed.

    (Issue tracker: #25903)

  - JSON-RPC: When calling get_schema on node with augmented leafrefs the
    resulting field leafref_target didn't always point to the correct
    location. This has been fixed.

  - JSON-RPC: Transaction hooks throwing exceptions didn't fail commits
    when using candidate. This has been fixed.

    (Issue tracker: #23475, #24967)

  - NED: When connecting via telnet to managed devices, if the connection
    was closed by the remote end NSO did not detect it in a timely manner.
    This has been fixed.

  - NETCONF: If a "delete" operation in an edit-config was present on a
    list's key element, NCS would fail to report this as an error.  This
    bug has been fixed.

    (Issue tracker: #25881)

  - NETCONF: The built-in YANG modules "ietf-netconf" and
    "ietf-netconf-with-defaults" are now properly advertised in NETCONF
    <hello> and in the /netconf-state/schemas/schema list.  This also means
    that these modules can be downloaded with the <get-schema> RPC.

    (Issue tracker: #25931, #22654)

  - Packages: Previously NSO could give an internal error when there
    existed unnecessary XML files in the load-path. This has now been
    fixed.

    (Issue tracker: #25587)

  - Python API: In _ncs.dp the calls trans_seterr_extended(),
    trans_seterr_extended_info(), action_seterr_extended(),
    action_seterr_extended_info(), db_seterr_extended(),
    db_seterr_extended_info(), notification_seterr_extended() and
    notification_seterr_extended_info() didn't honor the 'code' argument.
    This has been fixed.

    (Issue tracker: #25154)

  - Python API: Using Maagic to iterate over a list where at least one key
    was a union where one of the types was an enumeration didn't work. This
    has been fixed.

  - REST API: REST/RESTCONF API will not timeout due to slow content being
    produced.

    (Issue tracker: #26096, #26256)

  - RESTCONF: Fixed erroneous JSON output when depth query parameter was
    used together with lists.

  - RESTCONF: Possible to POST identityref as leaf-list.

    (Issue tracker: #25358)

  - Smart Licensing: Changes in the device tree could cause internal errors
    under rare circumstances. This has now been fixed.

  - SNMP Agent: Objects mapped to leafs under np-containers with false
    'when' expressions in the YANG model would be returned by SNMP
    walk/get. This has been fixed.

    (Issue tracker: #23661)

  - SNMP Agent: Objects mapped to leafs or lists under np-containers with
    false 'when' expressions in the YANG model could be set/created by SNMP
    set. This has been fixed.

    (Issue tracker: #26117)

  - Toolchain: 'ncsc --emit-xxx' could not handle file/path arguments
    longer than 255 characters. This has been fixed.

    (Issue tracker: #20638)

  - Toolchain: The YANG compiler would fail with "internal error" if
    tailf:annotate was used to annotate a non-tailf-extension. This has
    been fixed.

    (Issue tracker: #25758)

  - Toolchain: If nodes augmented from a different YANG module were
    deviated, the deviating module was not recorded for the augmenting
    module, and thus not reported in NETCONF capabilities or the
    ietf-yang-library module. This has been fixed.

    (Issue tracker: #25770)

  - Toolchain: NSO would fail to start when certain combinations of
    leafrefs with "deref()" was used.  This bug has been fixed.

  - Toolchain: If a deviation or annotation module imported a module that
    augmented a 'choice', 'case', or 'input' statement in the module being
    compiled, loading of the compiled module would fail with "internal
    error". This has been fixed.

    (Issue tracker: #26120)

  - Toolchain: If a module augmented a keyless list within a keyless list,
    NCS would fail to load the module with an error: "The module A was
    compiled with a different version of module B - recompilation is
    needed.".   This bug is now fixed.

    (Issue tracker: #26183)

  - Toolchain: If a deviation used a typedef defined in the deviating
    module, the YANG compiler would fail with "internal error". This has
    been fixed. Note that in this case the deviating module must also be
    compiled and loaded.

    (Issue tracker: #26401)

  - Toolchain: The YANG compiler did not allow mandatory config false nodes
    in 'augment' for YANG-1.1 modules (new in 1.1). This has been fixed.

    (Issue tracker: #26462)

  - Web Server: If a large number of connection attempts with invalid
    SSL/TLS parameters were made by clients, the HTTPS server could
    eventually start dropping all new connections. This has been fixed.

  - Web UI: The webui now gets re-rendered when the target leaf of the
    'when' expression is changed.

    (Issue tracker: #25507, #681347031)

  - Web UI: Webui did not always render leafres as drop-down lists. This
    has been fixed.

    (Issue tracker: #26185)


NSO-4.3.0.2 [January 4, 2017]
=============================

Enhancements:

  - ncs: Using a db_operational cdb session and doing get_case on a config
    choice resulted in an error. This restriction has been loosened and is
    now allowed.

Corrections:

  - ncs: When a specific leaf-list value was specified with tags=delete in
    an NCS template, and the leaf-list was empty when executing the
    template, this value would be appended to the leaf-list instead. This
    has been fixed.

    (Issue tracker: #26238)

  - ncs: If a YANG union type had member types imported both from
    ietf-inet-types or ietf-yang-types and from another module, NSO would
    fail to load the module defining the union type, claiming that a type
    from ietf-inet-types/ietf-yang-types could not be found. This bug was
    introduced in NSO-4.3 and has now been fixed.

    (Issue tracker: #26151, #26157, #26258)


NSO-4.3.0.1 [December 12, 2016]
===============================

Corrections:

  - ncs: The tailf:ned-data extension now works with the
    tailf:cli-recursive-delete annotation.

  - Web UI: Applying template resulted in error message saying the
    transaction could not be written to. This has now been fixed.

    (Issue tracker: #25906)

  - Web UI: Using the "apply-template" action on any device resulted in an
    invalid session. This has now been fixed.

    (Issue tracker: #25808)

  - Web UI: Fixed deref within action.


NSO-4.3 [November 22, 2016]
===========================

Removals:

  - ncs: Previously deprecated leaf device-modifications in service-data
    grouping has been removed. Action get-modifications should be used
    instead of it.

Non-backwards compatible enhancements:

  - ncs: NSO now returns better error codes through MAAPI.

  - ncs: Removed the three different sync actions all/group/device.

    Added additional dry-run parameter to sync-from action.

    Added additional output formats to sync-to dry-run parameter.

  - ncs: Support for Layered Service Architecture (LSA) mode of operation
    for large scale deployments has been added. LSA can be enabled in
    ncs.conf under /ncs-config/large-scale/lsa.

    It is now possible to specify a ned-id for NETCONF type devices.
    Currently two ned-ids are supported: ned:netconf and ned:lsa-netconf.
    ned:lsa-netconf should be configured on the upper LSA node for devices
    representing lower LSA nodes, for all other devices ned:netconf should
    be used.

    Devices configured with ned-id lsa-netconf are handled in a special
    way when executing a transaction towards them. The commit parameters
    such as "dry-run", "no-networking", etc. do not take place on the local
    node, but are instead propagated and take place on the LSA nodes. These
    devices are also considered when executing service actions such as
    "get-modifications", "re-deploy", etc. on LSA services. This behaviour
    is configurable on a global, device profile or individual device basis
    and can be forced or canceled on a per-transaction basis.

    The format of commit dry-run output in all northbound interfaces has
    changed to be able to accommodate dry-run result from multiple LSA
    nodes. The output format of actions in tailf-ncs-services.yang module
    and the format of compliance reports has changed accordingly.

    Added LSA plugin for NSO compiler. Added support for LSA package
    skeletons in ncs-make-package.

    NSO now reports a LSA license in the Cisco Smart Licensing cloud when
    enabling LSA.

    For detailed information on LSA see Layered Service Architecture book
    in the NSO documentation bundle. See also
    service-provider/mpls-vpn-layered-service-architecture and
    developing-with-ncs/20-layered-service-architecture examples in the NSO
    example collection.

  - ncs: Add 'service-reference' leaf to plan component.

    This makes it in theory possible for a UI to 'follow' plans and
    expand.

  - ncs: ncs-backup now creates compressed backups by default. The option
    --no-compress can be used to create an uncompressed backup, see the
    ncs-backup(1) manual page.

    (Issue tracker: #23371)

  - ncs: Experimental support has been implemented for importing "inactive"
    attribute during sync-from and pushing changes in "inactive" attribute
    to the devices that support this feature. Note that the configuration
    with "inactive" attribute imported from the devices also becomes
    inactive in NCS, thus having all the properties of inactive
    configuration (e.g. being subject to HIDE_INACTIVE flag). The inactive
    attribute is ignored when pushing the configuration to the devices that
    do not support this feature. In order to get the old behaviour in
    ncs.conf set both /ncs-config/enable-inactive and
    /ncs-config/netconf-north-bound/capabilities/inactive/enabled to false.

  - ncs: NSO can now generate NETCONF notifications by configuration for
    plan state transitions.

    Added /services/plan-notifications

  - ncs: NSO or user specific code may choose to populate service log
    entries to indicate important events associated to it. Each service
    instance has a new container named 'log' where these log entries
    reside. The logging can be configured under /services/logging

    For new system installations there will be a default logger
    configured. For existing system installations it is recommended to
    configure a logger with a 'info' log-entry-level.

    API methods to populate the service log exists for Java, Python,
    Erlang and C.

    Added submodule tailf-ncs-log.yang.

  - CLI: Introduced compiler warnings for incompatible
    tailf:cli-extensions, and introduced recommendations for when certain
    combinations should be used.

  - CLI: Added NSO config parameter "allowImplicitWildcard". Setting this
    parameter to false makes the CLI not accept implicit wildcards as keys
    to lists.

  - CLI: A new CLI command has been added to the C-, I- and J-style CLI.

    timecmd <command>

    Time command. It measures and displays the execution time of
    <command>.

    Note that this command will only be available if devtools has been set
    to true in the CLI session settings.

  - CLI: It was not possible to have a leaf containing a when statement,
    where the when statement referenced another leaf with
    'tailf:cli-prefix-key' on it, if these two leafs were in the same list.
    This has been fixed.

    (Issue tracker: #24794)

  - Packages: The tool ncs-make-package has been improved.

  - Python API: Assigning binary leafs using maagic now requires the value
    to be in the same format as is returned when reading the value.

Enhancements:

  - ncs: NETCONF notifications, when stored as CDB operational data, are
    now possible to use together with the Kicker functionality.

  - ncs: Configurable range of allowed group size, the SSH server responds
    to the client during a "diffie-hellman-group-exchange". The range will
    be the intersection of what the client requests, if there is none the
    key exchange will be aborted.

    (Issue tracker: #18489, #22149)

  - ncs: SSH encryption algorithms using CBC mode have been disabled in the
    default ncs.conf file. They can be enabled via
    /ncs-config/ssh/algorithms/encryption if desired, see the ncs.conf(5)
    manual page.

  - ncs: The hmac-md5, hmac-md5-96, and hmac-sha1-96 SSH mac algorithms
    have been disabled in the default ncs.conf file. They can be enabled
    via /ncs-config/ssh/algorithms/mac if desired, see the ncs.conf(5)
    manual page.

  - ncs: NSO now restricts reading configuration from a device when some
    other configuration is writing to it. This is to avoid getting
    inconsistent data when reading configuration.

    (Issue tracker: #21059, #24591)

  - ncs: Added action 'scp-to' and 'scp-from' to /devices/device.

    (Issue tracker: #20160)

  - ncs: The Nano Services experimental feature have been introduced as a
    new way of executing/controlling Reactive FASTMAP services.

    See the Nano Services chapter in the Development Guide for more
    information on this.

  - ncs: Added additional dry-run parameter to un-deploy action.

  - ncs: NSO can now display all active set of parameters when
    communicating with the device.

    Added /devices/device/settings

  - ncs: The NSO installation now generates an RSA SSH host key instead of
    DSA. The DSA algorithm is considered weak, and is e.g. not enabled by
    default by the current OpenSSH client (see
    http://www.openssh.com/legacy.html). If a DSA key is desired, the
    OpenSSH 'ssh-keygen' command can be used to generate one.

    (Issue tracker: #23389)

  - ncs: An error message reporting that NCS is locked has been improved.
    More detailed information about user sessions and locks is included in
    the output of ncs --status.

  - ncs: It is now possible to create a netsim device with specific name
    using ncs-netsim create-device or add-device command.

    (Issue tracker: #23527)

  - ncs: The cache performance when an external data provider returns many
    list entries in response to the get_next_object callback has been
    improved.

  - ncs: The calls to get_elem() in the data provider API have been
    optimized.  get_elem() used to be called for leafs in newly created
    list entries, but this is not really necessary, and is no longer done.

    (Issue tracker: #24378)

  - ncs: Removed NETCONF locks when speaking to a NETCONF device with
    transactions capability.

  - ncs: Added simple kicker debug target for commit details.

  - ncs: NCS is now able to handle Juniper devices that send a top-level
    <configuration> element without a namespace declaration.

    (Issue tracker: #16381)

  - ncs: Removed the erroneous message:

    No matching namespaces found for device: iosxr0.

    which in some circumstances was returned when a template was applied.

    (Issue tracker: #24621)

  - ncs: It used to be possible to customize the behaviour of ncs-netsim
    start command by providing a custom start.sh script in the package's
    netsim directory. It is now also possible to customize ncs-netsim stop
    and status commands in the same way by providing custom stop.sh and/or
    status.sh scripts.

    (Issue tracker: #24608)

  - ncs: The built-in SSH server now accepts connections from clients that
    announce version "1.99" in their hello message, treating it as version
    2.0.

    (Issue tracker: #24838)

  - ncs: Support for attributes has been introduced in FASTMAP algorithm,
    so operations on attributes are accounted for when deleting and
    modifying a service. It is also possible to set certain attributes
    (such as "inactive") via service template.

    (Issue tracker: #23307)

  - ncs: The tailf:ned-data extension has been changed to instead be used
    as a filter for the NED to indicate which portions of the to/from
    transaction that it will need to read from.

  - ncs: Kickers can now have a set of variable bindings associated with
    the monitor and kicker expressions.

  - AAA: The source IP address of the connection is now set via PAM_RHOST
    when PAM authentication is used.

    (Issue tracker: #24715)

  - C-API: maapi_load_config(db=operational) is now able to load config
    false data. No initial delete of already existing config false data is
    performed, i.e. the client is responsible for deleting, if applicable,
    before invoking maapi_load_config().

    (Issue tracker: #23997)

  - CDB: Improved error logging for disk-related errors encountered during
    CDB upgrade.

    (Issue tracker: #22934)

  - CLI: A new set of YANG extensions has been added. They are called:

    * tailf:cli-diff-before

    * tailf:cli-diff-set-before

    * tailf:cli-diff-create-before

    * tailf:cli-diff-modify-before

    * tailf:cli-diff-delete-before

    * tailf:cli-diff-after

    * tailf:cli-diff-set-after

    * tailf:cli-diff-create-after

    * tailf:cli-diff-modify-after

    * tailf:cli-diff-delete-after

    and can be used to control the output when displaying C-style
    configuration diffs (e.g. show configuration, commit dry-run outformat
    native).

  - CLI: A new CLI command has been added to the C-, I- and J-style CLI.

    xpath [ctx <path>] (eval | must | when) <expression>

    Evaluate an XPath expression. A context-path may be given to be used
    as the current context for the evaluation of the expression. If no
    context-path is given, the current sub-mode will be used as the
    context-path. The pipe command 'trace' may be used to display
    debug/trace information during execution of the command.

    Note that this command will only be available if the CLI session
    setting 'devtools' has been set to 'true'.

    eval - Evaulate an XPath expression.

    must - Evaluate the expression as a YANG 'must' expression.

    when - Evaluate the expression as a YANG 'when' expression.

  - CLI: Lists using 'tailf:cli-key-format' caused rollback files to be
    difficult to parse, resulting in syntax error at rollback. This has
    been fixed.

    (Issue tracker: #23283, #23211)

  - JSON-RPC: The "new_trans" JSON-RPC method now takes an extra parameter
    "on_pending_changes". This parameter decides what to do if the
    candidate already has been written to, e.g. a CLI user has started a
    shared configuration session and changed a value in the configuration
    (without committing it). If this parameter is omitted the default
    behavior is to silently reuse the candidate (as before). If "reject" is
    specified the call to the "new_trans" method will fail if the candidate
    is non-empty. If "discard" is specified the candidate is silently
    cleared if it is non-empty.

    (Issue tracker: #23392)

  - JSON-RPC: With candidate disabled in ncs.conf, starting a new
    transaction with "db":"candidate" indicates no error, as would be
    expected. Instead, a new transaction seems to be started. This has been
    fixed.

    (Issue tracker: #24471)

  - JSON-RPC: max_elements and min_elements fields have been added to the
    result from the get_schema JSON-RPC method when relevant.

    (Issue tracker: #24638)

  - NETCONF: It is now possible to invoke RPCs/actions on remote NETCONF
    devices with output parameters containing an anyxml node.

  - Packages: ncs-project exits with a non-zero exit code if the command
    fails for any reason.

  - REST API: Added RESTCONF API according to
    draft-ietf-netconf-restconf-18. As a result, the existing REST API has
    got an improved json encoding, which may cause backward incompatible
    changes.

  - Toolchain: It is now possible to compile an NSO service model with ncsc
    --ncs-compile-bundle/--ncs-compile-module, and thus one NSO can manage
    a service in another NSO (configured as a device for the first NSO).
    Limitation: The service model must not augment a built-in NSO model,
    e.g. via /ncs:services.

  - Toolchain: Extended the "ncs-project" command so that it supports
    running update using the packages defined in the bundle section, also
    to export a bundle using the packages currently residing in the
    "packages" directory and also no to rebuild during export.

  - Toolchain: The ncsc compiler now gives a warning if a "when" expression
    refers to any descendant nodes.

    (Issue tracker: #25130)

  - Web Server: A new ncs.conf parameter has been added, i.e.
    webui/X-Frame-Options. By default the HTTP header X-Frame-Options is
    set to DENY for the /login.html and /index.html pages. With this header
    it can be set to SAMEORIGIN or ALLOW-FROM instead.

    (Issue tracker: #24672)

  - Web UI: Webui menu button will close model browser if open.

Non-backwards compatible corrections:

  - ncs: Corrected encoding of empty NP-containers in action callback.  If
    an action had a NP-container as input parameter, and no children to
    that container was present when the action was invoked, the
    NP-container would incorrectly be encoded as an empty leaf.  This bug
    has been fixed, and the container is encoded as a container without any
    children.

    (Issue tracker: #22916)

  - ncs: If a non-presence container had must-expressions, these
    expressions would not be evaluated properly. This has been fixed.

    (Issue tracker: #24414)

  - ncs: Corrected how ned-id is handled in package-meta-data.xml. This
    might affect erroneously written XML. Example usage in
    package-meta-data.xml:

    <ned-id
    xmlns:foo="http://tail-f.com/ned/super-gen-id">foo:super-gen</ned-id>

    Before the ned-id used was "foo:super-gen", which was wrong.

    Now the namespace http://tail-f.com/ned/super-gen-id is used to find
    the correct prefix. Eg. super-gen-id, and the ned-id will then be set
    to super-gen-id:super-gen.

  - ncs: The commit-queue container beneath a service has been replaced by
    the list commit-queue/queue-item. The list holds the last failed
    queue-items and any queued queue-items.

  - Toolchain: The ncsc compiler would incorrectly accept a "must"
    statement within a "case" statement, but it would not have any effect.
    The compiler now gives an error in this case.

Corrections:

  - ncs: In setups involving multiple nodes, operational data was not
    accessible in write transactions involving both config and operational
    data. This has been fixed.

    (Issue tracker: #21429)

  - ncs: Action including boolean leaf could make the CLI crash. This has
    been fixed.

    (Issue tracker: #21965)

  - ncs: Previously NACM rules were ignored by NSO for many operations.
    Certain operations could not be run correctly and for dry-run
    operations NSO could leak information. This has now been fixed.

    (Issue tracker: #22682, #18150)

  - ncs: If a list within a list had a leafref that used deref to another
    leafref that used a deref, NCS would fail to start. This bug has been
    fixed.

  - ncs: Services under lists using plan data would not update status and
    plan-history correctly. This has now been fixed.

  - ncs: A partial recreate of a subtree consisting of at least two choice
    statements interleaved by a list could cause delete operations for
    nodes to be dropped, i.e. nodes could incorrectly be resurrected. This
    has now been fixed.

    (Issue tracker: #23518)

  - ncs: Stacked services were not correctly un-deployed if more than two
    levels of services were used. This has been corrected.

    (Issue tracker: #23836, #25176)

  - ncs: When consecutive colons were used in values in a template all the
    colons were reduced to only one colon. This has now been corrected.

    (Issue tracker: #24314)

  - ncs: When service re-deploy was invoked by a user that does not have
    access to service private data, an internal error would occur. The
    error message has been improved to indicate the issue.

  - ncs: The default value of commit-retry-timeout is now changed to
    infinity.

  - ncs: Previously when an element was created in a CLI or generic
    device's configuration and commit no-overwrite was specified, the
    trans-id was verified and the commit was aborted if it didn't match,
    even though the create should have succeeded. This has now been fixed.

    (Issue tracker: #24584)

  - ncs: Previously it was possible to execute RPC's defined in one NED in
    another NED's devices. This is now fixed.

    (Issue tracker: #24579)

  - ncs: When reading the operational data 'modified' or
    'directly-modified' of a service from Python or C this led to an
    'INTERNAL ERROR: Bad keypath value'. This has been corrected.

    (Issue tracker: #24690)

  - ncs: When /ncs-config/logs/audit-log-commit is enabled, the values for
    elements annotated with tailf:suppress-echo would be printed to
    audit.log in clear text. This has been fixed so now the values are
    masked.

    (Issue tracker: #24698)

  - ncs: A device module that only included rpc definitions (for a NETCONF
    device) did not get properly listed in the list of modules belonging to
    a device. This has been fixed.

    (Issue tracker: #24579)

  - ncs: When a lower service in stacked services architecture is modeled
    as a presence container, it would only be invoked the first time the
    service was deployed but not on subsequent service modifications that
    touched this service instance. This has been fixed.

    (Issue tracker: #24868)

  - ncs: Deleting a service with service create() code that deletes nodes
    could cause an internal error. This has now been fixed.

    (Issue tracker: #25033)

  - ncs: During upgrades an internal read transaction was closed too early,
    which on rare occasions could lead to crashes. This has been fixed.

  - ncs: The PYTHONPATH environment variable was not setup correctly if you
    sourced confdrc.tcsh. This has been fixed.

  - ncs: A service in a multi-key list with a plan wouldn't update its plan
    correctly. This has now been fixed.

  - ncs: User session passed to the service's create() callback was
    associated with username "system". This has been changed so the
    username associated with this user session corresponds to the actual
    user deploying the service.

    (Issue tracker: #25350)

  - ncs: Previously if nothing was changed below /devices/device/config the
    dry-run output was empty even if changes to e.g. a service was made.
    This has now been fixed.

  - ncs: Data provider callback invocation for a daemon would fail when
    2147483647 invocations had been done for that daemon. This has been
    fixed.

    (Issue tracker: #25330)

  - ncs: Fix bug where setting commitRetryTimeout to infinity could crash
    NSO.

  - ncs: A bug was introduced where southbound locked devices did not get
    their transaction-id invalidated, this making the device report in-sync
    even though it wasn't. This has now been fixed.

    (Issue tracker: #25755)

  - C-API: The confd_dp.h header file for the C API exposed a 'struct
    hashtable' that could conflict with the class 'hashtable' in the
    standard C++ library. This has been fixed.

    (Issue tracker: #25344)

  - CDB: A HA-transition from none -> slave, which caused an initial sync
    to be performed, followed by a slave -> none transition, could cause an
    internal error in CDB. This has now been fixed.

    (Issue tracker: #24620)

  - CDB: Fix bug where writing a choice in an operational transaction could
    crash NSO.

  - CLI: Dependencies, as defined by tailf:cli-diff-dependency, within a
    list that was annotated with tailf:cli-recursive-delete would not be
    triggered if the list was deleted. This has been fixed.

    (Issue tracker: #22700)

  - CLI: In the CLI, piping to display XML (using the show command) would
    crash, causing information leakage, when using implicit wildcard in
    list keys. This has been fixed.

    (Issue tracker: #24955)

  - CLI: When the CLI used CAPI for customer defined CLI completion,
    wildcards would be formatted in a way CAPI could not handle. This has
    been fixed.

    (Issue tracker: #22630)

  - CLI: Internal error in the CLI evaluating AAA rules for default values
    has been fixed.

    (Issue tracker: #22794)

  - CLI: The line "This line doesn't have a valid range expression" should
    not be printed when allowRangeExpression is turned off. This has now
    been fixed.

    (Issue tracker: #23582)

  - CLI: The CLI could enter an infinite loop when users deleted a list
    instance. This has been fixed.

  - CLI: When using a list with tailf:cli-range-list-syntax, rollback from
    NSO would print the list as range list syntax (instead of a list of no
    commands), leading to NEDs not deleting old list instances. This has
    been fixed.

  - CLI: When mixing taif:cli-diff-dependency with
    tailf:cli-recursive-delete extensions the recursive delete would
    sometimes be used more extensive than expected but without the correct
    ordering. This has been fixed.

  - CLI: The stream device-notifications is not accessible via the CLI
    anymore, as it is internal.

    (Issue tracker: #24223)

  - CLI: Configuring a list annotated with tailf:cli-allow-join-with-key
    would in some cases not work correctly if there were other lists on the
    same level that were also annotated with tailf:cli-allow-join-with-key.
    This has been fixed.

  - CLI: The Cisco C-style CLI would crash if the "compare file" command
    was used in oper mode. This has been fixed.

    (Issue tracker: #24865)

  - CLI: Notifications that are augmented with list data are not getting
    displayed in ncs_cli. The show notification stream <stream-name>
    command throws internal error. This has now been fixed.

    (Issue tracker: #25030)

  - CLI: Hidden data nodes in lists could still appear in change sets
    without using unhide. This has been fixed.

    (Issue tracker: #24693)

  - CLI: Recently started CLI sessions crashed during upgrade. This has
    been fixed.

    (Issue tracker: #24577)

  - CLI: It was not possible execute a command rendered from a leaf
    containing a when statement, where the when statement referenced
    another leaf with 'tailf:cli-prefix-key' on it, if these two leafs were
    in the same list. This has been fixed.

  - CLI: An internal error was encountered when using the CLI for leafrefs
    as action params. This has been fixed.

  - CLI: The CLI sometimes produced faulty rollback files when working with
    'ordered-by user' lists.

  - Cluster: If a must-expression on NCS service node in cluster had a
    dependency on an element stored in NCS device node, then the result of
    evaluating such expression might have been wrong in some cases. This
    has been fixed.

    (Issue tracker: #24306)

  - Cluster: Executing /devices/device/apply-template action or running
    compliance report on the service node in cluster will now use templates
    from the service node and will not commit changes automatically.

    (Issue tracker: #24388)

  - Cluster: In cluster environment, when an ordered-by user list entry was
    created in a non-last position and any attributes were set on the this
    list entry at the same time, the attributes were lost. This has been
    fixed.

    (Issue tracker: #24418)

  - Cluster: In cluster environment it was not possible to unset a leaf
    which is set to a value and has a default value defined in the model.
    This has been fixed.

    (Issue tracker: #25260, #25277, #25283, #25314)

  - Cluster: NCS cluster service nodes left open NETCONF sessions when
    using dry-run. This has been fixed.

    (Issue tracker: #25400)

  - Documentation: The JavaDoc for ConfDatetime.getTimezone is now correct.

    (Issue tracker: #24502)

  - Documentation: Documented that the NETCONF server only supports <url>
    with scheme "file" as <target> for <delete-config>.

    (Issue tracker: #25426)

  - Java API: Navu method getName() could not correctly handle the case of
    a NavuList with a key containing an embedded '/' char. This has been
    fixed.

  - Java API: Previously when applying template in Java and value already
    exists the wrong error code was returned. This has now been fixed.

    (Issue tracker: #23586)

  - Java API: Added missing Maapi method authenticate2 to Java and Erlang
    API.

    (Issue tracker: #23509)

  - Java API: Removed printout of trace message in java log.

    (Issue tracker: #24718)

  - JSON-RPC: Error messages containing keypaths replaced the keypath part
    with an empty string, e.g. " is not configured" instead of "/foo/bar is
    not configured". This has been fixed.

    (Issue tracker: #22405)

  - JSON-RPC: An "Invalid configuration mode" error occurred in the
    "new_write_trans" method when the candidate was enabled. This has been
    fixed.

    (Issue tracker: #22821, #22841, #23043)

  - NED: When connecting via telnet to managed devices, if the connection
    was closed by the remote end NSO did not detect it in a timely manner.
    This has been fixed.

  - NED: When an action in the device tree was evaluated through Maapi
    towards a NETCONF device, there was a slight risk of the Maapi socket
    getting abruptly closed from the server side. This has been fixed.

    (Issue tracker: #22872)

  - NETCONF: YANG modules with restricted visibility through tail-f:export
    statement were accessible in the NETCONF interface. This has now been
    fixed.

    (Issue tracker: #22654)

  - NETCONF: Previously NCS used to hang when it received no reply to
    <discard-changes/> RPC from the managed device. This has been fixed now
    so read-timeout is honored.

    (Issue tracker: #24035)

  - NETCONF: The NCS_MAAPI_USID environment variable was not set when the
    executable for an rpc defined with tailf:raw-xml was invoked. This has
    been fixed.

    (Issue tracker: #24363)

  - NETCONF: The NETCONF NED would not properly handle identity values in
    some get requests. This bug has been fixed.

  - NETCONF: The NETCONF NED now reads data from ietf-yang-library, if this
    module is advertised by the device.

  - Packages: Revision drop did not always succeed when more than one
    change was made on one node. This has now been fixed.

    (Issue tracker: #22069)

  - Packages: Fix for ncs-project when a tar-file was fetched and extracted
    by ncs-project, both the tar-file and the package directory remained
    causing an error when trying to start NCS. The tar-file is now removed.

    Also allow for https url in the <url> tag.

    (Issue tracker: #24219)

  - Packages: If a local package was re-configured as a git package from a
    branch or tag, the command would update the project git repository -
    assuming there was a branch or tag with same name in the project git
    repository.

  - Python API: When implementing cb_pre_modification() and/or
    cb_post_modification() callbacks using decorators from the Service
    class, the wrong transaction handle was attached to the passed in
    Maagic object *root*. This has been fixed.

  - REST API: Allow PUT for collections.

    (Issue tracker: #22015)

  - REST API: Minor fix of rollback example in documentation.

  - REST API: In case an error occurred when using commit-queues, a very
    non-descriptive "internal error" was returned. This has now been fixed
    and a proper error message is now returned.

    (Issue tracker: #22886)

  - REST API: Correct JSON output when select query parameter is used on
    nested lists.

  - REST API: When evaluating actions via the JSON-RPC "action" method the
    order of input parameters was significant for presence containers.
    This has been fixed.

    (Issue tracker: #24992)

  - REST API: Correct JSON module prefix encoding for leaf-list.

    (Issue tracker: #25358)

  - RESTCONF: Fixed erroneous JSON output when depth query parameter was
    used together with lists.

  - RESTCONF: Fixed erroneous JSON output when depth query parameter was
    used together with containers.

  - Smart Licensing: When a 'packages reload' was issued, smart licensing
    failed to report NED packages correctly. This has been fixed.

    (Issue tracker: #24559)

  - Toolchain: An attempt could be made to communicate with a  device even
    though a config was not yet created. This has been fixed.

    (Issue tracker: #22297)

  - Toolchain: Elements from all loaded namespaces were visible under
    /devices/device/live-status container. This has been fixed, so that
    once we learn all the namespaces associated with the device only
    elements in relevant namespaces will be visible in CLI and WebUI.

    (Issue tracker: #22845, #23567)

  - Toolchain: If the target of a leafref path was removed by a deviation,
    the YANG compiler would fail with "internal error" instead of reporting
    the problem. This has been fixed.

    (Issue tracker: #23893)

  - Toolchain: If a YANG module augmented multiple other modules, and some
    but not all of them were found, the compiler would fail with "internal
    error" instead of reporting the problem. This has been fixed.

    (Issue tracker: #24279)

  - Toolchain: The YANG compiler could experience an internal error when
    comparing absolute path leafrefs with relative path leafrefs. This has
    been fixed.

    (Issue tracker: #24590)

  - Toolchain: The ncsc compiler can now handle ncs:plan-data when
    compiling a service model (for the case when NSO manages services in
    another NSO).

  - Toolchain: If a "config false" leaf had a tailf:link to a "config true"
    leaf, the "config false" leaf would incorrectly be shown in CLI
    configure mode. This has been fixed.

    (Issue tracker: #25162)

  - Toolchain: The ncsc compiler would fail to compile certain combinations
    of leafrefs in action input, when the leafrefs used the 'deref' syntax.
    This has been fixed.

    (Issue tracker: #25209)

  - Toolchain: ncsc now properly handles rpc and notifications with
    leafrefs that are using the 'deref' syntax.

  - Toolchain: The YANG compiler did not allow mandatory nodes in 'augment'
    with 'when' for YANG-1.1 modules (new in 1.1). This has been fixed.

  - Toolchain: ncsc now handles multiple "base" statements in identityref
    leafs.

  - Web UI: The built-in web server could not generate IPv6 host headers.
    This has been fixed.

    (Issue tracker: #23843)

  - Web UI: Enum can't be set to empty string. Using delete instead.

    (Issue tracker: #24857)

  - Web UI: No notification on SSL certificate update. This has been fixed.

    (Issue tracker: #22305)

  - Web UI: Enter button did not work in popup dialogs. This has been
    fixed.

  - Web UI: Input field was missing to create service with multiple keys.
    This has been fixed.

    (Issue tracker: #23891)

  - Web UI: "No data available" message when using filter in lists. This
    has been fixed.

    (Issue tracker: #23964, #23962)

  - Web UI: Error when trying to add a device in the NSO WebUI
    Views->Devices. This has been fixed.

    (Issue tracker: #24645)

  - Web UI: Widgets wrote empty strings when not supposed to. This has been
    fixed.

    (Issue tracker: #24646)

  - Web UI: Error dialog did not scale for lengthy messages. This has been
    fixed.

    (Issue tracker: #24910)

  - Web UI: The Device type, Auth group and Device group field was removed.


NSO-4.2.1.2 [October 21, 2016]
==============================

Enhancements:

  - CLI: NSO sync-to with a much smaller config in NSO than in the device,
    could be slow due to excessive querying when deleting nodes. This has
    been optimized with caching.

    (Issue tracker: #24810)

  - CLI: More caching of data provider interaction from the CLI should
    result in less redundant reads from a data provider.

  - SNMP Agent: tfAlarmStateChangeText field has been added to the alarm
    related SNMP informs and traps. This field contains the text associated
    with the state change reported by the notification.

    (Issue tracker: #25041)

Corrections:

  - ncs: If a connection to the HA subsystem via the Ha() constructor
    coincided with the closing of an already existing connection, the HA
    subsystem could hang, blocking further requests and CDB replication.
    This has been fixed.

    (Issue tracker: #24704)


NSO-4.2.1.1 [September 19, 2016]
================================

Enhancements:

  - Web UI: Changed "Add List Item"-dialog to display a drop-down if the key
    data-type is an "enumeration".

    (Issue tracker: #24570, #24740)

Corrections:

  - ncs: Previously an internal error in NSO could occur when making a
    connection attempt with a NETCONF device reporting features in its
    capabilities. This has now been fixed.

    (Issue tracker: #24375)

  - Toolchain: If an annotation or deviation module defined an import that
    wasn't used, and the target module defined and used the same import in a
    submodule but not in the main module, no dependency on the imported
    module would be recorded in the .fxs file for the target module, which
    could cause loading of the target module to fail. This has been fixed.

    (Issue tracker: #24637)

  - Toolchain: If an import was defined and used in a submodule, and also
    defined but not used in the main module, no dependency on the imported
    module would be recorded in the .fxs file for the module, which could cause
    loading of the module to fail. This has been fixed.

  - Web UI: CLI terminal did not use full modal size and scrollbar did not
    show after resize. This has been fixed.

    (Issue tracker: #23928)

  - Web UI: Commit error messages in the UI has been fixed.

    (Issue tracker: #23514)


NSO-4.2.1 [August 26, 2016]
===========================

Non-backwards compatible enhancements:

  - CLI: A new CLI template operator '??' has been added. This operator
    checks for explicit exists of a reference, i.e. it does not evaluate to
    true if a leaf has a default value, but has not been explicitly
    configured. The previously existing operator '?' evaluates to true in
    the case of a default leaf.

  - NETCONF: NCS now implements ietf-yang-library from RFC 7895.

Enhancements:

  - ncs: Reading of /ncs-state/ha and generation of HEALTH_CHECK event
    notifications was blocked while a new HA slave was doing a full CDB
    copy to become synchronized with the master. This has been fixed. Note:
    retrieving HA status via the HA API, i.e. using Ha.HaStatus() in the
    Java API, is still blocked during the CDB copy, since the HA subsystem
    processes API requests and HA events in a strictly serial manner.

    (Issue tracker: #16766, #20610, #20754, #22449, #22706, #23382)

  - ncs: NSO can now enable the commit queue as default per device and
    device-group. A transaction containing a device with the commit queue
    enabled as default can still be successful even if the device added to
    the commit-queue will fail. If the transaction fails in the prepare
    phase the whole transaction including the devices enabled as default
    for the commit queue will be aborted.

    (Issue tracker: #21919)

  - ncs: NSO is now integrated with Cisco Smart Licensing.

  - ncs: ncs-netsim now supports creating network from a package in .tar.gz
    format

    (Issue tracker: #22839)

  - ncs: The order stacked services are invoked has changed. Explicitly
    modified services are now invoked before any other services touched by
    them.

    (Issue tracker: #22826)

  - ncs: Devices can now be created in a template. In order to do this the
    tag 'merge' or 'create' has to be explicitly set to /devices/device in
    the template.

    When the tag 'merge' or 'create' is used the device will be shared
    created if the template is applied under FASTMAP.

    Note, no implicit creation will occur, this is the same behavior as
    before.

    (Issue tracker: #23131)

  - ncs: NSO now is significantly faster when performing a commit.

  - ncs: It is now possible to control the audit logging of user names for
    failed authentication attempts. See /ncs-config/aaa/audit-user-name in
    the ncs.conf(5) manual page for details.

    (Issue tracker: #23390)

  - ncs: Previously connection issues was not reported when showing stats
    data. These are now reported.

    (Issue tracker: #22995)

  - CLI: Optimisations have been made regarding the calculation of leafrefs
    when displaying configuration diffs (e.g., commit dry-run outformat
    native). In particular, this should reduce the time it takes to display
    the configuration diff in situations where the configuration is large
    and contains a large number of leafrefs.

    (Issue tracker: #22205)

  - CLI: Performance when resolving data changes and using the
    tailf:cli-diff-dependency extension has been increased.

  - CLI: Optimized the generation of CLI commands for CLI NEDs. This will
    speed up all CLI NEDs and will be noted when deleting configurations
    which have dependencies, leafref or tailf:dependency in the YANG data
    model.

  - Documentation: The NSO release is now cryptographically signed, and
    delivered as a self-unpacking archive which includes the installer and
    the signature. Unpacking the archive, using e.g.the command

     $ sh nso-4.2.linux.x86_64.signed.bin

    will extract the installer and verify the signature. See the NSO
    Installation Guide for further details.

  - Java API: Added NavuNode.encodeValues() method which produces
    ConfXMLParam[] array populated with values from the current transaction

    (Issue tracker: #22951)

  - JSON-RPC: WEB UI idle and absolute timeouts are now logged in the audit
    log.

    (Issue tracker: #23120)

  - JSON-RPC: jsonrpc did not mask leaves with tailf:suppress-echo in the
    audit log. This has been fixed for run_action requests.

    (Issue tracker: #23750)

  - NED: A new YANG extension, tailf:ned-data, has been introduced. This
    extension makes it possible to annotate the YANG model with XPath
    expressions that the NCS device manager will evaluate before sending
    the result to a CLI NED.

  - NED: Added support for ned-data to the generic NED interface.

    A new NedEditOp type NED_DATA has been added and a NedData class to
    access the ned-data in this edit-op.

  - Packages: Updated the ncs-project command to include an option to
    export a project as a bundle.

    The bundle is configured in the project-meta-data.xml.

    A bundle can be extracted using tar, or used as a starting point for
    another ncs-project. When using a bundle as a starting point a new flag
    is used together with the ncs-project create command. See the
    ncs-project(1) manual page for details.

  - Packages: Allow including wildcarded files, e.g. *.txt, *.pdf etc, in
    ncs-project bundles.

    Fix a bug where the ncs version wasn't found if the NCSVSN env.
    variable wasn't set.

  - REST API: Remove with-defaults=trim from documentation since it was not
    supported. Also make the error message easier to understand.

    (Issue tracker: #23340)

  - Toolchain: The flag --ncs-keep-callpoints has been added to ncsc. This
    flag keeps callpoints when performing the ncs transformation from
    modules to device modules, as long as the callpoints have either
    tailf:set-hook or tailf:transaction-hook as sub statement.

    (Issue tracker: #17037, #22521)

Non-backwards compatible corrections:

  - ncs: It was possible to invoke actions via MAAPI with a path that
    didn't exist. This has been fixed.

  - ncs: A transform F1 at node N1 was unable to trigger a transform F2
    located at node N2 if N2 is a descendant to N1. This has now been
    fixed.

    (Issue tracker: #22133)

  - ncs: Templates applied under FASTMAP will always do shared set and
    create.

  - NETCONF: Northbound NETCONF <edit-config> did not obey NACM rules in
    some cases: operation "replace" would replace a subtree regardless of
    NACM rules for descendant nodes, and setting a leaf value as part of a
    "merge" operation was considered an "update" regardless of whether the
    leaf existed previously or not. These bugs have been fixed.

    (Issue tracker: #22590)

  - Python API: It was impossible to create a leaf of type
    instance-identifier using the high level Python API. This has been
    fixed. Also, when reading such a leaf we used to return a HKeypathRef
    object - now a string is returned.

    (Issue tracker: #23958)

  - Toolchain: It was not possible to use
    tailf:annotate-module/tailf:annotate-statement in an annotation module
    to make annotations (e.g. tailf:link) that used prefixes that weren't
    defined in the target module. Using tailf:annotate to make such
    annotations succeeded at compile time, but did not create the needed
    fxs dependencies for the target module, which could cause fxs loading
    to fail (depending on loading order). A deviation module that made
    analogous changes (e.g. changing the type to 'leafref') did also not
    create the needed fxs dependencies for the target module. These bugs
    have been fixed.

    The fixes for annotations require that the annotation module's imports
    and prefixes are made available in the target module (this was already
    done for deviations), which can have non-backwards compatibility
    issues:

    - For both tailf:annotate and tailf:annotate-module, this can generate
    a prefix conflict error if a given prefix is used for different modules
    in the annotation and the target module. This can be avoided by
    changing the prefix used in the annotation module.

    - For tailf:annotate-module only: if the annotation module imports a
    module that also (directly or indirectly) imports the target module, a
    cyclical dependency error is generated. Since actually using imports
    that are not present in the target module was not possible with
    tailf:annotate-module before the fix, the import in the annotation
    module may actually be redundant and possible to remove. In case the
    import is used for a toplevel tailf:annotate in the same annotation
    module, the annotation module needs to be split up into one module for
    tailf:annotate and another for tailf:annotate-module.

    (Issue tracker: #23568)

Corrections:

  - ncs: sync-from could fail when used with several devices exhibiting
    different default handling mode. This has now been fixed.

    (Issue tracker: #21768)

  - ncs: If a YANG module had a default value for a leaf of type
    tailf:aes-cfb-128-encrypted-string or tailf:des3-cbc-encrypted-string,
    NCS would deadlock when loading the module. This has been fixed.

    (Issue tracker: #22160)

  - ncs: In some rare cases rollback pend2 files were not repaired when
    restarting. This has been fixed.

    (Issue tracker: #22708)

  - ncs: Previously when issuing a sync-from and device responds with
    invalid data according to the YANG, NSO could hang until the
    read-timeout is hit before reporting the issue. NSO will now report
    this right away.

    (Issue tracker: #22855)

  - ncs: Fix issue when a container has a list with the same name as the
    container. This issue only affected JSON.

    (Issue tracker: #23186)

  - ncs: NSO previously displayed operational data in
    dry-run/get-modifications. This has now been removed.

  - ncs: Improved performance when creating a device.

  - ncs: If the target list entry for Maapi.move() already existed, the
    method would fail with ERR_INTERNAL instead of ERR_ALREADY_EXISTS. This
    has been fixed.

    (Issue tracker: #23385)

  - ncs: enabled-by-default commit-queue device profile parameter was
    previously ignored. This has now been fixed.

  - ncs: tailf-kicker.yang file was missing from the YANG src directory.
    This has been fixed.

    (Issue tracker: #20917)

  - ncs: If successful authentications for users not defined in
    /aaa/authentication/users were done from multiple sources at a high
    rate, NSO could crash due to use of a C library function that was not
    thread safe. This has been fixed.

    (Issue tracker: #23212)

  - ncs: The tag 'replace' was not handled correctly in a template. When
    'replace' was set it was inherited to all nodes below. The correct
    implementation of replace is: act as if the tag 'delete' was set and
    then set the tag to 'merge'. This has now been corrected.

    (Issue tracker: #23523)

  - ncs: The code that handled NETCONF notifications received with the same
    timestamp was wrong. The key in
    /devices/device/netconf-notifications/received-notifications is a
    double key, with the second elem a sequence number.  This bug was
    introduced in 4.2.

  - ncs: Rollbacks were not created correctly when historySize was set to
    0. This has been fixed.

    (Issue tracker: #23653)

  - ncs: Previously NSO got an internal error when executing the touch
    action without a writable transaction. This has now been corrected.

    (Issue tracker: #23702)

  - ncs: The smart licensing tags for NSO production and NSO development
    were incorrect resulting in Cisco Smart Software Manager not
    registering usage correctly. This has now been fixed.

  - ncs: If /ncs-config/logs/audit-log-commit was enabled, and a
    modification caused the selection of a 'case' in a 'choice' where no
    'case' was currently selected, and a sibling 'case' had another
    'choice' as the topmost node, NSO would crash. This has been fixed.

    (Issue tracker: #23771)

  - ncs: NSO could not load a package tar archive if any files or
    directories in the archive had a uid or gid that was larger than 2^21.
    This has been fixed.

    (Issue tracker: #23961)

  - ncs: Validation of mandatory statements were not performed in nodes
    with when-statements transitioning from false to true. This has now
    been fixed.

    (Issue tracker: #23934)

  - ncs: When commit-queue was enabled by default NSO answered  with
    commit-queue data to a northbound client. NSO now only answers with
    commit-queue data if a northbound client explicitly has requested the
    transaction to be committed through the commit-queue.

  - ncs: ignore-refcount parameter for service un-deploy action did not
    take effect if used without other parameters such as no-networking or
    commit-queue. This has been fixed.

  - ncs: Previously an error was introduced where deletes of leafs with
    type empty did not work with a service template. This has now been
    fixed.

    (Issue tracker: #24163, #24239)

  - ncs: Leafs with tailf:hidden at the top level, or with only
    np-container ancestors, were not preserved when Maapi.loadConfig() was
    used with MAAPI_CONFIG_HIDE_ALL but without either of
    MAAPI_CONFIG_MERGE and MAAPI_CONFIG_REPLACE. This has been fixed.

    (Issue tracker: #23981)

  - ncs: NSO did not display a relevant error message when failed during
    sync-from and could in some cases leak connections towards CLI devices.
    This has been fixed.

  - C-API: The confd_decrypt() function did not return error info via
    confd_lasterr(). This has been fixed.

    (Issue tracker: #22683)

  - C-API: Several functions in the CDB and MAAPI C APIs would in some
    cases return CONFD_ERR without setting confd_errno/confd_lasterr().
    This has been fixed.

    (Issue tracker: #22869)

  - C-API: confd_pp_value() for values of type instance-identifier
    (C_OBJECTREF), confd_pp_kpath(), confd_format_keypath(), and
    confd_xpath_pp_kpath() could write a NUL character outside the given
    buffer if the buffer size was insufficient. This has been fixed.

  - C-API: The confd_val2str() and confd_str2val() functions did not
    support the YANG instance-identifier type. This has been fixed.

  - CDB: A performance issue with large transactions was discovered during
    the final testing of NSO 4.2. This has now been fixed.

  - CDB: Fix a bug where evaluating a must or when expression on a slave
    might crash.

  - CDB: Fix bug causing deadlock in CDB

  - CLI: Using tailf:cli-key-format with multiple keys for one list could
    result in a internal error. This has been fixed.

    (Issue tracker: #22240)

  - CLI: In some cases when expressions evaluating to false made default
    values not initializing properly. This has been fixed.

    (Issue tracker: #22611)

  - CLI: When doing sync-to, elements in lists with user defined order
    could be duplicated. This has been fixed.

    (Issue tracker: #22948)

  - CLI: Filtering of internal CLI data structure, when other parts of the
    system ask the CLI for a list of the nodes that are dependent on a
    certain node.

  - CLI: The CLI sometimes printed two no commands instead of one, in Cisco
    mode, when performing a diff between two transactions. This has been
    fixed.

    (Issue tracker: #23163)

  - CLI: When using current() in an xpath expression for the
    tailf:cli-diff-dependency expression an error might be reported. This
    has been fixed.

  - CLI: An XPath expression for tailf:cli-diff-dependency that was
    conditional might be triggered even when it wasn't supposed to. This
    has been fixed.

  - CLI: The CLI crashed when a leaf node and a choice node were within a
    parent choice node and the leaf node was set to a value and committed
    first. This has been fixed.

    (Issue tracker: #23005)

  - CLI: When using tailf:cli-diff-dependency and not using any
    trigger-on-set option the dependency would sometimes still trigger
    during value modification (no deletes). This has been fixed.

    (Issue tracker: #23557)

  - CLI: When modifying data and switching case on a choice on the same
    level some lines might be ignored when looking at the configuration
    change. This has been fixed.

  - CLI: The CLI would show non existing leafs with tailf:cli-show-no, even
    when the parent node did not exist. So that in some cases, the parent
    node was created as a result of showing the leaf. This has been fixed.

  - CLI: When listing oper data mixed with config data in a table
    structure, data rows could be omitted even when it shouldn't. This has
    been fixed.

    (Issue tracker: #23885)

  - Cluster: When an action in the device model was invoked on the NCS
    service node in cluster, in some cases the parameters would be
    improperly quoted. This has been fixed.

    (Issue tracker: #23355)

  - Java API: When executing NavuEventHandler in the shell, it would exit
    immediately after starting. This has been fixed.

    (Issue tracker: #23023)

  - Java API: Namespace declarations were missing in some cases when
    generating XML from ConfXMLParam array on Java side. This has been
    fixed.

  - Java API: Previously NavuLeaf.set() could not handle if the String
    argument contained more than 65536 characters. This has now been fixed.

    (Issue tracker: #23656)

  - Java API: Previously an exception was thrown when applying a device
    template during CDB upgrade from the Java API. This has now been fixed.

    (Issue tracker: #23599)

  - Java API: Previously when setting a leaf twice under a choice in a new
    list entry gave a NullPointerException in Navu. This is now fixed.

    (Issue tracker: #23980)

  - Java API: List keys of type enumeration were not properly resolved to
    their values in the String representation of ConfObjectRef or based on
    it ConfPath. This has been fixed.

    (Issue tracker: #23953)

  - Java API: NavuParser used to remove line breaks in provided XML. Now
    the line breaks are preserved.

    (Issue tracker: #24166)

  - JSON-RPC: Augmentations with top-level choice statements did break the
    get_schema jsonrpc method. This has been fixed.

    (Issue tracker: #22937)

  - JSON-RPC: The JSON-RPC method get_trans_conflicts was broken. It has
    been fixed.

    (Issue tracker: #23247)

  - JSON-RPC: The JSON-RPC method "subscribe_cdboper" could not handle
    subscriptions to paths adorned when statements. This has been fixed.

    (Issue tracker: #23246)

  - JSON-RPC: The JSON-RPC get_case method would fail with "internal error"
    if the current 'case' was augmented from a different YANG module. This
    has been fixed.

    (Issue tracker: #23878)

  - JSON-RPC: commit no-out-of-sync did not work using JSON RPC. This has
    been fixed.

    (Issue tracker: #24328)

  - JSON-RPC: Method set_value did not handle AAA rule create true and
    update false. This has been fixed.

    (Issue tracker: #22865)

  - NETCONF: The NETCONF server would terminate the session if an rpc or
    action that had a 'choice' without 'case's (e.g. due to all 'case's
    having been removed by deviations) in the 'input' was invoked. This has
    been fixed.

    (Issue tracker: #22358)

  - NETCONF: If a device model augmented another device model, NCS would in
    some case not read the augmenting nodes properly from the device. This
    bug has been fixed.

    (Issue tracker: #22363)

  - NETCONF: If a create-subscription request is received with stopTime
    earlier than startTime, an error is now generated, as defined in RFC
    5277.

    (Issue tracker: #22439, #23803)

  - NETCONF: Fixed bug where a NETCONF remove on a leaf-list returned an
    error rather than ok.

    (Issue tracker: #23276)

  - Packages: Erlang apps with dependencies to non-Erlang apps caused an
    internal error. This has been fixed.

  - Python API: When using the high level Python-API it was not possible to
    set the value of an instance-identifier. This has been fixed.

  - Python API: When implementing actions using the ncs.dp.Action.action
    decorator and the action was modeled inside a list, it was not possible
    to invoke the action outside of a transaction. This has been fixed.

  - Python API: Using Maagic to iterate over a list where at least one key
    was of type enumeration didn't work. This has been fixed.

    (Issue tracker: #24413)

  - REST API: Fix JSON bug where lists within lists with the same name were
    mixed up.

  - REST API: Fix JSON/REST bug where one would get an error response that
    an action request was missing non-mandatory leafs.

    (Issue tracker: #22284)

  - REST API: Fix problem when using leaflist as input for actions using
    the JSON format over the REST API.

    (Issue tracker: #22465, #24180)

  - REST API: Fix for bug in PUT over JSON/REST with sibling lists where
    the key has the same name and value, the last list was lost.

    (Issue tracker: #22524)

  - REST API: Fix for lost list keyword, when using a container with the
    same name as a list parent.

    (Issue tracker: #22573)

  - REST API: Configured custom-headers would not appear in oper data REST
    responses. This has been fixed.

    (Issue tracker: #23039)

  - REST API: Fix REST JSON Rollback format error.

    (Issue tracker: #23275, #24189)

  - REST API: The REST 'deep' query parameter no longer returns empty
    non-presence containers.

    (Issue tracker: #24032)

  - REST API: For a REST POST request, a list key value represented in json
    with a module prefix was not decoded correctly. This has now been
    fixed.

    (Issue tracker: #24004)

  - SNMP Agent: When processing get requests, the SNMP Agent would not
    validate key values derived from the OIDs in the request varbinds. This
    could lead to external data providers being invoked with invalid key
    values. This has been fixed.

    (Issue tracker: #22481)

  - SNMP Agent: If several updates were committed to the SNMP Agent's
    configuration (/snmp/community, /snmp/vacm etc.) in moderately quick
    succession, NCS could enter a state where the last transaction never
    finished, while being constantly runnable and slowly allocating memory
    until stopped. This has been fixed.

    (Issue tracker: #23057)

  - SNMP Agent: It wasn't possible to use
    tailf:ipv4-address-and-prefix-length and inet:ipv4-prefix as list keys
    together with snmp. This has now been fixed.

    (Issue tracker: #23674)

  - Toolchain: ncsc would in some cases complain that given
    tailf:dependencies were wrong in a device model if the XPath expression
    contained absolute paths. This bug has been fixed.

  - Toolchain: When using lists where all keys were leafrefs, it was
    possible to have some of those leafrefs pointing to non existing
    configuration. NSO would then accept list instances that were faulty,
    because it skipped validation. This has been fixed.

    (Issue tracker: #20645)

  - Toolchain: Due to incomplete type information from the YANG compiler,
    the SNMP Agent, as well as the SNMP NED, could not handle value
    translation between non-local index objects in a MIB and a leafref in
    YANG when the types were enumerations. This has been fixed.

    (Issue tracker: #21184)

  - Toolchain: For leafref type leafs (and leaf-lists), pointing to other
    leafrefs, the YANG compiler did not properly validate default values to
    the final leaf's or leaf-list's type. This has been fixed.

    (Issue tracker: #21453)

  - Toolchain: If more than one 'must' or 'when' statement was annotated in
    one annotate statement, only the last one would apply.  This bug has
    been fixed.

    (Issue tracker: #22262)

  - Toolchain: Added new statement tailf:override-auto-dependencies,
    optionally used in 'must' and 'when' expressions.

    (Issue tracker: #22510)

  - Toolchain: The ncsc compiler crashed when a prefix:keyword tuple
    appeared in an error (instead of only keyword, that worked before),
    this has been fixed.

  - Toolchain: The CLI-extension related compiler warnings for the
    combination cli-sequence-commands + cli-compact-syntax were too strict,
    and has been relaxed.

  - Toolchain: The YANG compiler did not allow 'grouping', 'if-feature',
    and 'typedef' as substatements to 'tailf:action'. This affected also
    'rpc' in device models, since they are transformed to 'tailf:action'
    under /devices/device/rpc when compiled for NCS. This has been fixed.

    (Issue tracker: #23221)

  - Toolchain: The YANG compiler did not apply the result of evaluating the
    'if-feature' substatement for 'augment', i.e. the augment was done
    regardless of which features were supported. This has been fixed.

    (Issue tracker: #23411)

  - Toolchain: The combination of tailf:cli-custom-range-enumerator and
    tailf:cli-suppress-mode resulted in an unnecessary compiler warning.
    This warning has been removed.

    (Issue tracker: #23326)

  - Toolchain: The YANG compiler would allow a deviation to remove the
    default 'case' in a 'choice', or change the default to a 'case' that
    did not exist, causing runtime errors in some cases of data retrieval.
    This has been fixed - now such deviations are rejected by the compiler.

    (Issue tracker: #23611)

  - Toolchain: The XML input to an rpc defined with tailf:raw-xml was
    restricted to have at most one toplevel element. This has been fixed.

    (Issue tracker: #23703)

  - Toolchain: If a node below the target of a tailf:symlink had a
    tailf:hidden substatement, the corresponding node in the symlink source
    tree was not hidden. This has been fixed. Note: tailf:symlink is
    deprecated since NCS-2.3.

    (Issue tracker: #23819, #23707)

  - Toolchain: If a leaf in a YANG module was defined with a type imported
    from another module, and had a tailf:info substatement for the type
    statement, the type information for the leaf would be incomplete,
    causing e.g. 'ncsc --emit-mib' to generate an incorrect SYNTAX of
    ConfdString. This has been fixed.

    (Issue tracker: #23860)

  - Toolchain: The YANG compiler did not allow 'reference' and
    'description' as substatements to 'import' and 'include' for YANG 1.1
    (new in 1.1). This has been fixed.

  - Toolchain: An 'augment' statement with a valid path but invalid
    semantics, e.g. augmenting a leaf or a leaf-list, or augmenting
    something other than a 'choice' with a 'case', would cause the YANG
    compiler to fail with "internal error" instead of reporting the
    problem. This has been fixed.

  - Toolchain: The YANG compiler would fail with "internal error" if
    multiple revisions of a module were imported (directly or indirectly).
    This has been fixed.

  - Toolchain: The yanger tree plugin has been fixed so that it prints
    empty action output the same way as the pyang tree plugin does.

  - Web UI: Did not display access denied error message. This has been
    fixed.

    (Issue tracker: #22865)

  - Web UI: The JSONRPC method get_leafref_values failed when lists with
    multiple keys were referred to in combination with 'must' statements.
    This has been fixed.

    (Issue tracker: #20299)

  - Web UI: Key less lists did not load data. This has been fixed.

    (Issue tracker: #23165)


NSO-4.2 [May 26, 2016]
======================

Removals:

Non-backwards compatible enhancements:

  - ncs: NEDs can now specify an option in their package-meta-data.xml if
    the NED requires to/from transaction to work properly. If this option
    is set, a device using the NED will be rejected when a change is
    committed through the commit queue.

  - ncs: /devices/device/state/oper-state leaf is now unknown as default
    when we never have connected to the device.

    (Issue tracker: #21227)

  - ncs: The tailf:aes-cfb-128-encrypted-string and
    tailf:des3-cbc-encrypted-string YANG types now use a random initial
    vector for the encryption. Existing CDB data of these types will be
    upgraded (i.e. re-encrypted) automatically. Once upgraded, automatic
    downgrade is possible to NSO-4.1.2 or later in the 4.1 branch, or
    NSO-4.0.4 or later in the 4.0 branch.

    NOTE: The "prefix" of the encrypted value for these types has been
    changed, to reflect the new implementation and to make it possible to
    support upgrade/downgrade: tailf:aes-cfb-128-encrypted-string now uses
    "$8$" and tailf:des3-cbc-encrypted-string now uses "$7$".

    (Issue tracker: #18291, #19898, #20182, #21695)

  - ncs: NSO now has improved uniformity between sync-to/sync-from and
    compare-config result messages.

    /devices/compare-config now either outputs a leaf diff with the
    resulting diff or a leaf info with additional information about the
    result.

    (Issue tracker: #21829)

  - ncs: Previously dry-run in NSO was restricted to only display device
    configuration. It now show changes to all parts of the NSO config tree.
    commit and the following actions now also has a consistent output
    format for dry-run:

    * /devices/check-sync

    * /devices/deep-check-sync

    * /devices/re-deploy

    * /devices/get-modifications

    * /devices/commit-dry-run

  - CLI: Introduced compiler warnings for incompatible
    tailf:cli-extensions, and introduced recommendations for when certain
    combinations should be used.

  - Java API: NSO now supports if-feature in the yang model to choose
    behaviour depending on the device connected to.

    Changed the name of /devices/device/module/features to
    /devices/device/module/feature. Changed the name of
    /devices/device/module/deviations to /devices/device/module/deviation.

  - Python API: The str() function of _ncs.HKeypathRef didn't handle mixed
    namespaces. This has been fixed.

  - Toolchain: ncsc --ncs-compile-bundle now handles modules that have
    annotations or deviations for other modules. See the ncsc(1) manual
    page for details.

    (Issue tracker: #21591, #22114)

  - Toolchain: ncsc --ncs-compile-bundle will now ignore NCS-internal
    modules, as well as modules annotating, deviating, or augmenting such
    modules. See the ncsc(1) manual page for details.

    (Issue tracker: #21591, #22114, #22183)

Enhancements:

  - ncs: If an ongoing NETCONF notification session terminates, NSO now
    tries to reconnect immediately, and only if that fails, waits for
    'reconnect-interval' seconds before trying to reconnect again.
    Previously, NSO would always wait before trying reconnecting.

  - ncs: NSO is now integrated with Cisco Smart Licensing.

  - ncs: Added support for service reconciliation. See NSO
    Development/Service Discovery and the YANG model:
    tailf-ncs-services.yang

    (Issue tracker: #20625)

  - ncs: Rework of how the reverse diff set is calculated resulted in a
    performance gain of 10% for large change sets.

  - ncs: If the flag 'debug service' is set in the CLI when the service
    code is run, debug printout is shown together with warnings for
    potentially erroneous service code. See the NSO Development guide:
    Service Caveats.

  - ncs: If enabled, NSO is starting a C program that loads the schema into
    shared memory. This is done in the background while the system is
    starting up. C/Python code can then make use of the maapi function
    get_schema_file_path() to get hold of the file path leading to the
    shared memory, and then use the mmap_schemas() function to load the
    schema from the shared memory. For a Python VM started from a Python
    package, the environment variable: MMAP_SCHEMA_PATH will point to the
    file path. The generated Python code, generated from the NSO package
    skeleton generator, handles this automatically and reverts to loading
    over a MAAPI socket if the functionality is disabled.

  - ncs: suppress-positive-result parameter has been added to check-sync
    and deep-check-sync actions in grouping service-data

    (Issue tracker: #16826)

  - ncs: It is now possible for Reactive FASTMAP services to use plan-data.
    This enables standardized progress reporting. For more info see the
    User and Development Guides.

  - ncs: A new action 'touch' has been introduced on services. When a
    number of services have been touched, committing them will act as a
    're-deploy shallow' of them all in the same transaction. See the YANG
    model tailf-ncs-services.yang

  - ncs: The Java method putQuoted() for template variables quotes the
    string with single quotes unless the string to be quoted contains
    single quotes, then the string is quoted by double quotes and any
    double quotes in the string is replaced by single quotes.

    This is because XPath has no quoting mechanism, a string is enclosed
    either by single quotes or by double quotes.

  - ncs: A new reactive-re-deploy service action has been introduced to be
    used in conjunction with the Reactive FASTMAP pattern. See development
    guide for more information

  - ncs: NETCONF notifications, when stored as CDB operational data, are
    now possible to use together with the Kicker functionality.

  - ncs: Added support for iterations over node-sets in templates.

    The attribute foreach="{XPath expression}" can be used on any node in
    the template. When used with the attribute when="{...}" the when
    expression is evaluated before the foreach attribute. See the user
    guide for examples.

  - ncs: NSO can now enable the commit queue as default per device and
    device-group. A transaction containing a device with the commit queue
    enabled as default can still be successful even if the device added to
    the commit-queue will fail. If the transaction fails in the prepare
    phase the whole transaction including the devices enabled as default
    for the commit queue will be aborted.

    (Issue tracker: #21919)

  - ncs: Python packages will restart their Python VM at 'package
    redeploy'.

  - ncs: Rework of the XPath evaluation in templates. Depending on the
    usage up to 20% lower execution times for a service has been noted.

  - ncs: compliance/reports/report/service-checks/historic-changes as been
    added to compliance report configuration to be able to see historic
    changes on specified services.

  - ncs: It is now possible to start transactions toward the
    PRE_COMMIT_RUNNING datastore in MAAPI.

  - ncs: Kicker, a declarative notification mechanism, is now available.
    For more info see the YANG model tailf-kicker.yang and the example.

  - ncs: NSO can now delete a specific leaf and leaf-list element based on
    the value with a template.

  - ncs: Changes to logging behaviour:

    * Start and stop of logging is logged

    * Changes to logging configuration, e.g., enabling/disabling of log
    streams, changes of log stream targets, are logged.

    * User names for failed logins are withheld for most cases where we
    can't be sure that the username exists. This is true for non local
    authentication system such as PAM and external auth.

  - CDB: The semantics of transactions have changed so that it is possible
    to write both config true and config false data in the same
    transaction.

  - CLI: When using large data sets that have a lot of
    tail:cli-diff-dependency extensions, or when using leafref:s towards
    big lists, it is possible to get timeouts when displaying configuration
    changes or performing commits. The performance surrounding this has
    been improved.

    (Issue tracker: #22205)

  - CLI: Using large ordered-by-user lists and applying any operation (add,
    delete, modify) would take exponentially long time to execute. The
    performance surrounding this has been increased.

    (Issue tracker: #21905)

  - CLI: The C-style now  doesn't produce comments similar to /* */ but
    rather !-comments as is expected by normal Cisco-IOX CLI. It can still
    handle the type comments.

  - CLI: New CLI extension called tailf:cli-suppress-quotes added. Forces
    data nodes to not add any wrapping quotes even if special characters
    such as white space or quote marks are used. Instead all "special"
    characters are just escaped.

  - CLI: A new CLI command has been added to the C-, I- and J-style CLI.

    xpath [ctx <path>] (eval | must | when) <expression>

    Evaluate an XPath expression. A context-path may be given to be used
    as the current context for the evaluation of the expression. If no
    context-path is given, the current sub-mode will be used as the
    context-path. The pipe command 'trace' may be used to display
    debug/trace information during execution of the command.

    Note that this command will only be available if the CLI session
    setting 'devtools' has been set to 'true'.

    eval - Evaulate an XPath expression.

    must - Evaluate the expression as a YANG 'must' expression.

    when - Evaluate the expression as a YANG 'when' expression.

  - Cluster: The performance has been improved in a case when a remote
    device is added or removed on a NSO node in cluster environment.

    (Issue tracker: #22577)

  - Documentation: The NSO release is now cryptographically signed, and
    delivered as a self-unpacking archive which includes the installer and
    the signature. Unpacking the archive, using e.g.the command

     $ sh nso-4.2.linux.x86_64.signed.bin

    will extract the installer and verify the signature. See the NSO
    Installation Guide for further details.

  - Documentation: A chapter describing NSO Deployment has been added to
    the NSO Administration Guide.

    (Issue tracker: #19895)

  - Java API: When the getNextObjectList callback returns all remaining
    objects in a list, the library code will now mark the response to NSO
    as 'complete'. This will save one round-trip at the end of the list in
    the general case, and more importantly, if the entire list is returned
    in one call, it will now stay in the object cache until it times out.
    Also, the data provider can now override the object cache timeout for
    an individual response, by returning an NextObjectList<ConfValue[]>
    object from the getNextObjectList callback.

    (Issue tracker: #22177)

  - Java API: The snmp4j version used by the snmp-notification-receiver has
    been updated to version 2.4.1

  - Java API: CdbSubscription - a new Flag type CdbSubscrConfigFlag has
    been added to control the CDB subscription. See javadoc for more
    information.

  - Java API: NavuContext(Cdb) and NavuContext(CdbSession) has been
    deprecated. Full support for writable-oper transaction via MAAPI has
    been introduced in Maapi. All NavuCdbXXXSubscriber functionality has
    been deprecated, instead plain Cdb subscribers together with
    KeyPath2NavuNode.getNode() to obtain the Navu tree is recommended.
    Cdb(String name, SocketChannel channel) has been deprecated, instead
    Cdb using java.io.Socket is promoted.

  - NETCONF: NSO-specific NETCONF parameters are now documented in the
    chapter "The NCS NETCONF server" in "NSO Northbound APIs".

    (Issue tracker: #21758)

  - Packages: Updated the ncs-project command to include an option to
    export a project as a bundle.

    The bundle is configured in the project-meta-data.xml.

    A bundle can be extracted using tar, or used as a starting point for
    another ncs-project. When using a bundle as a starting point a new flag
    is used together with the ncs-project create command. See the
    ncs-project(1) manual page for details.

  - Packages: It is now possible to select SSH session type (exec request
    or shell) with discovery package.

    (Issue tracker: #22421)

  - Python API: New high-level Python API. For more information, see "NSO
    4.2 Development" and run pydoc ncs.

  - Python API: The ncsc command with --emit-python option now creates an
    __init__.py module in the output directory. This will correct the
    handling of included python packages where the namespace directory
    wasn't added to PYTHONPATH correctly before.

  - REST API: Added feature to set rollback labels and comments using the
    REST URI. Note that rollbacks must be enabled for this feature.

    (Issue tracker: #21868)

  - Toolchain: NCT: The name of the host from the hostsfile is now printed
    for all commands where it is applicable.

  - Toolchain: The contents of compiled MIB files (.bin files) are now
    compressed, in order to reduce disk space utilization.

    (Issue tracker: #12800, #17607)

  - Toolchain: It is now possible to compile an NSO service model with ncsc
    --ncs-compile-bundle/--ncs-compile-module, and thus one NSO can manage
    a service in another NSO (configured as a device for the first NSO).
    Limitation: The service model must not augment a built-in NSO model,
    e.g. via /ncs:services.

  - Toolchain: An out-of-sync alarm is now raised when a commit fails due
    to a device being out-of-sync

    (Issue tracker: #21181)

  - Toolchain: If a device model uses tailf:alt-name, this statement is now
    preserved in the /devices/template tree.

    (Issue tracker: #22253)

  - Toolchain: NSO now supports YANG 1.1, with some exceptions.  See the
    man page ncsc(1) for details.

Non-backwards compatible corrections:

  - ncs: After extensive analysis we have come to the conclusion it is not
    possible to combine both pre_lock_create and create callbacks.

    An error is now returned if service code tries to register both these
    callbacks.

    (Issue tracker: #21716)

  - ncs: It was possible to invoke actions via MAAPI with a path that
    didn't exist. This has been fixed.

  - ncs: Renamed input parameter supress-positive-result ->
    suppress-positive-result for several actions in tailf-ncs-devices.yang
    and tailf-ncs-services.yang

    (Issue tracker: #19618)

  - ncs: Previously if there were any commits not updating the stored
    transaction id value for a device in NSO the following check-sync
    action for this device would return out-of-sync. This has been changed
    so the stored transaction id is cleared and check-sync returns unknown.

    (Issue tracker: #21448, #22074)

  - CLI: The setting inheritPaginate used to be default set to false. Thus
    pipe commands didn't automatically inherit the pagination from the
    originating command by default. This has been modified to default to
    true since it was more intuitive from most users. Remember to set this
    setting to false in case this is specifically the behaviour that is
    expected.

  - Toolchain: If a 'bit' statement had a 'position' substatement that
    assigned a lower value than the current highest, the YANG compiler
    would assign incorrect values for any subsequent 'bit' statements that
    did not have a 'position' substatement. This has been fixed.

Corrections:

  - ncs: NSO now restores a deleted leaf-list value when the service gets
    deleted.

    (Issue tracker: #21786)

  - ncs: Service data was not restored when service is deleted/re-deployed
    and the result of a YANG 'when' expression is changed. This has now
    been corrected.

  - ncs: Setting a leaf in a template which is shadowed by a false YANG
    'when' statement lead to an internal error. This has been corrected.

    (Issue tracker: #20481)

  - ncs: Public-key authentication towards IOS devices failed with the
    error message "Unexpected SSH message (type 60)". This has been fixed.

    (Issue tracker: #22479)

  - ncs: Using deep-check-sync for devices with 'trim' default handling
    mode sometimes caused false negatives. This has now been fixed.

    (Issue tracker: #22801)

  - ncs: Fix defect where alarms were not properly synced in a HA setting.

  - ncs: Documentation has been updated to stress template names reside in
    a global name space. The tool 'ncs-make-package' now generates template
    files conforming to the suggested naming convention.

    (Issue tracker: #21324, #21783)

  - ncs: Original data below nodes with YANG 'when' expressions where not
    restored when a service was deleted if the result of the 'when'
    expression changed due to service code.

  - ncs: NSO previously had a inconsistency in the context for key
    selection in template. If the key consists of multiple values with
    different paths the context should not change. This was not always the
    case. This has now been fixed.

    (Issue tracker: #22648)

  - ncs: The Web UI would in some cases generate audit event notifications
    with usid 'undefined' instead of an integer value. This has been fixed.

    (Issue tracker: #22554)

  - ncs: sync-from could fail when used with several devices exhibiting
    different default handling mode. This has now been fixed.

    (Issue tracker: #21768)

  - ncs: Fixed bug in handling of choice/case in devices with default
    handling mode 'trim' .

  - ncs: NSO packages allowed for several Upgrade components to be
    specified but only run the last one. NSO now run all specified Upgrade
    components in order at upgrade.

    (Issue tracker: #21050)

  - ncs: NSO previously didn't close bad sessions when giving up retrying
    after several failed lock attempts during initialize call. This is now
    fixed.

    (Issue tracker: #21755)

  - ncs: An interrupt message used to be logged at ERROR level when
    executing "commit dry-run". It has now been changed to INFO level,
    because it is considered normal operation.

    (Issue tracker: #22451)

  - ncs: Dependencies such as leafref's were in some cases not correctly
    handled when rolling back configuration of a generic-ned. This has been
    fixed.

  - ncs: If two or more transactions were committed at the same time, and
    one of the transactions had the global lock on 'running', there was a
    race condition that could lead to a deadlock.  This bug has been fixed.

  - ncs: Stacked services with multiple keys did not work. This has been
    corrected.

  - ncs: In some APIs e.g. JAPI there exist a Maapi.attach without an USid
    argument. In certain circumstance this could deadlock. This has been
    fixed.

  - AAA: A race condition in PAM authentication could cause NSO to crash
    when a PAM-authenticated user session terminated. This has been fixed.

  - CDB: If a CDB client started a session using LOCK_WAIT during CDB
    compaction the client would hang forever, and prevent any further write
    transactions. (This could also happen to internal CDB clients, which
    would lock up the system).  This has been fixed.

    (Issue tracker: #21643)

  - CDB: Fix bug where synchronous synchronisation of operational data in
    an HA setting did not work.

    (Issue tracker: #22153)

  - CLI: tailf:info was lost for augmented actions. This has been fixed.

    (Issue tracker: #20935)

  - CLI: Data nodes mounted at same location from different yang modules
    could strip out their namespace although it was necessary to access
    them. This has been fixed.

  - CLI: Dependencies, as defined by tailf:cli-diff-dependency, within a
    list that was annotated with tailf:cli-recursive-delete would not be
    triggered if the list was deleted. This has been fixed.

    (Issue tracker: #22700)

  - CLI: Reordering instances in an 'ordered-by user' list would in some
    cases, and when dependencies were triggered, result in an incorrect
    output from the C-style command 'show configuration'. This has been
    fixed.

    (Issue tracker: #20709, #20675, #20698)

  - CLI: When listing information on lists or accessing a list elements
    using range expressions the CLI would sometimes not verify if the
    actual elements existed. This has been corrected.

    (Issue tracker: #22379)

  - CLI: When using a dp, and doing a show command on lists with partial
    keys in the CLI, the CLI would crash. This has been fixed.

    (Issue tracker: #22774)

  - CLI: Sometimes when using rollbacks the diff for the configuration
    change produced in the CLI didn't notice if a change was a
    non-modification. This could result in bad diff-sets and NED
    CLI-devices becoming out of sync. This has been fixed.

  - CLI: After deleting a list annotated with tailf:cli-recursive-delete
    and tailf:cli-diff-dependency,  the command 'commit dry-run outformat
    native' would display the configuration diff in an incorrect sequence
    of commands. This has been fixed.

  - CLI: Deleting a case in a choice containing a default case would in
    some cases not result in 'no' command when running the command 'commit
    dry-run outformat native'. This has been fixed.

  - CLI: Combining tailf:cli-multi-word-key extension with
    tailf:cli-expose-key-name extension would result in bad tab-completed
    lines in the CLI. This has been fixed.

    (Issue tracker: #21804)

  - CLI: When using tail:cli-key-format extension and combining keys the
    table header when displaying the data as a table wouldn't reflect that
    multiple keys are involved. This has been corrected by showing all key
    names applicable to one row separated by slashes.

    (Issue tracker: #22480)

  - CLI: Buffer overflow (pasting in more than 1024 characters) when
    executing an osCommand from the CLI for every time but the first would
    lead to the CLI hanging. This has been fixed.

    (Issue tracker: #19555)

  - Erlang API: If the fun passed to one of the functions
    econfd_maapi:diff_iterate/4,5, econfd_maapi:keypath_diff_iterate/5,6,
    econfd_maapi:iterate/6, or econfd_cdb:diff_iterate/5 crashed, the crash
    report did not include the relevant stack trace. This has been fixed.

  - Java API: In CdbSubscriber the method with signature
    subscribe(CdbSubscriptionType, int, int, fmt, Object ...args) did not
    handle the args parameter. This has been fixed.

  - Java API: NavuParser did not correctly handle the case when a child
    node had the same name as its parent. This has been fixed.

    (Issue tracker: #21174)

  - Java API: registerAnnotatedXXXCallback did not support of registration
    of a default range (null value). This is fixed.

    (Issue tracker: #22306)

  - JSON-RPC: The method delete_trans did not work properly. This has been
    fixed.

    (Issue tracker: #22304)

  - JSON-RPC: An "Invalid configuration mode" error occurred in the
    "new_write_trans" method when the candidate was enabled. This has been
    fixed.

    (Issue tracker: #22821, #22841, #23043)

  - JSON-RPC: The 'get_schema' method behaved badly when cross module
    leafref statements pointed to top level list statements. This has been
    fixed.

    (Issue tracker: #22246)

  - JSON-RPC:  Fixed support for typeless leafs in action output params.

    (Issue tracker: #22325)

  - JSON-RPC: The method 'subscribe_cdboper' should have worked with
    keypaths that contained lists with missing keys, but instead it
    required them. This has been fixed.

  - JSON-RPC: If a leaf is being polled in the Web UI (through the
    'subscribe_poll_leaf' method), and then deleted via e.g. the CLI, the
    session crashes and an "invalid_sessionid" error is written to the
    developer log. This has been fixed.

    (Issue tracker: #22556)

  - NETCONF: NSO device manager allows NETCONF devices to fail in
    discard-changes in initialize. This is because some devices does not
    allow to discard-changes on an empty candidate.

    (Issue tracker: #19625)

  - NETCONF: Under certain circumstances timezones with half offsets, such
    as Indian Standard Time, was not handled correctly. This has been
    fixed.

    (Issue tracker: #22518, #22513)

  - NETCONF: NSO for device with startup + running configuration previously
    didn't fetch transaction id with NETCONF after a successful commit
    which caused the device to be seemingly out-of-sync. This has now been
    corrected.

    (Issue tracker: #22294)

  - NETCONF: Additional cases where an augmented node had to be sent after
    all non-augmented nodes in NETCONF have been fixed.

    (Issue tracker: #22425)

  - NETCONF: Deletion of the last node in a non-default case in a choice
    with a default case did not emit a deleted operation for the node. This
    has now been fixed.

  - Packages: Erlang apps with dependencies to non-Erlang apps caused an
    internal error. This has been fixed.

  - REST API: Using the /api/transaction resource, the transaction was
    committed which it should not be. This has been fixed so that there is
    no commit when using the resource /api/transaction, and it is up to the
    caller to validate and commit the transaction.

  - REST API: Fixed problem where JSON input containing double quotes (")
    were incorrectly handled.

    (Issue tracker: #22356)

  - REST API: Default values are now shown via the Query API for result
    type 'inline' by using the query argument: with-defaults=report-all

    (Issue tracker: #21969)

  - REST API: Fix JSON bug where lists within lists with the same name were
    mixed up.

  - REST API: Fix for problem in handling namespaces for JSON array.

    (Issue tracker: #19599)

  - REST API: When having a 'comma' as a key-value, or part of a key-value,
    you could not differentiate a key-value and key delimiter in the URI,
    leading to issues with the method GET, PUT and PATCH on key instances
    with commas as keys. This has been fixed. NOTE: in the URL, use ',' as
    a delimiter and "%2C" if a comma is part of the key-value; e.g. a list
    with key1 value 'foo,bar' and key2 value "volvo" has the URI
    '/path/to/list/foo%2Cbar,volvo'.

    (Issue tracker: #22411)

  - REST API: Fixed error for parsing of escaped characters such as \ and /
    in JSON.

    (Issue tracker: #22356)

  - REST API: Newlines in some JSON error messages has been removed.

    (Issue tracker: #22601)

  - REST API: Passwords, sent over HTTP via the Authorization header, may
    now contain colon characters.

    (Issue tracker: #22553)

  - REST API: If you added a package with new namespaces, the REST server
    would not recognize these changes unless you restarted NSO. This has
    been fixed.

    (Issue tracker: #17106, #17282)

  - REST API: Fix bug where the 1st request was lost from the trafficLog.

    (Issue tracker: #21489)

  - SNMP Gateway: NSO's SNMP NED, as well as its SNMP Agent could not
    translate values between MIB objects with the
    HCNUM-TC::CounterBasedGauge64 syntax and a yang:gauge64 leaf. This has
    been fixed.

    (Issue tracker: #21187)

  - Toolchain: ncsc and yanger -f yang now handles multiple imports of the
    same module with different prefixes.

    (Issue tracker: #22088)

  - Toolchain: ncsc --ncs-compile-bundle/--ncs-compile-module did not
    detect invalid paths in 'when' and 'must' expressions. This has been
    fixed.

    (Issue tracker: #21409, #22103, #21892)

  - Toolchain: NSO needs to have a unique prefix for each loaded YANG
    module, which is used e.g. in the CLI and in the APIs. By default the
    prefix defined in the YANG module is used, but this prefix is not
    required to be unique across modules. This has been fixed by adding a
    -p/--prefix option to 'ncsc' for YANG compilation, making it possible
    to give a different prefix, or request that the module name is used as
    the prefix. See the ncsc(1) manual page for details.

    (Issue tracker: #21427, #21591)

  - Toolchain: Fixed dependencies in Makefiles produced by
    ncs-make-package: compiling Java classes depends on symbols created
    when compiling data models.

    (Issue tracker: #21273)

  - Toolchain: The compiler could not compile tailf:cli-boolean-no
    statements inside top-level leafs. This has been fixed.

  - Toolchain: If a circular dependency was detected in a leafref path
    inside an augment to a different module, the YANG compiler would fail
    with "internal error" instead of reporting the problem. This has been
    fixed.

  - Toolchain: The CLI-extension related compiler warnings for the
    combination cli-sequence-commands + cli-compact-syntax was too strict,
    and has been relaxed.

  - Toolchain: If a leaf had a type that was derived with a restriction
    from a typedef in another module, the default (if any) for the typedef
    was not applied to that leaf. This has been fixed.

  - Toolchain: If a YANG module had a leafref to another node in the same
    module, which in turn was a leafref to a different module, package
    load/reload could fail, claiming that the target of the first leafref
    didn't exist. This has been fixed.

    (Issue tracker: #20566, #20615)

  - Toolchain: When using lists where all keys were leafrefs, it was
    possible to have some of those leafrefs pointing to non existing
    configuration. NSO would then accept list instances that were faulty,
    because it skipped validation. This has been fixed.

    (Issue tracker: #20645)

  - Toolchain: ncsc would fail to compile a device module with an
    if-feature statement that referred to a feature defined in an imported
    module.  This bug has been fixed.

    (Issue tracker: #22237)

  - Toolchain: ncsc would in some cases complain that given
    tailf:dependencies were wrong in a device model if the XPath expression
    contained absolute paths. This bug has been fixed.

  - Toolchain: If a device module had an RPC with a typedef from another
    YANG module, and the typedef was a leafref, NSO would crash when
    loading the device module. This has been fixed.

    (Issue tracker: #21591)

  - Web Server: Using Chrome 50 it was not possible to login to the NSO web
    server. The reason for this was
    https://developers.google.com/web/updates/2016/03/chrome-50-deprecation
    s?hl=en#remove-insecure-tls-version-fallback which removes Insecure TLS
    Version Fallback. This has been fixed.

    (Issue tracker: #22605, #22719, #22723, #22889, #22944)

  - Web Server: The CGI support in the Web UI crashed if only a read
    transaction had been created, i.e. no write transactions. This has been
    fixed.

    (Issue tracker: #22504)

  - Web UI: If a user logged in to the Web UI and then logged out followed
    by a package reload NSO stopped working. This has been fixed.

    (Issue tracker: #22665, #22729)

  - Web UI: If a user navigated with the breadcrumb to the config of a
    device, the wrong container was displayed. This has been fixed.

    (Issue tracker: #21381)

  - Web UI: Some commit error message details was not displayed to the
    user. This has been fixed.

    (Issue tracker: #22603)


NSO-4.1.2.1 [April 22, 2016]
============================

Corrections:

  - Java API: It was not possible to return a value for a leaf in a
    container in a list entry from a GET_NEXT_OBJECT callback in an external
    data provider in Java. This has been fixed.

    (Issue tracker: #22129)


NSO-4.1.2 [April  2, 2016]
==========================

Non-backwards compatible enhancements:

  - C-API: The libconfd library for the C API, and consequently the
    ncs_load, ncs_cmd, and ncs-maapi programs, could not handle data models
    that were more than 40 levels deep. This limit has now been raised to
    60 levels. Applications using the C API must be recompiled.

  - CLI: Introduced compiler warning for the case when
    tailf:hide-in-submode is used in a container without also using
    tailf:flatten-container.

    (Issue tracker: #20733)

  - JSON-RPC: for security purposes, rate limiting has now been added to
    each and every JSON-RPC session. By default only 1 million JSON-RPC
    requests are allowed within the hour, but this is configurable under
    /ncs-config/webui/rate-limiting. Set it to 0, if you want to turn it
    off.

  - NETCONF: If the idle timeout in NETCONF is changed, existing sessions
    are no longer terminated.  Instead they keep their existing timeout.

    (Issue tracker: #21953)

Enhancements:

  - ncs: Attempting to perform state changing operations, e.g., apply, on
    attached transactions via MAAPI is now caught and an error is returned
    rather than causing an internal error.

    (Issue tracker: #20781)

  - ncs: When using the query api and requesting the results in tag-value
    format, the query api would issue an extra lookup of key leaf elements
    towards the dataprovider. This extra request has been optimized away.

  - ncs: NCS package skeletons for java services now only checks the
    devices of the service instead of all.

  - ncs: The new YANG extensions tailf:meta-data and sub-statement
    tailf:meta-value values are now accessible via the schema API:s in
    Java, C, Erlang, Python and JSON-RPC.

  - C-API: Schema loading for modules with many type definitions has been
    optimized.

  - CLI: The CLI (Juniper, XR and IOS) has been improved to allow piping
    data from the show command to the display command in several places
    previously not possible. For instance, it is now possible to use
    display targets for statistics as well as configuration data. In
    addition to json, xml and xpath, the new target keypath has been added.

  - CLI: The speed of 'commit dry-run outformat native' has been improved
    in situations where there is an extensive usage leafrefs.

    (Issue tracker: #21564)

  - CLI: The speed of 'commit dry-run outformat native' has been improved
    in situations where there is an extensive usage of the YANG extension
    tailf:cli-diff-dependency.

    (Issue tracker: #21440)

  - CLI: Tags can now be displayed for non-presence and presence
    containers. To activate this for non-presence containers change the
    confd.conf setting displayNonPresenceAttributes from its default value
    false to true.

    (Issue tracker: #19008)

  - Erlang API: CDB_DONE_OPERATIONAL subscription synchronization reply was
    missing in the econfd API. It has been added.

    (Issue tracker: #21697)

  - Java API: MAAPI (C, Erlang, Java, Python APIs) and NAVU (Java API) has
    been extended with a FASTMAP version of the setValues method. The new
    sharedSetValues method set arbitrary sub-elements of a container
    element in one bulk operation, and also create refcounts and
    backpointers to all those elements, from NCS FASTMAP code.

    (Issue tracker: #21378)

  - JSON-RPC: you can now create a transaction within a read-write
    transaction, by passing a th parameter.

  - JSON-RPC: start_query and query methods now accept a keypath as the
    "path" parameter instead of the "xpath_expr" parameter.

  - JSON-RPC: the "abort" method will now return an error if trying to
    abort an ongoing "run_action" method related to an action which is not
    interruptible.

  - JSON-RPC: calling set_value with value null acts as a replacement of a
    delete call.

  - JSON-RPC: a new method "append_list_entry" is now available for
    leaf-lists as a convenient way to append rather than get and set
    leaf-lists' contents. See JSON-RPC documentation for a complete
    description.

    (Issue tracker: #20086)

  - JSON-RPC: the "commit" method now supports a dryrun=FORMAT flag, where
    FORMAT can be xml, cli or native.

    (Issue tracker: #21810)

  - JSON-RPC: a new method "copy_list_entry" is now available, as a
    counterpart to remame_list_entry, taking a "from_path" and "to_keys"
    input parameters. See JSON-RPC documentation for a complete
    description.

    (Issue tracker: #20750)

  - JSON-RPC: the developer log will now contain entries for JSON-RPC
    requests with method names that are either deprecated or non-canonical,
    where by canonical we understand the method name used in the JSON-RPC
    documentation.

  - JSON-RPC: the set_value method can now take a boolean parameter
    "dryrun" in order to try to set the value of the leaf, but in case of
    success revert the value. This can be used to check if a value is valid
    or not, before actually setting it.

  - REST API: a /api/logout resource has been added that will always reply
    with status code "401 Unauthorized", thus triggering browsers to reset
    credentials for the REST API realm.

    (Issue tracker: #20670)

  - SNMP Agent: The SNMP Agent now keeps up to 16 (up from 4) iterators for
    mapping table getnext requests to lists. This improves performance in
    scenarios where more than 4 tables are being walked in parallel.

    (Issue tracker: #21604)

  - Toolchain: NCT: nct will now use ~/.ssh/nct_known_hosts instead of
    ~/.ssh/known_hosts for storing and lookup of hosts.

  - Toolchain: NCT: nct load-config can now load config in json and the CLI
    formats. See man nct load-config for more information

  - Web Server: JSON-RPC and CGI reguests can be audited (i.e. logged in
    the audit log via a configurable) and controlled by the
    /ncs-config/webui/audit boolean switch. The default value is true.

    (Issue tracker: #21655)

  - Web Server: when calling a CGI script from a JSON-RPC client, e.g.
    browser, that has authenticated successfully, the environment of the
    CGI script will be able to access more information about the JSON-RPC
    session such as username, groups, open transactions, timestamp of when
    the session started, etc. For a full list of environment variables,
    read the documentation chapter on "The web server" - section "CGI
    support"

  - Web UI: Disable invoke action button when an action is still running

    (Issue tracker: #21565)

  - Web UI: The columns in an action input list is now resizable

    (Issue tracker: #21629)

Non-backwards compatible corrections:

  - ncs: NCS now correctly rejects illegal instance-identifers, e.g., on
    the form /x/y[name=foo].

  - ncs: Output of get-modifications has changed.

    get-modifications show the modifications a service has done to the
    instance data. This is NOT necessarily the same as would be pushed to
    the network. Data pushed to the network is always the minimal
    differences. It would however be the same if no overlap of data from
    other services or original data exists.

  - CLI: It was not possible to enter list sub-modes in the I- and C-style
    CLI by entering configuration commands containing abbreviated keys.
    This has been fixed so that by setting the new ncs.conf option
    '/ncs-config/cli/allow-abbrev-keys' to 'true' abbreviated keys can be
    used to enter list sub-modes . Note that setting this option to 'true'
    makes it impossible to create new keys that are abbreviations of
    existing keys. Also note that the default setting for
    '/ncs-config/cli/allow-abbrev-keys' is 'false' which means that other
    usages regarding key abbreviations in the CLI that was previously
    functioning will no longer be enabled by default.

    (Issue tracker: #20936)

Corrections:

  - ncs: NSO now makes sure empty change sets doesn't generate any
    prepare/commit/persist phase.

    (Issue tracker: #21806)

  - ncs: In some cases NCS would fail to find a private key file for a user
    not defined locally, e.g. when using external authentication. This has
    been fixed.

    (Issue tracker: #22211)

  - ncs: NED stats time-to-live (TTL) handling did not work correctly for
    cli and generic neds when the model contain deeper models with lists in
    lists. This has been fixed.

  - ncs: If a node was masked by a 'when' expression the node's
    'refcounter' attribute could be incremented by one for every re-deploy.

  - ncs: In some cases rollback files did not respect OBU (order by user).
    This has been fixed.

    (Issue tracker: #21402)

  - ncs: aaa rules could in some rare cases make the CLI session crash.
    This has been fixed.

    (Issue tracker: #19768)

  - ncs: Incorrect handling of nested choices with mandatory statements
    caused validation to fail. This has now been fixed.

    (Issue tracker: #21022)

  - ncs: With service template, in some cases operations were applied in a
    different order than the XML tags, this has been fixed

    (Issue tracker: #21293, #21929)

  - ncs: NCS retrieving live-status data from CLI and generic NEDs did not
    close connections when the user session was closed. This has been
    fixed.

    (Issue tracker: #21533)

  - ncs: Having NCS_RELOAD_PACKAGES set to "true" when invoking the init
    script for a system install had no effect on Linux systems using
    'systemd', e.g. RHEL or CentOS version 7 or later. This has been fixed.

    (Issue tracker: #21522, #21835)

  - ncs: Elements in a MAAPI path after a key element in an augmented
    subtree were rejected as invalid if the namespace prefix was given.
    This has been fixed.

    (Issue tracker: #21986)

  - ncs: When calculating the diff-set for a generic NED an internal error
    could happen (when annotations/tags were deleted on the top node
    /devices/device/config), this has been corrected.

    (Issue tracker: #21515)

  - ncs: NSO now handles that a user tries to set a new device connection
    and its config in the same transaction.

    (Issue tracker: #21801)

  - ncs: A data-provider was invoked for leafs with default value even
    though an ancestor node with a when-condition evaluates to false. This
    has now been fixed.

    (Issue tracker: #21268)

  - ncs: If an SSH client tried to send an optimistic key-exchange package
    and guessed wrong about the algorithm, NCS' built-in SSH server would
    not properly discard the optimistic package, and the key exchange would
    fail. This has been fixed.

    (Issue tracker: #21485)

  - ncs: Certain cases of package errors could cause 'ncs --status' to
    crash when attempting to print status for loaded packages. This has
    been fixed.

    (Issue tracker: #21453)

  - ncs: Delete of a NP container did not delete tags for the node. This
    has now been fixed.

  - ncs: set-hooks executed as a result of service manipulation were run
    twice. This has been corrected.

    The set-hook was first invoked because of the service manipulating the
    data in the service transaction and secondly when the service changes
    were copied to the main transaction. The second invocation does no
    longer take place.

    (Issue tracker: #21463)

  - ncs: Previously NCS could get an internal error when doing move
    operations on a list in a cluster environment. This is now fixed.

  - ncs: Loading a J-style CLI file with syntactic errors could (for some
    type of errors) result in the error message "internal error" instead of
    a proper error message. This has been fixed.

  - ncs: If an event notification subscriber using the Erlang API
    internally in NCS didn't read its notifications, all existing
    subscriptions would be terminated when the event manager attempted to
    close the problematic subscriber's socket. This has been fixed.

    (Issue tracker: #21778)

  - ncs: A non-default value for a default leaf could be reincarnated when
    'hidden' by a when-expression evaluating to false while the ancestor
    node being recreated. This has now been fixed.

    (Issue tracker: #20242)

  - ncs: Validation was not performed for top-level nodes with default
    values. This has now been fixed.

    (Issue tracker: #18594)

  - ncs: NSO would fail to start if the string ".ez" was found in the path
    to the installation directory. This has been fixed.

    (Issue tracker: #18760)

  - ncs: A list with a single key that was a union between a string and
    another non-integer type, could, for certain combinations of key values
    cause ncs to crash. This has been fixed.

  - AAA: Web UI authentication would fail when external authentication was
    used, unless /ncs-config/aaa/expiration-warning was set to "ignore".
    This has been fixed.

  - CDB: Device operational data (such as device capabilities, alarms, and
    netconf notifications) was not properly replicated to HA slaves. This
    has been fixed.

    (Issue tracker: #22153)

  - CDB: cdb_num_instances() could return an incorrect value when used in a
    CDB_PRE_COMMIT_RUNNING session. This has now been fixed.

    (Issue tracker: #20993)

  - CDB: Fix bug where moving elements inside an ordered-by user list
    within an operational transaction caused an internal error.

  - CLI: When using the '| save' command the CLI could hang for external
    commands. This has been fixed.

    (Issue tracker: #21486)

  - CLI: running the command 'show parser dump' when using an external data
    provider would in some cases lead to get_next() being invoked on the
    external data provider with the ikeypath argument containing dummy
    keys. This has been fixed.

    (Issue tracker: #21209, #22172)

  - CLI: Fixed faulty printing.

  - CLI: In the CLI (both C-style and J-style), when invoking a command
    with empty string as parameter, the parameter was ignored. The problem
    occurred when invoking osCommands implemented in clispec(5). This has
    been fixed.

    (Issue tracker: #19969)

  - CLI: The table rendering output of filtering 'show' commands would in
    some cases not correlate to the filters. This has been fixed.

    (Issue tracker: #21127)

  - CLI: When using tailf:cli-show-config together with the config:false
    option data was sometimes still not displayed when listing the current
    running configuration. This has been fixed.

    (Issue tracker: #20496)

  - Java API: MAAPI query operations now doesn't hang when performed in
    service invocation.

    (Issue tracker: #22053)

  - Java API: Japi - The resourceManager could throw NullPointerException
    in debug level tracing if the injection target object toString() would
    throw NullPointerException. This has been fixed.

    (Issue tracker: #20050)

  - Java API: Japi - ConfXMLParamToXML.doXML() made recursive calls over
    the list of parameters which could cause a StackOverflowError for large
    parameter arrays.

    (Issue tracker: #21436)

  - Java API: Japi - Dp data provider callback existsOptional() had a
    broken implementation that created internal error when reporting false.

  - Java API: Japi - ConfKey.toString() did not correctly quote
    ConfObjectRef objects containing whitespace chars.

    (Issue tracker: #21451)

  - JSON-RPC: stopping a command/subscription did not trigger a "stopped"
    notification on the comet channel. This has been fixed.

    (Issue tracker: #19659)

  - JSON-RPC: the get_value, get_values and set_value methods were
    incorrectly returning "data not found" errors, instead of "access
    denied". This has been fixed.

    (Issue tracker: #22008)

  - JSON-RPC: a regression made it so that actions in augmented trees would
    be run with input parameters from all namespaces i.e. duplicate input
    parameters. This has been fixed.

    (Issue tracker: #21839, #21976)

  - JSON-RPC: a bug in creating and destroying command/subscription handles
    may have lead to handles for two different command/subscriptions to
    overlap, creating the impression of a race condition and giving errors
    such as "Command already started". This has been fixed.

    (Issue tracker: #20026, #20983, #21151, #21882)

  - JSON-RPC: If PAM or external authentication gives a warning that the
    user's password is about to expire, the warning is passed on to the
    user, and the user might need to acknowledge reading the warning. The
    login method then should have expected the ack_warning param to be set
    to true for a successful login, but instead it would throw an error
    complaining that the ack_warning parameter is not allowed. This has
    been fixed, and documentation has been updated.

  - JSON-RPC: the flags parameter of the commit method can also be a
    bitmask for backwards compatibility reasons, but it should not accept
    invalid bits. This has been fixed.

    (Issue tracker: #21810)

  - JSON-RPC: the commit method would crash when using literal flags e.g.
    no-networking. This has been fixed.

    (Issue tracker: #21810)

  - JSON-RPC: running actions with leaf-list parameters sent as arrays with
    items that had whitespaces e.g. ["one two", "three"], resulted in a
    leaf-list parameter decoded as all whitespace separated values e.g.
    ["one", "two", "three"]. This has been fixed.

    (Issue tracker: #21406)

  - JSON-RPC: an OPTIONS HTTP request should have returned the allowed
    methods in the Allow header to fulfill the standards, but didn't. This
    has been fixed.

  - JSON-RPC: set_value might have crashed the session when removing all
    entries in a "ordered-by user" leaf-list and adding entries within the
    same transaction. This has been fixed.

    (Issue tracker: #21224)

  - JSON-RPC: an internal error was triggered when upgrading and a JSON-RPC
    session had open write transactions. This has been fixed.

    (Issue tracker: #21802, #22019)

  - JSON-RPC: set_value calls would succeed even for nodes with their when
    statement evaluating to false. This has been fixed.

    (Issue tracker: #21676)

  - JSON-RPC: subscriptions, except those started via subscribe_poll_leaf,
    were not properly stopped. This has been fixed.

    (Issue tracker: #21882)

  - JSON-RPC: the db methods (copy_running_to_startup_db,
    reset_candidate_db, lock_db, unlock_db) methods were failing with
    internal error. This has been fixed.

    (Issue tracker: #22167)

  - JSON-RPC: the cli/ncs_cli builtin command would run with inappropriate
    uid and gid. This has been fixed.

    (Issue tracker: #21830)

  - JSON-RPC: delete_trans with an invalid th parameters was failing. It
    now acts a successful noop method.

    (Issue tracker: #20197)

  - JSON-RPC: validation might have failed with reasons that were not
    trimmed. This has been fixed.

    (Issue tracker: #20669)

  - NED: Previously disabling some ned-settings would cause NCS to throw an
    error connecting to a netconf device. This has now been fixed.

    (Issue tracker: #22175)

  - NETCONF: If an identityref was used in a subtree filter with a
    different prefix than the prefix defined in the YANG module, the
    subtree filter would not match.  This bug has been fixed.

    (Issue tracker: #21351)

  - NETCONF: When reopening the netconf trace log, for instance if "ncs_cmd
    -c reopen_logs" was run, NCS would not close the file handle to the old
    file - leaking a file descriptor. This has been fixed.

    (Issue tracker: #21237)

  - Python API: The method val2str() of _ncs.Value truncated the returned
    string to 255 chars. This has been fixed.

    (Issue tracker: #21618)

  - Python API: The maapi function get_object() could in certain cases
    segfault or produce random result. This has been fixed.

  - Python API: The MAAPI functions diff_iterate() and
    keypath_diff_iterate() could segfault in certain situations. This has
    been fixed.

  - Python API: The API calls _ncs.maapi.close and _ncs.cdb.close didn't
    correctly clean up the Python socket object. This has been fixed.

  - REST API: Module names are now included for top-level elements in the
    GET output of the /api/config resource

    (Issue tracker: #20975)

  - SNMP Agent: The vacmViewTreeFamilyMask object was not properly
    implemented. The bits in each byte were interpreted in reverse order.
    This bug has been fixed.

    (Issue tracker: #21684)

  - SNMP Agent: If the SNMP agent was configured to listen on a specific IP
    address and the loopback address, but not on the wildcard address, it
    could cause sending of PDUs to non-loopback destinations to fail. This
    has been fixed.

    (Issue tracker: #22016)

  - SNMP Agent: The SNMP Agent did not support mappings between the
    recently added yang types, tailf:ip-address-and-prefix-length,
    tailf:ipv4-address-and-prefix-length,
    tailf:ipv6-address-and-prefix-length and MIB objects of OCTET-STRING
    types of proper lengths. This has been fixed.

    (Issue tracker: #21744)

  - SNMP Agent: In NCS version 3.4 and onwards, an SNMP MIB would not link
    properly if some or all objects in the MIB were implemented by YANG
    nodes augmented into a foreign module, and those YANG nodes were tied
    to the MIB objects by means of relative tailf:snmp-oid statements, such
    as ".1". Warnings about missing associations would be thrown by the
    compiler, and the objects would be unusable in runtime. This has been
    fixed, by resolving such relative OIDs via the OID associated with the
    augment target node.

    (Issue tracker: #21574)

  - Toolchain: It is now possible to define tailf:unique-selector
    statements at the top-level of YANG modules. These
    tailf:unique-selector statements will be moved to the top level list
    that they refer to. tailf:unique-selector can also be placed in level
    defined groupings.

    (Issue tracker: #22118)

  - Toolchain: ncsc would fail if the same feature was passed twice with -f

    (Issue tracker: #21857)

  - Toolchain: 'ncsc --ncs-compile-bundle' and 'ncsc --ncs-compile-module'
    would fail with "internal error" in some cases when 'augment' was used
    in a YANG submodule. This has been fixed.

  - Toolchain: 'ncsc --ncs-compile-bundle' and 'ncsc --ncs-compile-module'
    would fail to compile a YANG module that had single-quotes inside a
    double-quoted string. This has been fixed.

    (Issue tracker: #21591)

  - Toolchain: If a deviation did 'deviate not-supported' for a toplevel
    node in an augment of a different module, NCS would fail to load the
    deviated module. This has been fixed.

    (Issue tracker: #21563)

  - Toolchain: The YANG compiler did not detect that a deviation caused an
    illegal augment of a mandatory node. This has been fixed.

    (Issue tracker: #21790)

  - Toolchain: If the node given by a YANG 'deviation' statement could not
    be found, the compiler would fail with "internal error" instead of
    reporting the problem. This has been fixed.

    (Issue tracker: #21591)

  - Toolchain: NCT: nct ha now uses the correct input parameters for the
    action 'readonly'.

  - Toolchain: The YANG compiler would fail with "internal error" instead
    of reporting the problem if two modules processed in one invocation had
    the same namespace. This has been fixed.

    (Issue tracker: #21790)

  - Toolchain: If the argumet to deref() in a leafref path had more than
    one "up" (../), and the node referenced by deref() was a leafref with a
    relative path, NCS would fail to load the module. This has been fixed.

  - Toolchain: The tailf:unique-selector statement had no effect when used
    in a YANG submodule. This has been fixed.

    (Issue tracker: #21524)

  - Toolchain: The YANG compiler did not give an error if a list without
    keys was defined in a grouping, and the grouping was used in config.
    This has been fixed.

  - Web Server: a crash occurred when the rate limiting was reset to zero.
    This has been fixed.

    (Issue tracker: #21488)

  - Web Server: using unsupported HTTP/1.0 requests on paths that required
    authentication would end up crashing the web server. This has been
    fixed.

  - Web UI: In the auto-rendered webui, entries in a list directly in a
    module did not show up. This has been fixed.

    (Issue tracker: #22014)

  - Web UI: The List component couldn't handle '/' in a key string. This
    has been fixed.

    (Issue tracker: #21769)

  - XPath: The builtin XPath function deref() now correctly only follows
    the first node in the node-set given as argument. Also leaf-list nodes
    are now correctly dereferenced.

  - XPath: XPath ignored when-expressions in NP-containers when descending
    a path to a leaf node. This has now been fixed.


NSO-4.1.1.1 [February 2, 2016]
==============================

Corrections:

  - REST API: Fix for handling of JSON containing identityrefs where
    prefix was let through even though YANG module name is required.

    (Issue tracker: #21493)

  - REST API: Fixed so that YANG Module name is used in JSON REST
    Response where identityref is used.

    (Issue tracker: #21493)


NSO-4.1.1 [January 21, 2016]
============================

Non-backwards compatible enhancements:

  - ncs: The ssh fetch-host-keys action will now commit any updated keys
    also when run in configure mode if possible, i.e. if the device or
    cluster node entry has already been committed. Otherwise (i.e. the
    entry only exists in the current transaction), it will (as before) only
    store the keys in the current transaction, but give
    'updated-uncommitted' instead of just 'updated' as 'result' value.

  - JSON-RPC: for security purposes, each and every JSON-RPC session is now
    limited to an absolute timeout. Previously, only an idle timeout was in
    place, terminating the session if the user was idle for longer time.
    Now the session can be limited to a certain time window, regardless of
    the user being idle or not. By default this is set to 1 hour, but this
    is configurable under /ncs-config/webui/absolute-timeout. Set it to 0,
    if you want to turn it off.

Enhancements:

  - ncs: The default timeout and ssh-timeout behaviour has been changed to
    infinity for the NCT tools.

  - ncs: Certain rare internal errors were caught by calling assert(). This
    led to the ncs daemon aborting (and possibly dumping core). This has
    now been changed so that the internal error is logged in the error log
    instead (making it easier to find these types of errors).

    (Issue tracker: #20445)

  - ncs: When instructed to become slave (via the be_slave() api call) NCS
    will now use a timeout on the connect() call to the master. The timeout
    is (3 * tick-timeout) long, or 10 seconds (whichever is longest).

    (Issue tracker: #16766, #20610, #20754)

  - ncs: NSO now supports no-overwrite paths in NEDs as for NETCONF.

  - ncs: An optimization for transactions involving one single NETCONF
    device is made. This implies that no validate is sent prior to the
    commit/commit confirmed. The same optimization is taken for NETCONF
    devices that is part of commit-queue transactions.

    (Issue tracker: #18971)

  - CLI: Increased upper limit of rollback id to 4294967295.

    (Issue tracker: #21285)

  - CLI: A new pipe target has been added in C-, I- and J-style CLI called
    'display json'. When used together with a show configuration command
    the configuration will be displayed in json format.

    (Issue tracker: #18484)

  - CLI: A new extension to output meta data for nodes has been created.
    The tailf:meta-data extension and it's sub-statement tailf:meta-value
    can present any text chunk as comments together with a node path when a
    node sending data towards a NED CLI device or accessible via the
    Java-API.

    (Issue tracker: #19087)

  - CLI: Tags can now be displayed for non-presence and presence
    containers. To activate this for non-presence containers change the
    confd.conf setting displayNonPresenceAttributes from its default value
    false to true.

    (Issue tracker: #19008)

  - Documentation: Updated NSO Admin Guide section on Monitoring. More
    details on syslog, status, log messages

  - Documentation: The --emit-xsd compiler options has been removed

    (Issue tracker: #20797)

  - Documentation: In order to be able to run executables invoked via
    actions as another user, the executable cmdwrapper needs to have
    changed permissions. This has now been documented. This is very similar
    as the handling of cmdptywrapper which is used for pure CLI commands.

    (Issue tracker: #20830)

  - Documentation: HTML documentation for _ncs.maapi was missing. This has
    been fixed.

    (Issue tracker: #21038)

  - Java API: NEDs now support the new tailf:meta-data YANG annotation. The
    meta data is accessible through Maapi Schemas.

  - Java API: Japi - Cdb.setTimeout has been introduced to control timeout
    of Client Cdb actions. See javadoc for more information.

    (Issue tracker: #21311)

  - JSON-RPC: get_list_keys now takes in a start_with parameter, in order
    to filter out keys that do not start with a specific prefix.

    (Issue tracker: #19392)

  - JSON-RPC: tail:hidden elements in YANG modules are now kept
    unhidden/hidden in between transactions, i.e. per user session.

    (Issue tracker: #20620)

  - JSON-RPC: The "deref" JSON-RPC method can now take an additional
    "result_as" parameter called "list-target". This parameter derefs a
    path but omits uninitiated list keys instead of returning an error.

    (Issue tracker: #20650)

  - JSON-RPC: the deref method now takes a result_as parameter that can be
    paths (default) or target. When it is set to target, the method return
    only the target keypath of the dereferenced leafref.

    (Issue tracker: #20650)

  - JSON-RPC: the commit method learned more commit flags, and also
    switched from bitmask to literal flags for increased readability.

    (Issue tracker: #20300)

  - NED: NCS now gives an error when creating a NETCONF session without its
    package.

  - NETCONF: It is now possible to configure capabilities/url for
    netconf-north-bound in ncs.conf.

    (Issue tracker: #20323)

  - Python API: Added support for creating a _ncs.Value of type C_LIST

  - Python API: ncs-make-package can now generate a Python service skeleton

  - Python API: Added support for creating a _ncs.Value of type
    C_OBJECTREF.

  - REST API: Updated errors for REST to display names keys when available.

  - Toolchain: It was not possible to emit a proper mib from a module
    augmenting leafs or containers into a list of a different module. This
    has been improved, so that some cases are now handled - a sequence of
    leafs or a single container with a sequence of leafs that are augmented
    into a list will lead to a table that AUGMENTS the table object emitted
    from the augmented list.

    (Issue tracker: #20876)

  - Toolchain: Added tailf:no-leafref-check to make it possible to avoid
    validating leafrefs.

    (Issue tracker: #19942)

  - Toolchain: If tailf:hidden is used in a device model, the node used to
    be visible (not hidden) in the template tree.  Such a node is now also
    hidden in the template.

    (Issue tracker: #21041)

  - Web Server: The Web UI traffic log no longer contain payload for image
    files.

    (Issue tracker: #19009)

  - Web Server: The Web UI traffic log files no longer contains < and >
    characters

    (Issue tracker: #19721)

Non-backwards compatible corrections:

  - ncs: If a service moved or deleted existing items in an ordered by user
    list, the order was not reinstated when the service was deleted.

    This has been corrected by storing the needed moves in the reverse
    diff-set to reinstate the initial data.

    Note: this only works if the ordered by user list has not been
    manipulated outside of the service.

    For 4.1 Downgrading to earlier versions, before 4.1 will not work. The
    error will appear when using the diff-set eg. change service data,
    re-deploy, delete and so on.

    (Issue tracker: #20427)

  - ncs: Values for hidden mandatory leafs were not preserved when a list
    entry was deleted and re-created within a transaction. This has been
    fixed.

    (Issue tracker: #20771)

  - ncs: Daemons disconnecting during package reload was logged as a <CRIT>
    error in ncs.log, even though this disconnect (and subsequent
    reconnect) is expected. This has been fixed - these disconnections are
    now only logged as <INFO> in devel.log.

    (Issue tracker: #20662)

  - Java API: Japi NED. It was previously possible to report errors via the
    NedWorker.error() call with arbitrary error code strings. Since these
    translates to Erlang Atoms this was potentially harmful with a growing
    atom space in the erlang vm.

    These error code strings should only be strings representing the
    values defined by the NedErrorCodes class. This is now enforced. The
    implications is that some user error messages from NEDs will have
    changed error texts

    (Issue tracker: #20954)

  - JSON-RPC: get_list_keys defaulted to chunk_size 10 in an inconsistent
    way with regards to other JSON-RPC methods, and also required an
    arbitrarily high number if the client required all list entries' keys.
    This has been fixed by defaulting to an undefined chunk_size, with
    infinity semantics, and letting the client decide if and how the
    chunk_size should be defined.

    (Issue tracker: #20544)

  - Toolchain: When emitting a MIB from a module augmenting another module,
    some objects should be imported from the MIB that is supposedly emitted
    from the augmented module. This requires a tailf:snmp-mib-module-name
    statement to be inserted or annotated into the augmented module.

    (Issue tracker: #20876)

Corrections:

  - ncs: If an SSH client sent the non-standard opcode IUTF8 (42) in a
    pty-req channel request towards the built-in SSH server, the connection
    would go down. This has been fixed.

    (Issue tracker: #21317)

  - ncs: Moved SSH keep alive YANG defaults from device to global level.

  - ncs: The YANG revision check done when connecting to a device, or when
    the check-yang-modules action was invoked, would incorrectly check
    revisions for NCS-internal modules that were not part of the managed
    device model. This could cause a false "revision-error" alarm and/or
    "compatible false" result from the action. This has been fixed.

    (Issue tracker: #20667, #21050, #21092)

  - ncs: Applying a template from a Java action callback when the action
    was run in oper mode led to an internal error. This has been corrected
    and a proper error message is returned.

  - ncs: I some circumstances with move of order-by-user lists and
    candidate commit without a previous validate, the transaction could
    cause an internal error. This has been fixed.

  - ncs: The combination of "tailf:call-once true" and "tailf:dependency"
    caused the validaion point not to be called at all. This has now been
    fixed.

    (Issue tracker: #17514, #20616)

  - ncs: NCS refused to start without a DSA key in the SSH server's key
    directory, and the documentation incorrectly stated that only DSA keys
    are supported, although NCS' built-in SSH server supports DSA and RSA
    keys. This has been fixed.

    (Issue tracker: #21023, #21217)

  - ncs: NSO now keeps order-by user leaf-lists in-sync when several
    services commit to the same leaf-list during re-deploy.

    (Issue tracker: #20893)

  - ncs: Mixed content in rpc-reply from Juniper devices is now handled.

    (Issue tracker: #20810)

  - ncs: Running 'request devices sync-from' is now considerably faster.

  - ncs: If a "unique" statement referred to a list key, and the list had
    more than one key, the unique constraint would not be enforced.  This
    bug has been fixed.

    (Issue tracker: #20925)

  - ncs: An "invalid tagpath" error occurs while issueing an augment
    notification. This has been fixed

    (Issue tracker: #20977)

  - ncs: It is now possible to specify
    'ncs-config/netconf-north-bound/capabilities/inactive'.

    (Issue tracker: #20981)

  - ncs: The action on a service: 'un-deploy' removed the configuration
    changes the service introduced in the instance data. If the service
    then was re-deployed or un-deployed the changes would be remove once
    more. The effect of this was when services had overlapping data the
    service-meta-data would be lost. This has now been corrected by
    removing service private data, eg. the reverse diff-set, from the
    service when the service is un-deployed.

  - ncs: The ncs-backup command would not work correctly if the 'current'
    symbolic link in the install directory had a trailing slash (e.g.
    /opt/ncs/current pointing to "ncs-4.0.2/" rather than "ncs-4.0.2").
    This has been fixed.

    (Issue tracker: #20982)

  - ncs: If a leafref referred to a key in an ancestor list, the leafref
    would not be validated.  This bug has been fixed.

    (Issue tracker: #19145)

  - ncs: The NCS device manager prevented correct setup of
    netconf-notification subscriptions to be setup together with config
    data on the same device in the same transaction. This has been fixed.

  - ncs: The command 'show python-vm' failed in some cases.

  - ncs: In some cases, setting a leafref to a bad value could result in an
    internal error instead of a proper error message.  This bug has been
    fixed.

    (Issue tracker: #20584)

  - ncs: Attempting to load XML config with Maapi.loadConfig()/ncs_load
    using the default mode, i.e. neither merge nor replace, in start phase
    0, would fail with an internal error. This has been fixed.

    (Issue tracker: #17936)

  - ncs: The tailf:priority YANG extension could cause validation points to
    be ignored during validation. This has now been fixed.

    (Issue tracker: #17514)

  - ncs: Changing active case followed by recreation of the already
    commited case could lead to mandatory constraints not being uphold,
    thereby permitting invalid configuration to be commited. This has now
    been fixed.

    (Issue tracker: #20304)

  - C-API: If maapi_init_cursor() was passed the path for a list entry
    instead of the path for a list, the subsequent call of maapi_get_next()
    could result in a crash. This has been fixed, now the maapi_get_next()
    call fails with the appropriate CONFD_ERR_BADPATH error in this case.
    This bug also affects the Python API, as its implementation is based on
    the C API.

    (Issue tracker: #20276)

  - CDB: NCS failed to detect missing mandatory choice during start with
    empty database. This has now been fixed.

  - CDB: If a leaf was deleted, the old value was not provided in the
    MOP_DELETED invocation of the iterate() method for CdbDiffIterate. This
    has been fixed.

    (Issue tracker: #21124)

  - CLI: A configuration change containing leafs annotated with
    tailf:non-strict-leafref and pointing to a non-existing leafs would in
    some cases result in an 'internal error' when running the CLI command
    'commit dry-run outformat native'. This has been fixed.

    (Issue tracker: #21063)

  - CLI: Deleting data in the J-CLI could fail when using wildcards and
    specifying specific leafs to delete. This has been fixed

    (Issue tracker: #20741)

  - CLI: The extensions tail:incomplete-no and tailf:sequence-command would
    not always work in combination. This has been corrected.

    (Issue tracker: #19778)

  - CLI: Displaying a notification where some of the leafs had been
    augmented from another namespace would result in an 'internal error'.
    This has been fixed.

    (Issue tracker: #20977)

  - CLI: The tailf:cli-reset-container also had effect in the J-style CLI,
    which it should not. This has been fixed.

    (Issue tracker: #20959)

  - CLI: When entering edit mode in J-Style CLI the prompt-banner could
    include no-keyword nodes. This has been fixed.

    (Issue tracker: #21051)

  - CLI: In the C- and I-style CLI; deleting a leaf in a list-instance
    containing a prefix leaf (a leaf annotated with tailf:cli-prefix-key),
    would in some cases cause the entire list-instance to be removed. This
    has been fixed.

  - CLI: When standing in a CLI sub-mode and entering a different sub-mode
    the CLI sometimes didn't switch sub-mode. This has been fixed.

    (Issue tracker: #21011, #21389)

  - CLI: It was not possible to mount an action defined in YANG on a custom
    command defined in a clispec, by using tailf:cli-mount-point . This has
    been fixed.

    (Issue tracker: #19989)

  - CLI: When combining tailf:cli-no-value-on-delete and
    tailf:cli-reset-all-siblings extensions the delete command could end up
    in an endless loop. This has been fixed.

  - CLI: Do only prompt for action parameter values when the autoWizard is
    enabled.

    (Issue tracker: #20412)

  - Examples: Corrected mpls-vpn example

    (Issue tracker: #21046)

  - Java API: Japi - the NavuParser that parses XML to ConfXMLParams did
    not correctly handle the case of leaflist when the underlying type of
    the leaflist was strings that contained whitespace characters.

    (Issue tracker: #21160)

  - Java API: Maapi schemas is not loaded when connecting HA socket.

    (Issue tracker: #21246)

  - Java API: Japi NedExpectResult.getMatch() returned the wrong field.
    This is now fixed.

    (Issue tracker: #21067)

  - Java API: Two file-descriptor leaks has been fixed in the java-vm. Both
    occured at package reload/package redeploy. The first was a java
    library problem with the URLClassLoader which as been addressed in java
    1.7 or later with the introduction of the close() method. The java-vm
    will now call this method if running java 1.7 or later. However this
    leak still exists in Java 1.6

    The second leak was Cdb connections allocated by the ResourceManager
    in the java-vm. This is now fixed.

    (Issue tracker: #21097)

  - JSON-RPC: get_list_keys was terminating on the first list entry that
    didn't match the starts_with condition, although sequent list entries
    might pass the condition. This has been fixed.

    (Issue tracker: #21248)

  - JSON-RPC: running actions inside of augmented nodes would crash the
    session due to the incorrect namespace detection. This has been fixed.

  - JSON-RPC: Packages published as TAR archives, containing CLI scripts or
    WEBUI customizations, would crash NCS on loading the packages. This has
    been fixed.

    (Issue tracker: #21100)

  - JSON-RPC: setting /ncs-config/webui/absolute-timeout to PT0M would
    crash the login method. This has been fixed.

    (Issue tracker: #21326)

  - JSON-RPC: an action with invalid results would end up crashing the
    session. This has been fixed.

  - NED: for NED developers; after modifying a list instance annotated with
    tailf:cli-compact-syntax, the configuration diff would in some cases
    display the resulting 'no' and 'set' commands in the reverse order.
    This has been fixed.

    (Issue tracker: #20413)

  - NETCONF: Annotations containing '<' was not correctly quoted in NETCONF
    which rendered an illegal XML. These are now quoted as '$lt;'

    (Issue tracker: #20519)

  - NETCONF: Values with default values were not synced during sync-to
    actions if the default value was unset in NCS, i.e. not bneing in sync
    with the device which in turn has a default value explivitly set.

    (Issue tracker: #20609, #20974)

  - NETCONF: In some cases, an augmented node had to be sent after all
    non-augmented nodes in NETCONF.  This bug has been fixed.

    (Issue tracker: #20822)

  - Packages: Project skeleton files were missing, breaking the
    'ncs-project create' command. This has been fixed.

  - Python API: Running packages with both python and java components now
    work.

  - Python API: Empty strings could not be handled by the Python API when
    using certain versions of Python. This has been fixed.

    (Issue tracker: #20280)

  - Python API: emitted Python code from ncsc now avoids a dash ('-') in
    the generated filename. Instead an underscore ('_') character is used.

  - Python API: The _ncs.Value type C_IDENTITYREF was missing. This has
    been fixed.

  - REST API: REST dryrun now also return device name and works with json.

  - REST API: Fixed problem when using JSON with a YANG model with multiple
    levels of "output".

    (Issue tracker: #20548)

  - REST API: Updated handling of identityref:s in JSON, module-name must
    be used.

    (Issue tracker: #20094)

  - REST API: One-line error message related to "unique" is now printed
    only with ReST interface instead of all interfaces.

  - Toolchain: When ncsc found incorrect dependencies in a YANG module, it
    would format the bad paths incorrectly. This bug has been fixed.

  - Toolchain: tailf:id-value is now kept in "template" in ncsc device
    compilation.

    (Issue tracker: #20991)

  - Toolchain: If a leaf given in the argument list for the YANG 'unique'
    statement didn't exist, the compiler would fail with "internal error"
    instead of reporting the problem. This has been fixed.

    (Issue tracker: #20791, #19582)

  - Toolchain: If a tailf:link leaf was referenced in a unique statement,
    ncsc would fail with internal error.  This bug has been fixed.

    (Issue tracker: #19440)

  - Toolchain: Deviation target module can now look at imports defined in
    validation module.

    (Issue tracker: #20525)

  - Toolchain: An alarm is now triggered when check-sync reports
    out-of-sync for a device. The alarm will not be triggered when
    out-of-sync-commit-behaviour is set to accept.

    (Issue tracker: #21181)

  - Toolchain: When compiling a device model that had an augment that used
    a grouping defined in some other module, the compilation would fail
    with an internal error.  This bug has been fixed.

    (Issue tracker: #20955)

  - Toolchain: When using "unique" statement, but without "key" in a list,
    yang compiler reports "internal error". This has been fixed with a
    better error printout

    (Issue tracker: #20791)

  - Toolchain: Ensure that a servicepoint cannot be set on a config false
    node in a YANG model.

    (Issue tracker: #20567)

  - Toolchain: When emitting (fxs) load_augment records (from augmenting a
    schema node with a input/choice/case node ancestor), select the closest
    ancestor that is not input/case/choice as augment target from which to
    pick required-flags to the load_augment record.

    (Issue tracker: #20976)

  - Toolchain: It was not possible to compile a MIB where an object of type
    OCTET STRING was implemented by a yang leaf of type identityref. This
    should work, and has been fixed.

    (Issue tracker: #20876)

  - Toolchain: Compilation of a device model where an absolute leafref path
    had key predicates would print an incorrect error message and transform
    the leafref into a string type. This has been fixed.

    (Issue tracker: #21001)

  - Toolchain: It was not possible to emit a MIB from a module with a
    typedef of type leafref. This has been fixed.

    (Issue tracker: #21086, #20876)

  - Web Server: operational data was cached indefinitely per transaction,
    ending in stale values. This has been fixed.

    (Issue tracker: #20019)


NSO-4.1 [November 25, 2015]
===========================

Removals:

  - REST API: Make sure that tailf:hidden actions are hidden in the
    responses.

    (Issue tracker: #19745)

Non-backwards compatible enhancements:

  - ncs: The "system install" now sets up the initial installation for
    authentication via PAM only. A sample configuration for logrotate(8) is
    also installed.

  - ncs: Enhanced support for stacked services.

    From the YANG model tailf-ncs-services.yang:

    Added parameters, 'shallow' and 'deep' to service action'check-sync'.

    Added parameters, 'shallow' and 'deep' to service action 're-deploy'.

    Added parameters, 'shallow' and 'deep' to service action
    'get-modifications'.

    Added service oper-data 'modified' and 'directly-modified'.

    All the above actions are now applied to all services in a stacked
    service scenario. The previous behavior was to only affect the
    specified service. If the old behavior is needed use the shallow
    parameter to the action.

    The new oper-data 'modified' and ' directly-modified' for a service
    shows what devices or services a service modifies, either directly or
    indirectly in a stacked service scenario.

    (Issue tracker: #18864)

  - ncs: Previously NEDs returned errors as simple strings. NEDs now return
    error codes as well. This will mark previous methods as deprecated.

  - AAA: If PAM or external authentication gives a warning that the user's
    password is about to expire, the warning can now be passed on to the
    user. Refer to /ncs-config/aaa/expiration-warning in the ncs.conf(5)
    manual page and the "External authentication" section in the AAA
    chapter of the Administration Guide for details.
    /ncs-config/aaa/expiration-warning is set to "prompt" in "system
    install".

    The JSON-RPC server implements the above by replying to the login
    method, either with a successful result and "warning" information, or
    with an error and "warning" information. The latter happens if the user
    needs to also confirm seeing the warning, upon which the login method
    must be called with "ack_warning" set to true, in order to succeed.

  - CLI: A new option has been added to ncs_cli. It is called
    --stop-on-error and causes the CLI to exit (with status code 8) at the
    first error. It is intended to make it easier to script the CLI.

    This new feature has implied a change in the protocol between ncs_cli
    and the NCS backend. For users with an own customized version of
    clistart.c this means that it must be upgraded.

    (Issue tracker: #19606)

  - CLI: Copying a sub-tree by using the 'copy' command in the CLI will now
    exclude hidden data from the copy operation.

  - Java API: NavuList implemented an Iterator<NavuContainer> that made it
    possible to iterate over the elements of an list. However the NavuList
    elements are actually NavuListEntry which is a subclass of
    NavuContainer.

    The iterator is changed to Iterator<NavuListEntry> which makes the
    getKey() method accessible on the iterated elements without casting.

    Code that manipulates the iterator() directly (not implicitly in a for
    loop) need to refer to Iterator<NavuListEntry>. All other user code
    will work without change.

    (Issue tracker: #18692)

  - JSON-RPC: for security purposes, each and every JSON-RPC session is now
    limited to an absolute timeout. Previously, only an idle timeout was in
    place, terminating the session if the user was idle for longer time.
    Now the session can be limited to a certain time window, regardless of
    the user being idle or not. By default this is set to 1 hour, but this
    is configurable under /ncs-config/webui/absolute-timeout. Set it to 0,
    if you want to turn it off.

  - JSON-RPC: for security purposes, rate limiting has now been added to
    each and every JSON-RPC session. By default only 1 million JSON-RPC
    requests are allowed within the hour, but this is configurable under
    /ncs-config/webui/rate-limiting. Set it to 0, if you want to turn it
    off.

Enhancements:

  - ncs: NCS now supports devices with :candidate and :startup.

    (Issue tracker: #16631)

  - ncs: NCS - a new reactive-re-deploy service action has been introduced
    to be used in conjunction with the Reactive FASTMAP pattern. See
    development guide for more information

  - ncs: There is now an API for a NED to return an "in-use" error and thus
    it is possible for NCS to understand that the device is locked. This
    enables the commit-retries feature for NEDs.

    (Issue tracker: #15370)

  - ncs: The order of the XML output from the device actions
    'compare-config' and 'get-modifications' now follows the order of the
    YANG data model. Before the output was in arbitrary order.

    The format of 'compare-config' 'outformat xml' has changed to conform
    to the format of 'outformat cli' it now contains all XML tags from the
    top as seen by NSO.

  - ncs: It is now possible to enable device-notifications in a clustered
    setting independently of the commit queue configuration.

  - ncs: Information about loaded packages is now included in the 'ncs
    --status' output.

  - ncs: The NCS NED session pool is now possible to configure. See the
    user_guide for more information.

  - ncs: A new leaf /ncs-state/patches/patches-directory has been added,
    which shows the path to the directory that patches are loaded from.

  - ncs: Added 'debug template' to 're-deploy' and 're-deploy dry-run'.

    This is an enhancement which gives service developers extra debugging
    output when re-deploying a service using templates.

    (Issue tracker: #19188)

  - ncs: NCS now pools NETCONF sessions.

  - ncs: Added 'nct', a tool-set for managing (install NSO, install
    packages, start/stop NSO, load config etc etc) 1..N hosts with NSO. See
    'man nct' for more information.

  - ncs: NCS now returns a more indicative error when there is bad user
    input e.g. bad username.

  - ncs: Device authentication failure is now treated as transient errors
    in the commit queue and NETCONF notification subscriptions.

  - ncs: NCS now return all errors from applyTrans() in prepare/commit and
    in abort/revert if /devices/global-settings/report-multiple-errors is
    set to 'true'.

    (Issue tracker: #18353)

  - ncs: NCT: Added the command 'get-logs' to fetch the NSO log directory.
    See the man pages 'nct-get-logs' for more information

  - ncs: NCS - the out-of-sync-commit-behaviour is now in addition to in
    the global-settings container also possible to set under device-profile
    and under device. The precedence order is device, device-profile and
    last global-settings. This change makes it possible to set a device or
    device type to accept out-of-sync transactions while all other have a
    reject behaviour.

  - ncs: Templates now also acknowledges key when moving list items in an
    ordered by user list.

    Both formats are valid: <term insert="before" key="bgp-deny"> <term
    insert="before" value="bgp-deny">

    (Issue tracker: #18727)

  - CDB: Improve error reporting when disk fails during CDB compaction.

    (Issue tracker: #18623)

  - CLI: The CLI command "show configuration commit changes" is now also
    available in oper mode.

    (Issue tracker: #19398)

  - CLI: Suppress errors from NED devices. Make log-communication between
    ncs and its devices more silent. Be cautious with this option since
    errors that might be intresting can get suppressed as well.

    (Issue tracker: #18111)

  - CLI: If the setting confdConfig/cli/commitRetryTimeout and
    confdConfig/commitRetryTimeout are set a warning will be issued when a
    commit is done in the cli and only the confdConfig/commitRetryTimeout
    will be adhered.

    (Issue tracker: #19451)

  - CLI: File names may now start with "..".

    File names may now begin with "/" (absolute filenames) even when
    restrictedFileAccess is enabled as long as the file is residing within
    the home directory.

    The "cd .." command is now allowed as long as it does not violates the
    restrictedFileAccess setting.

    "cd" without argument changes directory to the home directory.

    (Issue tracker: #19106)

  - Documentation: Updated NSO Admin Guide section on Monitoring. More
    details on syslog, status, log messages

  - Erlang API: The Erlang interface for the Management Agent API now
    supports template functionality.

  - Java API: Japi NavuContext class has been reworked to use writable
    operational data transactions via Maapi. This implies that it is
    possible to write either configuration and operational data over a
    Maapi socket. A new constructor NavuContext(Maapi) has been introduced
    for this purpose. See javadoc for more on this.

  - JSON-RPC: the get_system_setting method learned the ttl operation,
    which will give information about different ongoing timers.

  - JSON-RPC: subscribe_changes method now supports two additional
    parameters: 1) hide_changes will only generate a subscription message
    on the comet channel with no changes information at all, making the
    subscription act similar to a ping-pong communication 2) hide_values
    will generate a subscription message on the comet channel with no
    values, but still with partial changes information like keypath and
    operation.

    These parameters will allow for different degrees of granularity in
    subscription events, useful in scenarios with many changes, or with
    changes that contains big data, which suffocate the comet channel, on
    the server side, on the network and on the client side.

    (Issue tracker: #18376)

  - Python API: NSO will check the python version before starting any
    Python VMs. If a custom VM startup script is supplied it is important
    that it supports the "-c" option where a python command is run.

    The NSO will run the python sys.version_info function and check that
    the python version is > 2.7. Otherwise the Python VMs will not be
    started and the reason logged.

  - REST API: Added a commit-flag, 'force-put'. When present, it bypasses
    the restriction to use PUT on the datastore resource.

    (Issue tracker: #20085)

  - REST API: A new commit query parameter 'dryrun' has been added. Using
    this flag will cause no data being sent to the devices. Instead the
    effects that would have taken place is showed in the returned diff
    output. Possible values of the dryrun parameter are: 'xml', 'cli' and
    'native' , indicating the format of the returned diff.

  - REST API: Added support for rollback using JSON over REST

  - Toolchain: It is now possible to use "--export" flag when compiling
    device model (--ncs-compile-module or --ncs-compile-bundle) with ncsc

    (Issue tracker: #15205)

  - Toolchain: The ncs-project command is introduced which makes it
    possible to encapsulate a complete running NCS installation. See the
    man page ncs-project(1) for more info.

  - Toolchain: The ncs-make-package script now also generates a test
    directory structure.

Non-backwards compatible corrections:

  - ncs: It wasn't in general possible to configure localized keys for
    SNMP, since the /snmp/usm/local/user/*/*/key leafs expected the key in
    "raw binary" form. This has been fixed, the 'key' leaf now takes (and
    shows) the key as a "hex-string", i.e. a hexadecimal string with octets
    represented as hex digits separated by colons.

    (Issue tracker: #20715)

  - ncs: If a package had unsatisfied or circular dependencies, required a
    later NCS version, or was a duplicate, NCS would just skip that package
    when loading packages. This could cause secondary failures and other
    hard-to-debug issues. These problems have now been made fatal - i.e. if
    loading new packages at startup, NCS will not start, and a "packages
    reload" request when NCS is running will fail, keeping the already
    loaded set of packages unchanged.

    (Issue tracker: #20053)

  - CDB: Package reload with data model changes is from now on only
    possible while in state none. The reload will fail on HA-nodes in state
    slave or master.

    (Issue tracker: #19938)

  - Java API: NavuLeaf.set(String) no longer accepts/try to interpret the
    string as xml and in that case use NavuLeaf.setValues(). Also
    NavuContainer.set() and NavuList.set() is deprecated and the respective
    setValues() should be used for xml input.

    The rationale for this is that in the underlaying Maapi/CDB api:s the
    setElem() is a single valued leaf function. While setValues() are used
    to set multiple values.

  - Java API: Japi - the Navu PreparedXMLStatement no longer supports the
    Serializable interface. The reason is that if the model change the
    serialized object is rendered unusable.

    The workaround is to store the initial XML snippet persistently
    instead and creating the PreparedXMLStatement from the XML when needed.

Corrections:

  - ncs: Remove <CRIT> messages regarding dying daemons in the log when we
    have requested a shutdown.

  - ncs: Fixed support for using a non-default prefix for a namespace in
    templates.

  - ncs: Setting a leaf in a template which is shadowed by a false YANG
    'when' statement lead to an internal error. This has been corrected.

    (Issue tracker: #20481)

  - ncs: Remove potentially confusing log messages regarding a validation
    phase for operational data in CDB. There is no validation for
    operational data.

  - ncs: in NCS java-vm the package application components (if supplied)
    could start work before NCS was fully up and running. From now the
    application component thread will wait for NCS to report that is has
    started.

    (Issue tracker: #19661)

  - CDB: Fix a rare case where a transaction against the operational
    database might not return any reply and the call to commit thus be left
    hanging.

  - CLI: Using completion points and leaf-lists didn't always resolve
    correctly. This has been fixed.

    (Issue tracker: #18717)

  - CLI: Using tailf:cli-multi-value and tailf:cli-max-words without
    patterns could treat node keywords as part of the current value being
    set. This has been fixed. Restriction on tailf:cli-multi-value and
    tailf:cli-multi-word-key has been clarified in the documentation.

    (Issue tracker: #19162)

  - CLI: Reordering instances in an 'ordered-by user' list would in some
    cases, and when dependencies were triggered, result in an incorrect
    output from the C-style command 'show configuration'. This has been
    fixed.

    (Issue tracker: #20709, #20675, #20698)

  - CLI: Combining tailf:cli-expose-key-name and tailf:key-default
    extension could result in "unknown argument"-errors. This has been
    fixed.

    (Issue tracker: #20528)

  - Documentation: The --component-name switch of the ncs-make-package
    command is now documented in the Users Guide.

    (Issue tracker: #19878)

  - Java API: Japi - The error reporting from Dp DB callbacks was wrong
    preventing DB callbacks to handle error cases correctly.

  - Java API: Japi - The Maapi QueryResult classes was not threadsafe. This
    has been fixed.

  - Java API: Japi ConfBool value class did not have a first class String
    constructor, but used Boolean.valueOf() instead. This was a bug in the
    sense that string values other than "true" or "false" was interpreted
    as boolean false. Now such other string values throws an Exception.

  - JSON-RPC: subscribe_cdboper should have worked with keypaths that
    contained lists with missing keys, but instead it required them. This
    has been fixed.

  - NETCONF: NCS device manager allows netconf devices to fail in
    discard-changes in initialize. This is because some devices does not
    allow to discard-changes on an empty candidate.

    (Issue tracker: #19625)

  - REST API: Multiple HTTP parameters with the same name is now rejected
    by the REST API.

  - REST API: Fixed a bug when using REST interface and external data
    providers where get_next was used instead of get_next_object.

    (Issue tracker: #18905)

  - Toolchain: The YANG compiler applied annotations twice, which could
    cause e.g. validation callbacks to be invoked twice for each
    validation. This has been fixed.

    (Issue tracker: #19608)

  - Toolchain: If a show template had bad escape characters, ncsc would
    fail with internal error.  This bug has been fixed, and a proper error
    message is printed.

    (Issue tracker: #19548)

  - Web Server: the traffic log was not reopened (kept the same file
    descriptor) along with the other logs. This has been fixed.

    (Issue tracker: #20487)

  - Web UI: Webui, choice as action input parameter fixed. RT:19537

    (Issue tracker: #19537)


NSO-4.0.3 [November 16, 2015]
=============================

Non-backwards compatible enhancements:

  - AAA: PAM authentication now also calls the pam_setcred() function,
    required for e.g. the Linux pam_tally2 module to work.

    (Issue tracker: #19225)

  - AAA: CLI completion would list a key for which a matching 'deny' rule
    existed if the rule was preceded by more specific rules, even if those
    rules also were 'deny' rules. This has been improved such that the key
    is excluded from the completion in this case.

    (Issue tracker: #19768)

Enhancements:

  - ncs: The query api now uses the "bulk hint" flag when reading data.
    This has the effect that when a dataprovider implements get_*object()
    it will be used.

    (Issue tracker: #20434)

  - ncs: Added predefined XPATH variable to templates. The XPATH variable
    TEMPLATE_NAME holds the name of the current template.

    Typical use-case: augment structured data under /devices/template
    Access data the normal way, for example:

    /devices/template[name=$TEMPLATE_NAME]/at:device/description

  - CLI: When configuring a leafref the CLI would try to match the leafref
    against existing leafref targets. This has been optimised so that no
    search for a match will be made during configuration for regular
    leafrefs and leafrefs defined by the extension
    tailf:non-strict-leafref. Note that leafrefs defined by the extension
    tailf:cli-strict-leafref will still be subject to a search for a match
    during configuration.

    (Issue tracker: #17042)

  - CLI: Accessing data between CLI and actions has been optimised a bit to
    be more memory efficient.

    (Issue tracker: #20098)

  - CLI: The persistent CLI history is now encrypted provided some
    encryption keys are configured in the confd.conf file, otherwise the
    history is stored in clear text.

  - Java API: Japi added Maapi.getObjects(...) method to retrieve multiple
    list instances in one request.

    (Issue tracker: #20503)

  - Java API: Japi - new ConfXMLParamStartDel() class. This class is used
    when deleting a list entry e.g using Maapi.setValues(). For more see
    javadoc for ConfXMLParam.

    (Issue tracker: #20316)

  - Java API: Japi Dp - completion action callbacks has been introduced.
    see Javadoc for more information.

    (Issue tracker: #20753)

  - JSON-RPC: get_list_keys now takes in a start_with parameter, in order
    to filter out keys that do not start with a specific prefix.

    (Issue tracker: #19392)

Non-backwards compatible corrections:

  - ncs: A carriage return character in a string value, must be represented
    by a character entity reference in XML, or it will be replaced by a
    newline character by any XML parser. This has been fixed, by rendering
    those characters as &#13; in the XML stream.

    (Issue tracker: #17747)

  - ncs: The "packages reload" action would attempt to take the global
    locks, and thus fail immediately, disregarding the max-wait-time
    parameter, if a transaction commit was in progress. This has been fixed
    - the action no longer takes the global locks.

    (Issue tracker: #20002)

  - ncs: A correction has been made to the order of the diff that is pushed
    to the device for generic NEDs. To be backwards compatible, and get the
    diff in schema order, set ncs-package/component/ned/name/ordered-diff
    in package-meta-data.xml.

Corrections:

  - ncs: Augumenting /ncs:devices/template led to an internal error. This
    has been corrected.

    (Issue tracker: #20479)

  - ncs: Package reload does not load the latest Erlang code. This has been
    fixed.

  - ncs: A debug printout from the 'epam' program that could occur when
    using PAM authentication has been removed.

    (Issue tracker: #19752)

  - ncs: the audit.log entries now escapes new line characters, in order to
    prevent manipulation of the log through carefully engineered requests
    that contain log-entry-like content, which get logged.

  - ncs: For NED developers: In some cases when re-ordering an 'ordered-by
    user' list and when using the YANG extension
    tailf:cli-show-obu-comments, some move comments were missing from the
    CLI output. This has been fixed.

    (Issue tracker: #20449)

  - ncs: NCS now filters namespaces from everything not included in the
    device capabilities when pushing changes to the device.

    (Issue tracker: #19653)

  - ncs: YANG models using choices with a default case would never be
    in-sync. This has now been corrected.

    (Issue tracker: #19962)

  - ncs: When parsing the configuration from a CLI device NCS considered
    all characters on a line that followed an exclamation mark (!) as a
    comment, and ignored those characters. This has caused a problem if a
    string contained an unquoted !. This has now been changed such that
    only lines that start with a ! are considered comments when parsing the
    config from a CLI NED device.

    (Issue tracker: #20366)

  - ncs: When creating and moving list items in ordered by user lists, the
    juniper NED would issue multiple edit-config rpcs with a single move
    operation in each edit-config rpc, following the original edit-config.
    (In order to work around the fact that JunOS can not handle create and
    move in a single edit-config). These multiple edit-config operations
    have now been combined into a single edit-config rpc for all the move
    operations.

    Also in some cases (for example when the newly created and moved items
    where relative a deleted item) the issued move operations would be
    relative the wrong item - this has been fixed.

    (Issue tracker: #20646, #18615)

  - AAA: If a PAM module passed PAM_TEXT_INFO messages in the conversation
    function, PAM authentication would eventually stop working, with all
    attempts failing with timeout. The 'epam' program had a memory leak on
    failed authentications, due to not releasing PAM resources in these
    cases. These bugs have been fixed.

    (Issue tracker: #19225)

  - CDB: The "ncs --cdb-debug-dump" command was broken, it has now been
    fixed.

  - CDB: In very rare cases upgrade of cdb operational data could fail with
    the node crashing. This has been fixed.

    (Issue tracker: #18764)

  - CDB: Reading from pre_commit_running (from a CDB subscriber context)
    could return incorrect value for nodes with modified annotations. This
    have now been fixed.

    (Issue tracker: #20298)

  - CLI: Displaying operational data in a table could result in empty rows.
    This has been fixed.

    (Issue tracker: #20087)

  - CLI: When using lists that augments in leafs from other namespaces the
    CLI could sometimes crash when using sort_by pipe-targets. This has
    been fixed.

    (Issue tracker: #20677)

  - CLI: If using drop-node-name on cases within choices an auto-delete
    statement could be triggered. This feature has been removed in favour
    of proper yang-modelling using tailf:cli-diff-dependency reference
    between the cases.

    (Issue tracker: #20351)

  - CLI: When combining tailf:cli-no-value-on-delete and
    tailf:cli-reset-all-siblings extensions the delete command could end up
    in an endless loop. This has been fixed.

  - CLI: Using faulty range-expressions for device access could result in
    crashes when setting device config data. This has been fixed.

  - CLI: If omitting a path when using "show | display xml" the xml would
    use the root level path. This has been fixed to use the current
    relative path.

    (Issue tracker: #18881)

  - CLI: The "show devices list" command would fail with an internal
    error, if there was a device with no device-type set. This has been
    fixed.

    (Issue tracker: #19511, #20674)

  - CLI: set-path in the J-style CLI didn't always work as intended. This
    has been fixed.

    (Issue tracker: #19686)

  - CLI: When using tailf:alt-name the node tags sometimes included
    unnecessary namespace prefixes. A new evaluation of tags is now done to
    possibly remove unnecessary prefixes.

    (Issue tracker: #17525)

  - Cluster: When using dry-run in a cluster some of the device data
    occurred several times and devices were presented in arbitrary order.
    The data now on only occurs once and devices are sorted in system order

  - Documentation: Documentation update, correcting faulty examples

    (Issue tracker: #20396)

  - JSON-RPC: when passing invalid values to set_value on a leaf-list path,
    a crash would occur instead of a invalid value error being returned.
    This has been fixed.

  - JSON-RPC: get_values was treating the path parameter as mandatory. The
    regression has been fixed.

    (Issue tracker: #19392)

  - JSON-RPC: running simultaneous commits would crash the JSON-RPC server,
    rather than just replying with an error message. This has been fixed.

  - JSON-RPC: action parameters defined as list were being sent in reverse
    order, thus making the response of the action partially reversed. This
    has been fixed.

    (Issue tracker: #20229)

  - JSON-RPC: reset_candidate_db method would respond with an error,
    although the candidate_db was successfully reset. This has been fixed.

    (Issue tracker: #19392)

  - JSON-RPC: The run_action method was returning "resource denied: action
    already executing" when running an action under the same keypath more
    than once. This has been fixed by queuing up subsequent run_action
    calls on the same keypath.

  - JSON-RPC: set_value was incorrectly checking not only if the user has
    update permissions, but also create and delete. Failing to have on of
    those three, would fail the method call. This has been fixed.

    (Issue tracker: #20482)

  - Python API: Fix bug where reloading python packages used old package

  - Python API: Fixed problem when installing a new python package and
    doing package reload, the package was listed but not started.

  - SNMP Agent: The synchronization of snmpEngineTime between HA nodes did
    not work unless the system clocks of the involved nodes were
    synchronized before the NCS instances were started. This has been
    fixed.

    (Issue tracker: #20217)

  - Toolchain: The YANG compiler did not handle tailf:key-default correctly
    when the type of the key was not a YANG built-in type, causing errors
    at runtime. This has been fixed.

    (Issue tracker: #20536)

  - Toolchain: The YANG compiler would lose tailf:info/description for
    'enum' and 'bit' statements in types defined within an augment to a
    different module. This has been fixed.

    (Issue tracker: #20480)

  - Toolchain: 'ncsc --mib2yang-std' produced invalid YANG modules for some
    MIBs. This has been fixed.

    (Issue tracker: #19835)

  - Toolchain: If a YANG module had a leafref to another node in the same
    module, which in turn was a leafref to a different module, package
    load/reload could fail, claiming that the target of the first leafref
    didn't exist. This has been fixed.

    (Issue tracker: #20566, #20615)

  - Toolchain: MIB generation and compilation did not give a proper error
    message for missing fxs dependencies. This has been fixed.

    (Issue tracker: #20155)

  - Toolchain: Attempting to add a 'must' statement via a deviation module
    would cause the compilation to fail with "internal error", This has
    been fixed.

    (Issue tracker: #19943, #20144)


NSO-4.0.2.3 [November 9, 2015]
==============================

Corrections:

  - CLI: The CLI command 'commit dry-run outformat native' would in some
    cases produce an incorrect ordering of commands when there had been a
    configuration change in two or more lists on the same level and when the
    lists were annotated with 'ordered-by user' and the YANG extension
    tailf:cli-show-long-obu-diffs. This has been fixed.

    (Issue tracker: #20427)

  - Cluster: A bug in the ssh keepalive timer could in certain situations
    trigger other bugs and cause the cluster code to completely lock up,
    making it impossible to do any further node to node communication within
    the cluster. The bug in the keepalive timer has been fixed, as well as
    the follow up bugs.

    (Issue tracker: #20438)


NSO-4.0.2.2 [October 23, 2015]
==============================

Non-backwards compatible corrections:

  - ncs: If a service moved or deleted existing items in an ordered by
    user list, the order was not reinstated when the service was
    deleted. This has been corrected by storing the needed moves in
    the reverse diff-set to reinstate the initial data.

    Note: this only works if the ordered by user list has not been
    manipulated outside of the service.

    Downgrading to earlier versions, before 4.0.2.2 or 4.0.2 will not
    work for services with reverse diff-sets which contains moves. For
    other services this will work. The error will appear when using
    the diff-set eg. change service data, re-deploy, delete and so on.

    (Issue tracker: #20427)

Corrections:

  - ncs: Integrity check failure in the SSL/TLS server was in some
    cases not handled correctly, resulting in abrupt termination of
    the connection instead of the proper alert processing. This has
    been fixed.

    (Issue tracker: #20560)


NSO-4.0.2.1 [October 8, 2015]
=============================

Corrections:

  - ncs: When a service reordered items in an order by user list this
    led to an internal error. This has now been corrected.

    (Issue tracker: #20427)

  - ncs: YANG models using choices with a default case would never be
    in-sync. This has now been corrected.

    (Issue tracker: #19962)


NSO-4.0.2 [October 5, 2015]
===========================

Non-backwards compatible enhancements:

  - C-API: The libconfd library for the C API, and consequently the ncs_load,
    ncs_cmd, and ncs-maapi programs, could not handle data models having lists
    with more than 8 keys. This limit has now been raised to 17 keys.
    Applications using the C API must be recompiled.

    (Issue tracker: #19494)

Enhancements:

  - Cluster: Added support for configurable SSH keep alive and inter cluster
    connect timeouts.

  - Java API: While the NCS java-vm stops it will no longer report and log
    stacktraces from package components (which are stopping).

  - JSON-RPC: get_schema method would not give information about read access.
    This has been fixed.

    (Issue tracker: #19392)

  - JSON-RPC: The sessionid cookie has been renamed to sessionid_<hostport>,
    thus becoming port specific. This will enable running multiple NCS
    instances behind a proxy, on different proxy ports. Example: running NCS on
    127.0.0.2:8080, exposed via a proxy on 127.0.0.1:82 will use cookie
    sessionid_82 running NCS on 127.0.0.3:8080, exposed via a proxy on
    127.0.0.1:83 will use cookie sessionid_83

    (Issue tracker: #20009)

  - ncs: Support has been added for doing a "system install" that runs
    NCS as a non-root user. Please refer to the description of the
    --run-as-user option in the ncs-installer(1) manual page for details.

    (Issue tracker: #17909, #19658, #19894)

  - ncs: The cli commands sent to a NED can now be controlled with the
    tailf:cli-suppress-no annotation. If a submode has the annotation then NCS
    will not generate a no command for that submode, but instead generate no
    commands for the content of the submode.

  - ncs: Cli and Generic neds with augmented submodules where all visible under
    /ncs:devices/device/config independently of the ned reporting the submodule
    as a capability or not. Now the Ned submodules are augmented under the
    device model with an "display-when" directive that implies that the
    elements from the submodule will only be visible if the ned reports this as
    an capability. One use-case for this enhancement is to have one Ned that is
    capable of working with a range of devices that have/or have not some
    capability that can be modeled as a submodule. At connect the Ned reports
    if a certain capability is available, if not the submodule is not shown.

  - ncs: Existing 'ordered-by user' list entries are now (re)created in the
    order indicated by the FASTMAP create() code.

    (Issue tracker: #19432)

  - SNMP Agent: For performance reasons, the SNMP Agent caches user sessions
    (and read transactions started using those sessions) allocated when
    processing a request and reuses it if additional requests arrive from the
    same IP address and UDP port (and using the same security name). The size
    of this cache effectively limits the number of SNMP Agent user sessions,
    and has been increased from 16 to 32.

    (Issue tracker: #19882)

  - Toolchain: It is now possible to override the prefix, automatically
    derived by the ncsc --mib2yang-std command, by means of a --prefix
    flag.

    (Issue tracker: #19408)

  - XPath: The XPath engine now optimizes path expressions that has predicates
    with the compare() and string-compare() functions; in a similar fashion to
    the way comparison operators are optimized for numerical keys. I.e.
    whenever possible the XPath engine will try to use the predicates to
    perform a find_next() when looking for the first entry, and if possible
    stop iterating.

    (Issue tracker: #19614)

Non-backwards compatible corrections:

  - Java API: japi ConfPath.toString() would in all circumstances present keys
    containing enumerations with its canonical toString value "Enum(i)". This
    is now changed so the corresponding label is presented if possible. As such
    this is an backward incompatibility but it makes the resulting string
    eligible(valid) for other calls and causes less problems. One major problem
    that is correction will solve is when applying service templates from java
    code where the service is a list keyed on one or many enumerations.

    (Issue tracker: #20153)

  - ncs: If the preLockCreate() function was used for a service implementation,
    deletion of service instances was also done before the transaction lock was
    acquired, even though preLockCreate() (or create()) is not invoked for
    deletion of a service instance. This has been fixed - deletion of service
    instances is now always done after the transaction lock has been acquired.

Corrections:

  - CLI: An extra no command would be generated towards a CLI NED for a
    leaf was 'hidden' inside a flattended container with hide-in-submode.
    This has been fixed.

  - CLI: Buffer overflow (pasting in more than 1024 characters) when executing
    an osCommand from the CLI for every time but the first would lead to the
    CLI hanging. This has been fixed.

    (Issue tracker: #19555)

  - CLI: In the C-style CLI; leaf-prompting did not work as expected for input
    parameters to a tailf:action. This has been fixed.

    (Issue tracker: #19993)

  - CLI: The "show devices list" command would fail with an internal error, if
    there was a device with no device-type set. This has been fixed.

    (Issue tracker: #19511)

  - CLI: When an ambiguous error was received in the CLI this could result in
    an internal error. This has been fixed.

    (Issue tracker: #19735)

  - CLI: The extensions tail:incomplete-no and tailf:sequence-command would not
    always work in combination. This has been corrected.

    (Issue tracker: #19778)

  - Cluster: When running NCS in cluster mode, a problem in startup
    synchronization of the cluster feature could some times cause internal
    errors. This has been fixed.

  - Erlang API: The pre_lock_create service callback was never invoked for a
    service implemented via the Erlang API. This has been fixed.

  - Java API: Japi - ConfXMLParam.toXMLParams() and the underlying
    XMLtoConfXMLParam parser was broken. The old parser is now replaced with
    the NavuParser. The interface is still backward compatible.

    (Issue tracker: #19566)

  - JSON-RPC: the commit method takes in a timeout parameter, but it was always
    set internally to 0, thus making a confirmed commit impossible. This has
    been fixed.

    (Issue tracker: #19491)

  - JSON-RPC: the query and start_query methods were out-of-sync with the
    documentation which stated that result_as is an optional parameter that
    defaulted to "string". That was not the case. This is now fixed.

  - ncs: A combination of confirmed commit and HA state transition
    could cause an internal error. This has now been fixed.

    (Issue tracker: #20039)

  - ncs: A template can now be applied from Java with the root context set to
    '/'.

    (Issue tracker: #19654)

  - ncs: Corrected handling of list elements with multiple keys in templates.
    When one of the keys was a node-set and an other key was an single vale, as
    a result from an expression, the single value was not replicated to match
    the number of keys in the node-set. This has now been corrected.

  - ncs: Corrected handling of service meta-data, back-pointers and
    reference-counters when more than one service manipulated the same data.
    Before configuration data might get removed when a service was deleted or
    re-deployed even if other services were using the same data.

  - ncs: In some cases compare-config would print a conflict when a leaf was
    set its default value in NCS and on the device. This bug has been fixed.

  - ncs: NCS failed to load template XML when mixed content occurred in the
    'config-template' node, this has now been corrected. Mixed content is not
    supported at all.

  - ncs: Notifications from devices that had the same timestamp were stored and
    forwarded multiple times. This has been fixed.

  - ncs: Requesting to apply a template as an action in a transaction hook lead
    to a deadlock. This has been corrected.

    (Issue tracker: #19487)

  - ncs: SSH connection handlers could leak under certain conditions - this has
    been fixed.

  - ncs: When 'ordered-by user' lists were replaced in templates the new
    ordering was lost. This has now been corrected.

    (Issue tracker: #18995)

  - ncs: When configuration was replaced by a service through a template the
    original configuration was not restored when the service was deleted. This
    has now been corrected.

    (Issue tracker: #18972)

  - ncs: The tailf:cli-diff-dependency could yield different results
    in different contexts (and in some cases not work at all). For
    example: when used in a CLI NED this could result in CLI commands
    being sent in a different order in an ABORT than in a
    rollback. This has now been fixed.

    (Issue tracker: #18456)

  - NED: The order of delete commands would not always be correct if the NED
    data model had list nodes with the tailf:cli-suppress-mode and
    tailf:cli-display-separated annotations. Dependencies would not be taken
    into account correctly. This has been fixed.

    (Issue tracker: #20015)

  - NETCONF: If a netconf notification contains an identityref leaf, and is
    sent with a value from a different namespace than the notification itself,
    it was not properly prefixed by the Netconf server. This has been fixed.

    (Issue tracker: #18248)

  - REST API: Fix for problem in handling namespaces for JSON array

    (Issue tracker: #19599)

  - REST API: Fix formatting of error when operation is blocked by NACM rule

    (Issue tracker: #18718)

  - REST API: The maxValidationErrors setting now affect error count in REST
    responses. Using the value 'unbounded' translates to max 32 errors.

    (Issue tracker: #18718)

  - REST API: When setting the same value to unique leaf using ReST, the
    content of the error-message field contains the newlines which cause
    parsing error to some external JSON validator. This has been fixed

    (Issue tracker: #20307)

  - REST API: When using JSON payload, action input parameters were not
    correctly validated. This has been fixed.

  - SNMP Agent: When an SNMP SET operation with several variabels failed with
    error-status genErr, the wrong variable was returned as the cause of the
    failure in the error message. This has been fixed.

    (Issue tracker: #19852)

  - Toolchain: Having tailf:snmp-oid on config false nodes could lead
    to internal error in ncsc. This bug has been fixed.

    (Issue tracker: #19502)

  - Toolchain: Annotation in augmented nodes now works.

    (Issue tracker: #19343)

  - Toolchain: If a "must" statement was annotated to an augmented node, ncsc
    would fail with an internal error. This bug has been fixed.

    (Issue tracker: #19758)

  - Toolchain: If a leafref had a reference to a list key in another module,
    but the refrence did not have the correct module prefix, ncsc would fail to
    detect this, and NCS would crash at startup. This bug has been fixed.

    (Issue tracker: #19950)

  - Toolchain: It is now possible to annotate a tailf statement.

    (Issue tracker: #19583)

  - Toolchain: ncsc would in some cases complain that given tailf:dependencies
    were wrong in a device model if the XPath expression contained absolute
    paths. This bug hasn been fixed.

  - Toolchain: The revision merging functionality of 'ncsc
    --ncs-compile-bundle' did not work with the new YANG compiler introduced in
    NCS-3.4, typically producing fxs files that could not be loaded by NCS.
    This has been fixed.

    (Issue tracker: #20027)


NSO-4.0.1 [August 27, 2015]
===========================

Enhancements:

  - CLI: The CLI history can now be saved between CLI sessions. A new
    ncs.conf option, /cli/history-save{true/false}, has been added to
    control this behavior. The history is saved in the state directory.
    Default set to true. The 'clear history' command can be used to reset
    the history.

    (Issue tracker: #19867)

  - CLI: A new option '/ncs-config/cli/show-subsystem-messages' has been
    added to ncs.conf. If set to "true" the CLI will display a system
    message whenever a connected daemon is started or stopped.

    (Issue tracker: #19705)

  - CLI: The YANG extension tailf:cli-expose-key-name can now be used in the
    J-style CLI.

    (Issue tracker: #14963)

  - CLI: During auto completion it is now possible to press question mark
    (?) key and the CLI will provide information if an expression is
    currently a valid or invalid range-expression. This only happens if the
    current keyword supports range-expressions.

  - CLI: When just pressing return when prompted for an enumeration field,
    the CLI used to re-prompt for a value. This has been modified so that
    just pressing return means no modification, a behavior similar to other
    data entry points in the CLI.

    (Issue tracker: #16483)

  - Erlang API: econfd:log function has been added to the Erlang API.

  - Java API: The Java class Conf.java now has a flag DB_OPERATIONAL that
    can be used in Maapi.startTransaction() to create writable operational
    data transactions.

  - Java API: The NavuCdbSubscriptionXXXContext classes now have a
    getSubscriptionFlags() method so that the CDB subscription flags can be
    read from inside an iterator.

    (Issue tracker: #19236)

  - JSON-RPC: In order to prevent denial of service attacks, the JSON-RPC
    now limits the number of ongoing commands/subscriptions to 10000.

    (Issue tracker: #19157)

  - ncs: NCS now uses dedicated threads for file I/O, to minimize the risk
    that blocking I/O operations completely block the NCS process.

  - ncs: Added support for embedded Erlang applications. The applications
    can make use of the same econfd API regardless of they are running in
    the same Erlang VM as NSO or if they are running in a separate VM.

  - ncs: Service check-sync on a service that deploys thousands of list
    entries was very slow. This has now been improved.

    (Issue tracker: #19140)

  - ncs: Abort and revert operations are now run in parallel. This fix
    significantly decreases the time to abort and revert, especially for
    NETCONF devices.

    (Issue tracker: #19231)

  - ncs: In the NSO system installation, the 'ncs-collect-tech-report'
    script can be used to gather logs and a problem description that can be
    sent to the Cisco support for analysis.

  - ncs: Added 'debug template' to 're-deploy' and 're-deploy dry-run'.
    This is an enhancement which gives service developers extra debugging
    output when re-deploying a service using templates.

    (Issue tracker: #19188)

Non-backwards compatible corrections:

  - Java API: CdbSubscriber.getLatestSubscriptionFlag() is deprecated since
    it wrongfully assumes that there is only one flag set for the
    subscription. Use the new CdbSubscriber.getFlags() instead.

    (Issue tracker: #19236)

  - NED: Changed usage of /devices/device/connect-timeout in NED code.
    This setting was previously used as an idle timeout on a socket. If no
    traffic had occurred during this time the socket would be closed. Now
    connect-timeout behaves as stated in the YANG file: Timeout in seconds
    for new connections.

    (Issue tracker: #17482)

  - Web Server: SSL renegotiation disabled to fix a security problem
    (CVE-2009-3555).

    (Issue tracker: #19224, #19698)

Corrections:

  - CDB: If CdbSubscription.diffIterate() processing for operational data
    required the evaluation of a YANG 'when' statement, an internal error
    would terminate the iteration and close the subscription socket. This
    has been fixed.

  - CLI: The presence of a zone index attached to the IP address in
    the environment variable SSH_CONNECTION would cause the ncs_cli
    program to terminate. This has been fixed.

  - CLI: When modifying choice element in the configuration the check for
    switching of a case could result in an internal error. This has been
    fixed.

    (Issue tracker: #19056)

  - CLI: Auto completion of lists with tailf:cli-flat-list-syntax could
    result in requests for brackets even though none are expected for this
    extension, and on older versions an internal error would occur. This has
    been fixed.

    (Issue tracker: #19193)

  - CLI: Using "insert X after Y" on list elements didn't work when using
    the tailf:cli-multi-word-key extension. This has been fixed.

  - CLI: Using the YANG extensions tailf:cli-remove-before-change and
    tailf:cli-reset-container in combination would in some cases result in
    an incorrect configuration change. This has been fixed.

  - CLI: Performance has been improved when calculating commands to send to
    CLI NED. Previously, when calculating dependencies the internal
    algorithm would generate a large number of potential paths to process
    where most paths were irrelevant. This has now been fixed such that
    irrelevant paths are pruned early in the process, thus avoiding
    unnecessary processing.

    (Issue tracker: #19496)

  - CLI: Leaf prompting the user in non-interactive CLI mode has been
    disabled.

    (Issue tracker: #19696)

  - CLI: In rare cases an extra command was issued by CLI engine for
    'ordered-by user' lists with tailf:cli-show-long-obu-diffs extension.
    This has been fixed.

    (Issue tracker: #19068)

  - Examples: The vm-manager-esc package in the virtual-mpls-vpn example had
    a bug that could result in a deadlock. A maapi transaction was committed
    inside a CDB subscriber thread. This has been fixed.

  - Examples: examples.ncs/getting-started/developing-with-ncs/10-webui-
    customization was outdated for NCS-3.4 releases and beyond. It has now
    been removed.

  - Java API: Creating/updating list elements on operational data lists
    without keys were not possible using XML. Such lists need a pseudo-key
    to be specified. This is now possible using a synthetic tag
    "tailf-navu-pseudo-key" in the XML data. See the JavaDoc on
    NavuContainer.set() or NavuList.set().

  - Java API: NavuNode.getChange() did not handle deleted nodes when
    creating diffset as NavuNodes. A NullpointerException was thrown. This
    has been fixed.

    (Issue tracker: #15902)

  - Java API: NavuChoice did not correctly handle nested choices where the
    subchoice was augmented. This has been fixed.

    (Issue tracker: #18874)

  - Java API: ConfPath.toXPathString() did throw NullPointerException for
    augmented paths. This has been fixed.

    (Issue tracker: #18616)

  - Java API: ResourceManager could throw unhandled NullPointerException in
    Debug logging mode. The cause of this would be when any Resource Managed
    class would throw NullPointerException from its toString() method. These
    exceptions are now handled (ignored) in debug logging.

    (Issue tracker: #19027)

  - Java API: NavuLeaf.set() did NullpointerException instead of the
    correct error message in attempting to set duplicated values on a
    leaflist. This has been fixed.

    (Issue tracker: #19404)

  - Java API: For NavuContext(CDB) the lock control of sessions was
    inadequate and resulted in unexpected behavior. NavuContext now have
    three methods to control Navu CdbSession locks: setReadOperLocks(),
    setReadConfLocks() and setWriteOperLocks(). Normally the default lock
    should be sufficient and none of these need to be used.

    Also the old setLockingMode() has been deprecated as well as all the old
    getCdbSession() methods(). These are normally not used other than
    internally by Navu. These are now replace by new equivalents.

    For more on this see JavaDoc for NavuContext class.

    (Issue tracker: #14198)

  - JSON-RPC: Elements that were not conditionally not displayed, or hidden,
    could still be accessed through JSON-RPC. This has been fixed for all
    the methods, except the get_schema which will be fixed in a future
    release.

    (Issue tracker: #19129)

  - JSON-RPC: Login passwords were logged in the developer log. This has
    been fixed.

    (Issue tracker: #19645)

  - JSON-RPC: Running an action that had a leaf-list as an argument would
    crash the JSON-RPC server. This has been fixed.

  - JSON-RPC: Creating a leaf poller (stats subscription) and then stopping
    its transaction would end up in a crash. This has been fixed.

    (Issue tracker: #17417, #18777)

  - JSON-RPC: Augmented nested choice statements could produce a crash in a
    call to the get_case JSON-RPC method. This has been fixed.

  - JSON-RPC: get_leafref_values would fail due to an internal error. This
    has been fixed.

  - JSON-RPC: Hidden groups were not handled properly when loading a
    rollback. This has been fixed.

  - JSON-RPC: An error in subscribe_cdboper would cause the subscriber to
    fail silently. This has been fixed.

  - JSON-RPC: init_cmd did not start automatically when a client handle was
    given. This has been fixed.

  - JSON-RPC: The show_config method would fail with internal error on large
    (> 100kb) configs. This has been fixed.

    (Issue tracker: #19259)

  - JSON-RPC: put_session_data calls were not saving the value properly,
    leading to an undefined value for a subsequent get_session_data call.
    This has been fixed.

    (Issue tracker: #19426)

  - JSON-RPC: The run_cmd method was requiring the args parameter. It now
    defaults to an empty string, and thus it is optional.

  - JSON-RPC: Stopping a command/subscription did not trigger a "stopped"
    notification on the comet channel. This has been fixed.

    (Issue tracker: #19659)

  - JSON-RPC: subscribe_cdboper would crash when given an invalid path. This
    has been fixed.

    (Issue tracker: #19392)

  - JSON-RPC: The get_cmds method was resulting in an internal error. This
    has been fixed.

    (Issue tracker: #19415)

  - ncs: If an event notification subscriber was slow enough to read its
    notifications to make NCS consider the notification delivery blocked, in
    rare cases a race condition could make NCS crash. This has been fixed.

    (Issue tracker: #18987)

  - ncs: If a hash collision with a 'case' or a 'choice' node in a different
    YANG module was detected at load time, NCS would terminate with
    "internal error". This has been fixed, now a proper error message is
    given in this case.

    (Issue tracker: #18961)

  - ncs: Empty choice statements accessed with NCS cluster or NCS
    live-status caused an internal error. This has been fixed.

    (Issue tracker: #19361)

  - ncs: The NCS disconnect action could sometimes return internal error.
    This was dependent on existing connections to live-status tree, thus
    only occurred intermittently.

  - ncs: Leaf-lists were updated incorrectly in a cluster environment. This
    has been fixed.

    (Issue tracker: #19374, #19418, #19486)

  - ncs: If a symlink had tailf:inherit-set-hook, set-hooks further down in
    the symlink target tree would not be invoked. This has been fixed.

    (Issue tracker: #18662)

  - ncs: Streams with replay support set to false didn't work properly when
    HA was enabled. This has been fixed.

    (Issue tracker: #19327)

  - ncs: If a device model had a tailf:action augmented from one YANG module
    to another, invocation of the action from NCS would fail with RPC error
    "unknown_element" (if no arguments were passed to the action), or with
    "internal error". This has been fixed.

    (Issue tracker: #18920)

  - ncs: If a list had a 'when' expression that referred to a leaf, and the
    leaf was set and deleted in the same transaction, the list instances
    would not be properly deleted. This has been fixed.

    (Issue tracker: #19209)

  - ncs: If an entry in an 'ordered-by user' list was created at a position
    other than the last one (e.g. via the CLI 'insert' command), or created
    and moved in the same transaction, the moveAfter() data callback was not
    invoked for transforms and transaction hooks. This has been fixed.

    (Issue tracker: #19045)

  - ncs: NCS rejected all replies to the getCase() data callback for a
    'case' in an augmented 'choice' with "Bad case value" in the developer
    log. This has been fixed.

    (Issue tracker: #19401)

  - ncs: If we have an RFS service, which creates NETCONF subscription
    entries, and several service instances create the same subscription
    entry, NCS sent multiple subscription RPCs to the device, although the
    second subscription entry creation should have been a no-op. This has
    been fixed.

  - ncs: A bug prevented the HA controller package (tail-hcc) to get status
    from the slave nodes. This has been fixed.

  - ncs: apply-template on device groups now works from NETCONF and REST.

    (Issue tracker: #19639)

  - ncs: NCS produced an internal error when reporting detected module
    capabilities with mismatching revisions. This has been fixed.

    (Issue tracker: #19958)

  - ncs: /devices/connect action could result in "Internal error" in some
    cases when device's hostname could not be resolved. The error message
    has been improved.

    (Issue tracker: #19464)

  - NETCONF: If an action was augmented into another module, invoking the
    action via NETCONF would fail with "operation-failed". This has been
    fixed.

    (Issue tracker: #18920)

  - Python API: Added missing Python MAAPI function authenticate2.

    (Issue tracker: #19533)

  - REST API: The REST server was crashing when receiving request over HTTPS
    (SSL was enabled), unless the web UI was enabled as well in ncs.conf.
    This has been fixed.

    (Issue tracker: #19161)

  - REST API: The REST server would crash when there was an empty user or
    password given in the Authentication HTTP header. This has been fixed.

  - REST API: Fixed hanging HTTP request when using REST RPC to stop ncs.
    Will now answer with HTTP 500 "Server going down".

    (Issue tracker: #19430)

  - REST API: Fixed problem when selecting inner nodes which augments the
    parent node. For example, a select query like

      http://example.com/api/config/someContext/default?select=parent;inner(*)

    where the inner node is augmenting the parent node.

    (Issue tracker: #14537)

  - REST API: Fixed bug in REST API where actions could be invoked without
    the _operations in the path to the action.

  - REST API: Fixed problem where when-expressions weren't evaluated.

    (Issue tracker: #19309)

  - REST API: Fix for moving an ordered-by user list entry using JSON
    with the REST API.

    (Issue tracker: #19282)

  - SNMP agent: If the SNMP traffic log (snmp-log) was enabled in ncs.conf,
    entries would be printed in ncserr.log. This has been fixed.

    (Issue tracker: #19722)

  - Toolchain: If a YANG 'choice' with a default 'case' was augmented from
    another module, attempting to create the closest-ancestor list entry or
    presence container would make the transaction crash with "internal
    error". This has been fixed.

    (Issue tracker: #19413)

  - Toolchain: Range values between -1 and 1 for YANG decimal64 types
    imported from another module would cause the compiler to crash with
    "internal error". This has been fixed.

    (Issue tracker: #19440)

  - Toolchain: If a YANG module augmented config nodes under a node in
    another module that was provided by a transform, transform write
    callbacks for the augmented nodes were never invoked. This has been
    fixed.

    (Issue tracker: #19393)

  - Toolchain: If an augmented list used tailf:secondary-index, the YANG
    compiler would fail to locate the index-leaves. This has been fixed.

    (Issue tracker: #19535)

  - Toolchain: If a device model had a non-presence toplevel container and a
    child list with 'min-elements' greater than 0, ncsc would fail to
    compile it. This has been fixed.

  - Toolchain: The type information created by the YANG compiler for the
    case of a leafref to a node in the same module, with a type imported
    from another module, was not complete. This has been fixed.

    (Issue tracker: #18902)

  - Toolchain: If a node had a tailf:dependency statement that referred to a
    node in some other module, and the node was annotated, compilation would
    fail. This has been fixed.

    (Issue tracker: #19585)

  - Toolchain: The YANG compiler did not implement the choice/case semantics
    correctly for nodes augmented into a 'case' in a different module (e.g.
    setting the value of an augmented leaf did not affect the case
    selection). This has been fixed.

  - Toolchain: If a YANG module used a grouping defined in another module in
    an rpc or notification, ncsc compilation would fail with an error
    "grouping 'ncs_rpc_notif_xxx' in module 'yyy' not found". This has been
    fixed.

  - Toolchain: It was not possible to load a YANG module that augmented a
    "nested" 'choice' (i.e. a choice that is a direct child of a 'case') in
    another module. This has been fixed.

    (Issue tracker: #19394)

  - Web server: The server would crash when an HTTP request would have an
    unknown HTTP version. This has been fixed.

  - Web server: The web server would go in an infinite loop when a redirect
    to '.' would take place. This has been fixed.

    (Issue tracker: #19804)

  - Web UI: (un)hide_schema functions were failing by complaining about
    missing parameter "groupname". "group_name" was the correctly expected
    parameter. This has been fixed.

    (Issue tracker: #19424)


NSO-4.0 [June 22, 2015]
=======================

Removals:

  - Java API: The old and deprecated NedConnection, NedCli and NedGeneric
    Java interfaces have been removed. Instead the abstract base classes
    NedConnectionBase, NedCliBase and NedGenericBase should be used as well
    as the NedCliBaseTemplate if applicable.

    Old NEDs still referring to the interfaces must be changed to respective
    base class.

  - ncs: Support for rollback type 'full' has been removed, since it is
    incompatible with use of the preLockCreate callback. Additionally, using
    full rollbacks is not feasible for performance reasons in typical NCS
    deployments.

  - ncs: The NCS candidate db_mode, i.e. running NCS itself with the
    candidate, has been deprecated for several NCS releases, and has now
    been removed. NCS will no longer accept to run with the candidate.

Non-backwards compatible enhancements:

  - AAA: The default AAA configuration now denies all direct access to
    /aaa/authentication/users/user/password in interactive sessions for
    users that are not members of the 'admin' group. An action
    /aaa/authentication/users/user/change-password has been added, to allow
    such users to change their own local password.

  - JSON-RPC: On uncaught errors, the session used to crash, and redirect
    the user to the login page. This behavior has changed towards allowing
    the user to recover from such an error (if possible). The session will
    not crash any more, but instead send an internal error message.

    (Issue tracker: #16757)

  - ncs: The installer file is now called nso-VERSION.OS.ARCH.installer.bin

    Cisco Network Service Orchestrator (NSO) enabled by Tail-f version 4.0
    is an evolution of the Cisco acquired company Tail-f Systems' flagship
    product called Network Control System or NCS. Throughout the product and
    its documentation this product will be referred to as NCS.

  - ncs: Several security improvements have been done for the initial
    "system install" of NCS:

    - No default users are created (user names and passwords need to be
      given at installation)

    - No default SNMP communities or users are created.

    - No default entries in /devices/authgroups or /cluster/authgroup are
      created.

    - HTTP access is disabled for web UI and REST. HTTPS is enabled, but
      uses a self-signed certificate (see
      /ncs-config/webui/transport/ssl/key-file and
      /ncs-config/webui/transport/ssl/cert-file in the ncs.conf(5) manual
      page regarding certificate installlation).

    - Randomized keys are generated for /ncs-config/encrypted-strings in
      ncs.conf.

    - Access is restricted for security-critical files (ncs.conf, SSL and
      SSH key files).

  - Python API: The Python API has been redesigned and enhanced.

      Modules are renamed according to this table:

      Old module name | New module name
      ----------------+----------------
      ncs             | _ncs
      ncs._cdb        | _ncs.cdb
      ncs._constants  | <removed> (*)
      ncs._dp         | _ncs.dp
      ncs._error      | _ncs.error
      ncs._lib        | _ncs (*)
      ncs._maapi      | _ncs.maapi
      ncs.types       | _ncs (*)

      *) Everything in the _constants, _lib and types modules are moved into
         the _ncs top module.

    New modules added: _ncs.events and _ncs.ha

    Also note that constants previously residing in a <submodule>.const
    module is now moved in directly under <submodule>.

    The old high-level MAAPI API (ncs.maapi) is deprecated but still
    available as _ncs.deprecated.maapi.

    API documentation is available through pydoc - run 'pydoc _ncs'
    in a shell.

    See the "Cisco Network Services Orchestrator 4.0 Highlights"-document
    for details.

  - Web server: Support for EC (elliptic curve) cipher suites has been added
    for the SSL/TLS server, and suites using DES, RC4, or MD5 are no longer
    enabled by default. The set of enabled cipher suites can be configured
    via /ncs-config/webui/transport/ssl/ciphers in ncs.conf.

Enhancements:

  - C-API: NCS service callbacks and MAAPI FASTMAP functions have been added
    to the C API.

  - CLI: A new ncs.conf option '/ncs-config/cli/prompt-sessions-cli' has
    been added. If set to "true" then only the current CLI sessions will be
    displayed when the user tries to start a new CLI session and the maximum
    number of sessions has been reached. Note that MAAPI sessions with their
    context set to "cli" would be regarded as CLI sessions and would be
    listed as such.

    (Issue tracker: #17495)

  - CLI: When using star-character in the keys when fetching data from a
    data provider the fetch would always result in a wildcard search. By
    backslashing the star (*) in the key a direct key fetch (no wildcard
    search) can now be performed.

    (Issue tracker: #18530)

  - CLI: The ping6 os-command has been added to the standard set of commands
    available in ncs.

    (Issue tracker: #17974)

  - Cluster: Actions in an NCS cluster setup are now parallelized.

  - Java API: For NEDs the new callbacks initialize() and uninitialize()
    have been introduced. These have a generic implementation in the
    NedConnectionBase abstract class and the change is therefore backward
    compatible. For more on the semantics of initialize() and uninitialize()
    see the Javadoc.

  - Java API: The NedWorker.setPlatformData() method and relevant NCS device
    model change have been introduced to be able to set NED inventory data
    in a user extendable way. See the Javadoc for
    NedWorker.setPlatformData() for more information on this.

  - JSON-RPC: The implementation of the JSON-RPC API only allowed one method
    to be executed at a time. Most of the methods are now allowed to be run
    in parallel.

  - JSON-RPC: The new get_subscriptions method will list all ongoing
    subscriptions and their meta-data. The new get_cmds method will list all
    ongoing batch commands and their meta-data. See documentation for input
    parameters and response structure.

  - JSON-RPC: All JSON-RPC requests are now audited.

  - JSON-RPC / JSMAAPI: The implementation of dealing with change
    subscribers was buffering too much redundant data. This has been fixed
    in order not to misuse memory for large changes that the user didn't
    subscribe to.

    (Issue tracker: #18376)

  - ncs: A service preLockCreate() function has been added, to allow service
    creation for different instances to run concurrently in certain
    circumstances. Refer to the section "FASTMAP pre-lock create option"
    under "Advanced Mapping Techniques" in the "Developing NCS Services"
    chapter of the "NCS Development" book for detailed usage information.

  - ncs: Optimization of template code. A performance gain of around 25% has
    been achieved for plain templates consisting of create/set of instance
    elements.

  - ncs: Added get-attributes custom NETCONF RPC for improved performance.

  - ncs: SSH session handling has been corrected and improved.

  - ncs: Leaf lists (C_LIST) are now iterable in the Python API.

    (Issue tracker: #17038, #17929)

  - ncs: FASTMAP related internal data, .../private/diff-set and
    .../private/forward-diff-set, is now replaced by the string: "Internal
    binary FASTMAP data" in the audit log when audit-log-commit is enabled.

    (Issue tracker: #18687)

  - ncs: The internal regexp library has been updated to libxml2 version
    2.9.2.

  - Toolchain: NCS compilation of NED modules now uses the new YANG compiler
    for its rewrite step, meaning that NED module compilation is faster than
    before.

Non-backwards compatible corrections:

  - CLI: The output of the 'show devices list' and 'show devices brief'
    commands has changed slightly. There is now only one NED ID
    column, and for remote nodes in a cluster only the ADDRESS field
    is shown, and only as remote:<cluster node>. The command is
    now much faster when run in a cluster.

  - Java API: The semantics of the isAlive() method has been strengthened in
    the NED interface. Whenever isAlive() is called it shall return true if
    the underlying device connectivity is uphold. From now the isAlive()
    check will be called for all new connections and this will produce an
    backward incompatibility for NEDs that in earlier versions had an
    implementation that unconditionally returned false. Such user built NEDs
    must change their implementation, if not to something more elaborate, at
    least to unconditionally return true.

    Some NEDs delivered for NCS are also affected by this error and for
    these NEDs a new version must be obtained. This must be done for the
    following NEDs:

      affirmed-acuitas
      cisco-apic
      cisco-pnr
      cisco-qps
      citrix-netscaler
      infinera-dtnx
      juniper-contrail
      nominum-ncs
      openstack-cos
      paloalto-panos
      tailf-hcc
      vmware-vshield

Corrections:

  - CDB: Fixed an issue where normal subscribers that were (re)started after
    a two phase subscriber had been notified were prevented from getting any
    notifications until a two phase subscriber had been run again.

    (Issue tracker: #18454)

  - CLI: Executing a 'show' command with the pipe-target 'context-match'
    would in some cases lead to an internal error. This has been fixed.

  - CLI: Multiple exit commands were generated on 'show configuration' if a
    leaf was modified inside a container/list that had
    tailf:cli-explicit-exit. This has been fixed.

  - Documentation: The clispec element
    'clispec/$MODE/cmd/callback/exec/options/pty' was missing from the
    clispec(5) manual page. This has been fixed.

    (Issue tracker: #17160)

  - JSON-RPC: start_cmd method could crash the session when the command
    couldn't be started. This has been fixed.

  - JSON-RPC: A previous fix to the AAA rules made it so get_schema would
    return access:create and access:delete=false for presence containers.
    This has been fixed.

    (Issue tracker: #18915)

  - ncs: When attributes were set in the service create callback method
    on non presence containers these attributes were lost, and also
    subsequent operations done in the create. This has been fixed.

  - ncs: If a module augmented a tailf:hidden node, or a node with
    tailf:cli-case-*, ncs would fail to load that module during startup.
    This has been fixed.

    (Issue tracker: #18678)

  - ncs: Handle timeout during reading from an SSH connection to avoid a
    hang waiting for data that will never arrive.

    (Issue tracker: #18345)

  - ncs: Tag "delete" in a template was not acknowledged on non presence
    container. This has been fixed.

    (Issue tracker: #19008)

  - ncs: Re-deploying a service with sub-services would always cause the
    sub-services to be re-deployed as well, even when no changes were
    made to the input parameters of that service. This has been fixed.

    Support has also been added for modifying the private/diff-set,
    private/forward-diff-set, and private/property-list of a service
    without triggering a re-deploy. If re-deployed is desired when
    modifying any of those settings, either call the re-deploy action
    explicitly or increase the value of the private/re-deploy-counter.
    Note that if only deletes are performed in the private tree, then
    they will be restored. If you want to delete some element under
    the /private tree you must also set some other leaf, for example,
    add a property to the property-list.

  - ncs: Package reload would not completely update the data model
    information used when applying templates, requiring a restart of NCS.
    This has been fixed.

    (Issue tracker: #18766)

  - ncs: If a device data model had mandatory nodes in a grouping used at
    the top-level, or mandatory nodes in a presence container,
    'ncsc --ncs-compile-module' would fail to compile the module. This has
    been fixed.

    (Issue tracker: #17924)

  - ncs: If a data model had a node with a 'must' expression under another
    node that also had a 'must' expression, it would in some cases be
    possible to set the inner node to an invalid value, if 'validate' was
    called multiple times from the CLI. This has been fixed.

  - ncs: Lists with tailf:sort-order SNMP or SNMP-IMPLIED were sometimes
    sorted in an incorrect manner. This has been fixed.

    (Issue tracker: #18491)

  - ncs: Garbage before the first element in a template XML file led to an
    internal error. This has been fixed.

    (Issue tracker: #19001)

  - ncs: If an XML edit is sent to NCS (e.g., via NETCONF or ncs_load), and
    it has the attribute yang:insert "before" or "after" but no yang:key
    attribute, a proper error message is now generated.

    (Issue tracker: #18952)

  - NED: If a NED defined config data by defining a top-level "uses"
    statement, that data would be visible for configuration in all devices
    regardless of NED types. This has now been changed so that it is
    visible only to the devices of the correct NED type.

    (Issue tracker: #18907)

  - NED: Fixed problem with ordering of CLI commands in CLI NEDs when the
    order was governed by a diff-dependency.

    (Issue tracker: #18898)

  - NETCONF: Even if a module was compiled with a subset of the defined
    features, NCS would advertise all features. This has been fixed.

    (Issue tracker: #18779)

  - REST API: HTTPS (SSL) request authentication stopped working in NCS-3.4.
    This has been fixed.

    (Issue tracker: #18904)

  - REST API: The resulting error message when the JSON payload in a
    request had a faulty string syntax presented the bad character in ASCII
    code. Now it is a readable character instead.

    (Issue tracker: #18862)

  - REST API: CORS preflight requests were blocked by the REST API. This has
    been fixed.

  - Toolchain: The YANG compiler did not correctly handle the case of a
    leaf-list of a typedef from a different module, when the typedef was of
    type leafref. The resulting type information had incorrect semantics and
    caused schema loading to fail. This has been fixed.

    (Issue tracker: #18794, #19134)

  - Toolchain: If a leaf had a tailf:non-strict-leafref and an imported
    type, NCS would fail to load that module. This has been fixed.

  - Toolchain: If a NED data model had a leaf that used a typedef of type
    leafref, NCS would fail to load such a model. This has been fixed.

  - Toolchain: NCS would fail to start in some cases where data models have
    paths with unnecessary "..". This has been fixed.

    (Issue tracker: #18908)

  - Toolchain: ncsc would fail to compile an annotation module that imported
    a module that augmented the annotated module. This has been fixed.

    (Issue tracker: #18845)

  - Toolchain: In some 'must'/'when' expressions with complex predicates,
    the automatic dependency calculation would return wrong dependencies,
    causing compilation to fail. This has been fixed.

    (Issue tracker: #18865)

  - Toolchain: If a tailf:annotate statement had an if-feature substatement,
    and the feature was enabled, ncsc would fail with an internal error.
    This has been fixed.

    (Issue tracker: #18998)

  - Toolchain: The YANG compiler did not handle the case of a leafref to a
    leaf-list in the same module correctly: if the leafref source was a
    leaf, CLI completion would give an error, if the leafref source was a
    leaf-list, all values would be rejected as invalid at commit. This has
    been fixed.

    (Issue tracker: #18914)

  - Toolchain: If a module had a node with an if-feature that referenced a
    feature defined in an imported module, and the module was compiled
    without that feature, the fxs file would have that node anyway. This has
    been fixed.

    (Issue tracker: #18566, #18935)

  - Toolchain: When running 'ncsc --emit-mib', augmented material would not
    be reflected in the resulting MIB file. This has been fixed.

    (Issue tracker: #18966)

  - Toolchain: If a submodule declared a symlink with a path to a namespace
    not imported in its main module, the symlink would be reported as having
    an invalid path specification when the main module was loaded in NCS or
    used for compiling a MIB. This has been fixed.

    (Issue tracker: #18922)

  - Toolchain: ncsc now keeps tailf:transaction-hooks in cli- and generic-
    neds.

    (Issue tracker: #18604)

  - Toolchain: tailf:export can now be used in tailf:annotate-module.

    (Issue tracker: #18721)

  - Toolchain: NCS cannot handle top-level choices. The ncsc compiler now
    detects this, and gives an error.

  - Toolchain: ncsc would allow models with an empty 'input' or 'output'
    statement. This has been fixed.

  - Toolchain: ncsc now gives an error if a submodule is compiled.

  - Toolchain: ncsc would in some cases print a warning about
    tailf:dependency paths, where the calculated paths were incorrectly
    formatted. This has been fixed.

    (Issue tracker: #18900)

  - Web server: A number of 1024 connections is a hard limit for the web
    server to keep open at a time. Anything beyond that gets terminated
    immediately. A bug triggered this limit to shrink down every time the
    limit was reached, eventually taking the server down by denying any
    connections to be opened. This has been fixed.

  - Web server: In rare cases web server could crash when writing to the web
    UI browser log. This has been fixed.

    (Issue tracker: #19042)

  - Web server: When accessing "/" from an authenticated browser, an
    internal error would show up. This has been fixed.

    (Issue tracker: #18982, #18813)
