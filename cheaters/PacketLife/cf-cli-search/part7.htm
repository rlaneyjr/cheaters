<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Anchoring</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part6.htm">&lt; Previous</a><span> | </span><a href="../cf-cli-search.html">Contents</a><span> | </span><a href="part8.htm">Next &gt;</a></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: justify;"><a name="bookmark7">Alternation allows you to specify alternative patterns to match against a string. You separate the alternative patterns with a vertical bar (</a><b>|</b>). Exactly one of the alternatives can match the string. For example, the regular expression <b>codex|telebit </b>matches the string codex or the string telebit, but not both codex and telebit.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><h4 style="padding-top: 5pt;padding-left: 30pt;text-indent: 0pt;text-align: left;">Anchoring</h4><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 9pt;text-indent: 0pt;text-align: left;">You can instruct Cisco IOS software to match a regular expression pattern against the beginning or the end of the string. That is, you can specify that the beginning or end of a string contain a specific pattern. You <span class="s3">“</span>anchor<span class="s3">” </span>these regular expressions to a portion of the string using the special characters shown in the table below.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s6" style="padding-left: 9pt;text-indent: 0pt;text-align: left;">Table 3: Special Characters Used for Anchoring</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:98.709pt" cellspacing="0"><tr style="height:19pt"><td style="width:216pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s7" style="padding-top: 2pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">Character</p></td><td style="width:216pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s7" style="padding-top: 2pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">Description</p></td></tr><tr style="height:24pt"><td style="width:216pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s8" style="padding-top: 2pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">^</p></td><td style="width:216pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s8" style="padding-top: 2pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">Matches the beginning of the string.</p></td></tr><tr style="height:24pt"><td style="width:216pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s8" style="padding-top: 2pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">$</p></td><td style="width:216pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s8" style="padding-top: 2pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">Matches the end of the string.</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="701" height="27" alt="image" src="Image_014.png"/></span></p><p class="s4" style="padding-bottom: 1pt;padding-left: 57pt;text-indent: 0pt;text-align: left;">Configuration Fundamentals Configuration Guide, Cisco IOS Release 15SY</p><p class="s5" style="text-indent: 0pt;text-align: center;">4</p><p class="s5" style="text-indent: 0pt;text-align: center;">4</p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;"/><p class="s5" style="text-indent: 0pt;text-align: center;">4</p><p style="text-indent: 0pt;text-align: left;"><span><img width="701" height="29" alt="image" src="Image_015.png"/></span></p><p class="s4" style="padding-top: 3pt;padding-left: 33pt;text-indent: 0pt;text-align: left;">Searching and Filtering CLI Output</p><p class="s4" style="padding-top: 1pt;text-indent: 0pt;text-align: right;">Searching and Filtering show Commands</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 113pt;text-indent: 0pt;text-align: left;">For example, the regular expression <b>^con</b>matches any string that starts with con, and <b>$sole </b>matches any string that ends with sole.</p><p style="padding-top: 5pt;padding-left: 113pt;text-indent: 0pt;text-align: left;">In addition to indicating the beginning of a string, the ^ symbol can be used to indicate the logical function <span class="s3">“</span>not<span class="s3">” </span>when used in a bracketed range. For example, the expression <b>[^abcd]</b>indicates a range that matches any single letter, as long as it is not the letters a, b, c, or d.</p><p style="padding-top: 5pt;padding-left: 113pt;text-indent: 0pt;text-align: left;">Contrast these anchoring characters with the special character underscore (_). Underscore matches the beginning of a string (^), the end of a string ($), parentheses (( )), space ( ), braces ({}), comma (,), or underscore (_). With the underscore character, you can specify that a pattern exist anywhere in the string. For example,</p><p class="s1" style="padding-left: 113pt;text-indent: 0pt;text-align: justify;">_1300_<span class="p">matches any string that has 1300 somewhere in the string. The string 1300 can be preceded by or end with a space, brace, comma, or underscore. So, although {1300_matches the regular expression </span>_1300_<span class="p">, 21300 and 13000 do not.</span></p><p style="padding-top: 4pt;padding-left: 113pt;text-indent: 0pt;text-align: left;">Using the underscore character, you can replace long regular expression lists. For example, instead of specifying</p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part6.htm">&lt; Previous</a><span> | </span><a href="../cf-cli-search.html">Contents</a><span> | </span><a href="part8.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
